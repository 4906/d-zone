diff --git a/dist/index.es.js b/dist/index.es.js
index 36b7965949c68ef479018757db41dbbfa95fb13e..04dd6a7f85ef9883604a77e7d84d5517582bc0ec 100644
--- a/dist/index.es.js
+++ b/dist/index.es.js
@@ -1,199 +1,54 @@
-import { statSync, existsSync, readFileSync } from 'fs';
 import { basename, extname, dirname, sep, resolve, join } from 'path';
 import { makeLegalIdentifier, attachScopes, extractAssignedNames, createFilter } from '@rollup/pluginutils';
 import getCommonDir from 'commondir';
-import glob from 'glob';
+import { existsSync, readFileSync, statSync } from 'fs';
 import { walk } from 'estree-walker';
 import MagicString from 'magic-string';
 import { sync } from 'resolve';
 import isReference from 'is-reference';
-
-function _slicedToArray(arr, i) {
-  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
-}
-
-function _arrayWithHoles(arr) {
-  if (Array.isArray(arr)) return arr;
-}
-
-function _iterableToArrayLimit(arr, i) {
-  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
-  var _arr = [];
-  var _n = true;
-  var _d = false;
-  var _e = undefined;
-
-  try {
-    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
-      _arr.push(_s.value);
-
-      if (i && _arr.length === i) break;
-    }
-  } catch (err) {
-    _d = true;
-    _e = err;
-  } finally {
-    try {
-      if (!_n && _i["return"] != null) _i["return"]();
-    } finally {
-      if (_d) throw _e;
-    }
-  }
-
-  return _arr;
-}
-
-function _unsupportedIterableToArray(o, minLen) {
-  if (!o) return;
-  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
-  var n = Object.prototype.toString.call(o).slice(8, -1);
-  if (n === "Object" && o.constructor) n = o.constructor.name;
-  if (n === "Map" || n === "Set") return Array.from(n);
-  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
-}
-
-function _arrayLikeToArray(arr, len) {
-  if (len == null || len > arr.length) len = arr.length;
-
-  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
-
-  return arr2;
-}
-
-function _nonIterableRest() {
-  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
-}
-
-function _createForOfIteratorHelper(o) {
-  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
-    if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {
-      var i = 0;
-
-      var F = function () {};
-
-      return {
-        s: F,
-        n: function () {
-          if (i >= o.length) return {
-            done: true
-          };
-          return {
-            done: false,
-            value: o[i++]
-          };
-        },
-        e: function (e) {
-          throw e;
-        },
-        f: F
-      };
-    }
-
-    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
-  }
-
-  var it,
-      normalCompletion = true,
-      didErr = false,
-      err;
-  return {
-    s: function () {
-      it = o[Symbol.iterator]();
-    },
-    n: function () {
-      var step = it.next();
-      normalCompletion = step.done;
-      return step;
-    },
-    e: function (e) {
-      didErr = true;
-      err = e;
-    },
-    f: function () {
-      try {
-        if (!normalCompletion && it.return != null) it.return();
-      } finally {
-        if (didErr) throw err;
-      }
-    }
-  };
-}
+import glob from 'glob';
 
 var peerDependencies = {
-	rollup: "^2.3.4"
-};
-
-/* eslint-disable no-undefined */
-const operators = {
-  '==': x => equals(x.left, x.right, false),
-  '!=': x => not(operators['=='](x)),
-  '===': x => equals(x.left, x.right, true),
-  '!==': x => not(operators['==='](x)),
-  '!': x => isFalsy(x.argument),
-  '&&': x => isTruthy(x.left) && isTruthy(x.right),
-  '||': x => isTruthy(x.left) || isTruthy(x.right)
+	rollup: "^2.22.0"
 };
-function flatten(node) {
-  const parts = [];
-
-  while (node.type === 'MemberExpression') {
-    if (node.computed) return null;
-    parts.unshift(node.property.name); // eslint-disable-next-line no-param-reassign
-
-    node = node.object;
-  }
-
-  if (node.type !== 'Identifier') return null;
-  const _node = node,
-        name = _node.name;
-  parts.unshift(name);
-  return {
-    name,
-    keypath: parts.join('.')
-  };
-}
-
-function isTruthy(node) {
-  if (node.type === 'Literal') return !!node.value;
-  if (node.type === 'ParenthesizedExpression') return isTruthy(node.expression);
-  if (node.operator in operators) return operators[node.operator](node);
-  return undefined;
-}
-function isFalsy(node) {
-  return not(isTruthy(node));
-}
-
-function not(value) {
-  return value === undefined ? value : !value;
-}
-
-function equals(a, b, strict) {
-  if (a.type !== b.type) return undefined; // eslint-disable-next-line eqeqeq
-
-  if (a.type === 'Literal') return strict ? a.value === b.value : a.value == b.value;
-  return undefined;
-}
 
 const PROXY_SUFFIX = '?commonjs-proxy';
-const getProxyId = id => `\0${id}${PROXY_SUFFIX}`;
-const getIdFromProxyId = proxyId => proxyId.slice(1, -PROXY_SUFFIX.length);
+const getProxyId = (id) => `\0${id}${PROXY_SUFFIX}`;
+const getIdFromProxyId = (proxyId) => proxyId.slice(1, -PROXY_SUFFIX.length);
+
 const EXTERNAL_SUFFIX = '?commonjs-external';
-const getExternalProxyId = id => `\0${id}${EXTERNAL_SUFFIX}`;
-const getIdFromExternalProxyId = proxyId => proxyId.slice(1, -EXTERNAL_SUFFIX.length);
+const getExternalProxyId = (id) => `\0${id}${EXTERNAL_SUFFIX}`;
+const getIdFromExternalProxyId = (proxyId) => proxyId.slice(1, -EXTERNAL_SUFFIX.length);
+
 const VIRTUAL_PATH_BASE = '/$$rollup_base$$';
 const getVirtualPathForDynamicRequirePath = (path, commonDir) => {
   if (path.startsWith(commonDir)) return VIRTUAL_PATH_BASE + path.slice(commonDir.length);
   return path;
 };
+
 const DYNAMIC_REGISTER_PREFIX = '\0commonjs-dynamic-register:';
 const DYNAMIC_JSON_PREFIX = '\0commonjs-dynamic-json:';
 const DYNAMIC_PACKAGES_ID = '\0commonjs-dynamic-packages';
-const HELPERS_ID = '\0commonjsHelpers.js'; // `x['default']` is used instead of `x.default` for backward compatibility with ES3 browsers.
-// Minifiers like uglify will usually transpile it back if compatibility with ES3 is not enabled.
 
+const HELPERS_ID = '\0commonjsHelpers.js';
+
+// `x['default']` is used instead of `x.default` for backward compatibility with ES3 browsers.
+// Minifiers like uglify will usually transpile it back if compatibility with ES3 is not enabled.
+// This will no longer be necessary once Rollup switches to ES6 output, likely
+// in Rollup 3
+
+// The "hasOwnProperty" call in "getDefaultExportFromCjs" is technically not
+// needed, but for consumers that use Rollup's old interop pattern, it will fix
+// rollup/rollup-plugin-commonjs#224
+// We should remove it once Rollup core and this plugin are updated to not use
+// this pattern any more
 const HELPERS = `
 export var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};
 
+export function getDefaultExportFromCjs (x) {
+	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
+}
+
 export function createCommonjsModule(fn, basedir, module) {
 	return module = {
 	  path: basedir,
@@ -204,15 +59,21 @@ export function createCommonjsModule(fn, basedir, module) {
 	}, fn(module, module.exports), module.exports;
 }
 
-export function getCjsExportFromNamespace (n) {
-	return n && n['default'] || n;
+export function getDefaultExportFromNamespaceIfPresent (n) {
+	return n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;
+}
+
+export function getDefaultExportFromNamespaceIfNotNamed (n) {
+	return n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;
 }
 `;
+
 const HELPER_NON_DYNAMIC = `
 export function commonjsRequire () {
 	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
 }
 `;
+
 const HELPERS_DYNAMIC = `
 export function commonjsRegister (path, loader) {
 	DYNAMIC_REQUIRE_LOADERS[path] = loader;
@@ -352,27 +213,92 @@ export function commonjsRequire (path, originalModuleDir) {
 commonjsRequire.cache = DYNAMIC_REQUIRE_CACHE;
 `;
 
+function getHelpersModule(isDynamicRequireModulesEnabled) {
+  return `${HELPERS}${isDynamicRequireModulesEnabled ? HELPERS_DYNAMIC : HELPER_NON_DYNAMIC}`;
+}
+
+/* eslint-disable no-undefined */
+
+const operators = {
+  '==': (x) => equals(x.left, x.right, false),
+
+  '!=': (x) => not(operators['=='](x)),
+
+  '===': (x) => equals(x.left, x.right, true),
+
+  '!==': (x) => not(operators['==='](x)),
+
+  '!': (x) => isFalsy(x.argument),
+
+  '&&': (x) => isTruthy(x.left) && isTruthy(x.right),
+
+  '||': (x) => isTruthy(x.left) || isTruthy(x.right)
+};
+
+function flatten(node) {
+  const parts = [];
+
+  while (node.type === 'MemberExpression') {
+    if (node.computed) return null;
+
+    parts.unshift(node.property.name);
+    // eslint-disable-next-line no-param-reassign
+    node = node.object;
+  }
+
+  if (node.type !== 'Identifier') return null;
+
+  const { name } = node;
+  parts.unshift(name);
+
+  return { name, keypath: parts.join('.') };
+}
+
+function isTruthy(node) {
+  if (node.type === 'Literal') return !!node.value;
+  if (node.type === 'ParenthesizedExpression') return isTruthy(node.expression);
+  if (node.operator in operators) return operators[node.operator](node);
+  return undefined;
+}
+
+function isFalsy(node) {
+  return not(isTruthy(node));
+}
+
+function not(value) {
+  return value === undefined ? value : !value;
+}
+
+function equals(a, b, strict) {
+  if (a.type !== b.type) return undefined;
+  // eslint-disable-next-line eqeqeq
+  if (a.type === 'Literal') return strict ? a.value === b.value : a.value == b.value;
+  return undefined;
+}
+
 /* eslint-disable import/prefer-default-export */
+
 function getName(id) {
   const name = makeLegalIdentifier(basename(id, extname(id)));
-
   if (name !== 'index') {
     return name;
   }
-
   const segments = dirname(id).split(sep);
   return makeLegalIdentifier(segments[segments.length - 1]);
 }
 
-const reserved = 'process location abstract arguments boolean break byte case catch char class const continue debugger default delete do double else enum eval export extends false final finally float for from function goto if implements import in instanceof int interface let long native new null package private protected public return short static super switch synchronized this throw throws transient true try typeof var void volatile while with yield'.split(' ');
-const blacklist = {
-  __esModule: true
-};
-reserved.forEach(word => blacklist[word] = true);
+/* eslint-disable no-param-reassign, no-shadow, no-underscore-dangle, no-continue */
+
+const reserved = 'process location abstract arguments boolean break byte case catch char class const continue debugger default delete do double else enum eval export extends false final finally float for from function goto if implements import in instanceof int interface let long native new null package private protected public return short static super switch synchronized this throw throws transient true try typeof var void volatile while with yield'.split(
+  ' '
+);
+const blacklist = { __esModule: true };
+reserved.forEach((word) => (blacklist[word] = true));
+
 const exportsPattern = /^(?:module\.)?exports(?:\.([a-zA-Z_$][a-zA-Z_$0-9]*))?$/;
+
 const firstpassGlobal = /\b(?:require|module|exports|global)\b/;
 const firstpassNoGlobal = /\b(?:require|module|exports)\b/;
-const importExportDeclaration = /^(?:Import|Export(?:Named|Default))Declaration/;
 const functionType = /^(?:FunctionDeclaration|FunctionExpression|ArrowFunctionExpression)$/;
 
 function deconflict(scope, globals, identifier) {
@@ -383,16 +309,14 @@ function deconflict(scope, globals, identifier) {
     deconflicted = `${identifier}_${i}`;
     i += 1;
   }
-
   scope.declarations[deconflicted] = true;
+
   return deconflicted;
 }
 
 function tryParse(parse, code, id) {
   try {
-    return parse(code, {
-      allowReturnOutsideFunction: true
-    });
+    return parse(code, { allowReturnOutsideFunction: true });
   } catch (err) {
     err.message += ` in ${id}`;
     throw err;
@@ -402,157 +326,160 @@ function tryParse(parse, code, id) {
 function normalizePathSlashes(path) {
   return path.replace(/\\/g, '/');
 }
+
 function hasCjsKeywords(code, ignoreGlobal) {
   const firstpass = ignoreGlobal ? firstpassNoGlobal : firstpassGlobal;
   return firstpass.test(code);
 }
+
 function checkEsModule(parse, code, id) {
   const ast = tryParse(parse, code, id);
-  let isEsModule = false;
-
-  var _iterator = _createForOfIteratorHelper(ast.body),
-      _step;
 
-  try {
-    for (_iterator.s(); !(_step = _iterator.n()).done;) {
-      const node = _step.value;
-      if (node.type === 'ExportDefaultDeclaration') return {
-        isEsModule: true,
-        hasDefaultExport: true,
-        ast
-      };
-
-      if (node.type === 'ExportNamedDeclaration') {
-        isEsModule = true;
-
-        var _iterator2 = _createForOfIteratorHelper(node.specifiers),
-            _step2;
-
-        try {
-          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
-            const specifier = _step2.value;
-
-            if (specifier.exported.name === 'default') {
-              return {
-                isEsModule: true,
-                hasDefaultExport: true,
-                ast
-              };
-            }
+  let isEsModule = false;
+  let hasDefaultExport = false;
+  let hasNamedExports = false;
+  for (const node of ast.body) {
+    if (node.type === 'ExportDefaultDeclaration') {
+      isEsModule = true;
+      hasDefaultExport = true;
+    } else if (node.type === 'ExportNamedDeclaration') {
+      isEsModule = true;
+      if (node.declaration) {
+        hasNamedExports = true;
+      } else {
+        for (const specifier of node.specifiers) {
+          if (specifier.exported.name === 'default') {
+            hasDefaultExport = true;
+          } else {
+            hasNamedExports = true;
           }
-        } catch (err) {
-          _iterator2.e(err);
-        } finally {
-          _iterator2.f();
         }
-      } else if (importExportDeclaration.test(node.type)) isEsModule = true;
+      }
+    } else if (node.type === 'ExportAllDeclaration') {
+      isEsModule = true;
+      if (node.exported && node.exported.name === 'default') {
+        hasDefaultExport = true;
+      } else {
+        hasNamedExports = true;
+      }
+    } else if (node.type === 'ImportDeclaration') {
+      isEsModule = true;
     }
-  } catch (err) {
-    _iterator.e(err);
-  } finally {
-    _iterator.f();
   }
 
-  return {
-    isEsModule,
-    hasDefaultExport: false,
-    ast
-  };
+  return { isEsModule, hasDefaultExport, hasNamedExports, ast };
 }
 
 function getDefinePropertyCallName(node, targetName) {
   if (node.type !== 'CallExpression') return;
-  const _node$callee = node.callee,
-        object = _node$callee.object,
-        property = _node$callee.property;
+
+  const {
+    callee: { object, property }
+  } = node;
+
   if (!object || object.type !== 'Identifier' || object.name !== 'Object') return;
-  if (!property || property.type !== 'Identifier' || property.name !== 'defineProperty') return;
-  if (node.arguments.length !== 3) return;
 
-  const _node$arguments = _slicedToArray(node.arguments, 2),
-        target = _node$arguments[0],
-        val = _node$arguments[1];
+  if (!property || property.type !== 'Identifier' || property.name !== 'defineProperty') return;
 
-  if (target.type !== 'Identifier' || target.name !== targetName) return; // eslint-disable-next-line consistent-return
+  if (node.arguments.length !== 3) return;
 
+  const [target, val] = node.arguments;
+  if (target.type !== 'Identifier' || target.name !== targetName) return;
+  // eslint-disable-next-line consistent-return
   return val.value;
 }
 
-function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, ignoreGlobal, ignoreRequire, sourceMap, isDynamicRequireModulesEnabled, dynamicRequireModuleSet, commonDir, astCache) {
+function transformCommonjs(
+  parse,
+  code,
+  id,
+  isEsModule,
+  ignoreGlobal,
+  ignoreRequire,
+  sourceMap,
+  isDynamicRequireModulesEnabled,
+  dynamicRequireModuleSet,
+  commonDir,
+  astCache
+) {
   const ast = astCache || tryParse(parse, code, id);
+
   const magicString = new MagicString(code);
-  const required = {}; // Because objects have no guaranteed ordering, yet we need it,
-  // we need to keep track of the order in a array
 
+  const required = {};
+  // Because objects have no guaranteed ordering, yet we need it,
+  // we need to keep track of the order in a array
   const sources = [];
+
   let uid = 0;
+
   let scope = attachScopes(ast, 'scope');
-  const uses = {
-    module: false,
-    exports: false,
-    global: false,
-    require: false
-  };
+  const uses = { module: false, exports: false, global: false, require: false };
+
   let lexicalDepth = 0;
   let programDepth = 0;
-  const globals = new Set(); // TODO technically wrong since globals isn't populated yet, but ¯\_(ツ)_/¯
 
+  const globals = new Set();
+
+  // TODO technically wrong since globals isn't populated yet, but ¯\_(ツ)_/¯
   const HELPERS_NAME = deconflict(scope, globals, 'commonjsHelpers');
-  const namedExports = {}; // TODO handle transpiled modules
 
+  const namedExports = {};
+
+  // TODO handle transpiled modules
   let shouldWrap = /__esModule/.test(code);
   let usesCommonjsHelpers = false;
 
   function isRequireStatement(node) {
     if (!node) return false;
-    if (node.type !== 'CallExpression') return false; // Weird case of `require()` or `module.require()` without arguments
+    if (node.type !== 'CallExpression') return false;
 
+    // Weird case of `require()` or `module.require()` without arguments
     if (node.arguments.length === 0) return false;
+
     return isRequireIdentifier(node.callee);
   }
 
   function isRequireIdentifier(node) {
     if (!node) return false;
 
-    if (node.type === 'Identifier' && node.name === 'require'
-    /* `require` */
-    ) {
-        // `require` is hidden by a variable in local scope
-        if (scope.contains('require')) return false;
-        return true;
-      } else if (node.type === 'MemberExpression'
-    /* `[something].[something]` */
-    ) {
-        // `module.[something]`
-        if (node.object.type !== 'Identifier' || node.object.name !== 'module') return false; // `module` is hidden by a variable in local scope
+    if (node.type === 'Identifier' && node.name === 'require' /* `require` */) {
+      // `require` is hidden by a variable in local scope
+      if (scope.contains('require')) return false;
 
-        if (scope.contains('module')) return false; // `module.require(...)`
+      return true;
+    } else if (node.type === 'MemberExpression' /* `[something].[something]` */) {
+      // `module.[something]`
+      if (node.object.type !== 'Identifier' || node.object.name !== 'module') return false;
 
-        if (node.property.type !== 'Identifier' || node.property.name !== 'require') return false;
-        return true;
-      }
+      // `module` is hidden by a variable in local scope
+      if (scope.contains('module')) return false;
+
+      // `module.require(...)`
+      if (node.property.type !== 'Identifier' || node.property.name !== 'require') return false;
+
+      return true;
+    }
 
     return false;
   }
 
   function hasDynamicArguments(node) {
-    return node.arguments.length > 1 || node.arguments[0].type !== 'Literal' && (node.arguments[0].type !== 'TemplateLiteral' || node.arguments[0].expressions.length > 0);
+    return (
+      node.arguments.length > 1 ||
+      (node.arguments[0].type !== 'Literal' &&
+        (node.arguments[0].type !== 'TemplateLiteral' || node.arguments[0].expressions.length > 0))
+    );
   }
 
   function isStaticRequireStatement(node) {
     if (!isRequireStatement(node)) return false;
-    if (hasDynamicArguments(node)) return false;
-    return true;
+    return !hasDynamicArguments(node);
   }
 
   function isNodeRequireStatement(parent) {
     const reservedMethod = ['resolve', 'cache', 'main'];
-
-    if (parent && parent.property && reservedMethod.indexOf(parent.property.name) > -1) {
-      return true;
-    }
-
-    return false;
+    return !!(parent && parent.property && reservedMethod.indexOf(parent.property.name) > -1);
   }
 
   function isIgnoredRequireStatement(requiredNode) {
@@ -560,19 +487,20 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
   }
 
   function getRequireStringArg(node) {
-    return node.arguments[0].type === 'Literal' ? node.arguments[0].value : node.arguments[0].quasis[0].value.cooked;
+    return node.arguments[0].type === 'Literal'
+      ? node.arguments[0].value
+      : node.arguments[0].quasis[0].value.cooked;
   }
 
   function getRequired(node, name) {
     let sourceId = getRequireStringArg(node);
     const isDynamicRegister = sourceId.startsWith(DYNAMIC_REGISTER_PREFIX);
-
     if (isDynamicRegister) {
       sourceId = sourceId.substr(DYNAMIC_REGISTER_PREFIX.length);
     }
 
-    const existing = required[sourceId]; // eslint-disable-next-line no-undefined
-
+    const existing = required[sourceId];
+    // eslint-disable-next-line no-undefined
     if (existing === undefined) {
       const isDynamic = hasDynamicModuleForPath(sourceId);
 
@@ -591,12 +519,7 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
         sources.push([sourceId, !isDynamicRegister]);
       }
 
-      required[sourceId] = {
-        source: sourceId,
-        name,
-        importsDefault: false,
-        isDynamic
-      };
+      required[sourceId] = { source: sourceId, name, importsDefault: false, isDynamic };
     }
 
     return required[sourceId];
@@ -605,10 +528,9 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
   function hasDynamicModuleForPath(source) {
     if (!/[/\\]/.test(source)) {
       try {
-        const resolvedPath = normalizePathSlashes(sync(source, {
-          basedir: dirname(id)
-        }));
-
+        const resolvedPath = normalizePathSlashes(
+          sync(source, { basedir: dirname(id) })
+        );
         if (dynamicRequireModuleSet.has(resolvedPath)) {
           return true;
         }
@@ -620,10 +542,8 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
       return false;
     }
 
-    for (var _i = 0, _arr = ['', '.js', '.json']; _i < _arr.length; _i++) {
-      const attemptExt = _arr[_i];
+    for (const attemptExt of ['', '.js', '.json']) {
       const resolvedPath = normalizePathSlashes(resolve(dirname(id), source + attemptExt));
-
       if (dynamicRequireModuleSet.has(resolvedPath)) {
         return true;
       }
@@ -633,38 +553,41 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
   }
 
   function shouldUseSimulatedRequire(required) {
-    return hasDynamicModuleForPath(required.source) && ( // We only do `commonjsRequire` for json if it's the `commonjsRegister` call.
-    required.source.startsWith(DYNAMIC_REGISTER_PREFIX) || !required.source.endsWith('.json'));
-  } // do a first pass, see which names are assigned to. This is necessary to prevent
+    return (
+      hasDynamicModuleForPath(required.source) &&
+      // We only do `commonjsRequire` for json if it's the `commonjsRegister` call.
+      (required.source.startsWith(DYNAMIC_REGISTER_PREFIX) || !required.source.endsWith('.json'))
+    );
+  }
+
+  // do a first pass, see which names are assigned to. This is necessary to prevent
   // illegally replacing `var foo = require('foo')` with `import foo from 'foo'`,
   // where `foo` is later reassigned. (This happens in the wild. CommonJS, sigh)
-
-
   const assignedTo = new Set();
   walk(ast, {
     enter(node) {
       if (node.type !== 'AssignmentExpression') return;
       if (node.left.type === 'MemberExpression') return;
-      extractAssignedNames(node.left).forEach(name => {
+
+      extractAssignedNames(node.left).forEach((name) => {
         assignedTo.add(name);
       });
     }
-
   });
+
   walk(ast, {
     enter(node, parent) {
       if (sourceMap) {
         magicString.addSourcemapLocation(node.start);
         magicString.addSourcemapLocation(node.end);
-      } // skip dead branches
-
+      }
 
+      // skip dead branches
       if (parent && (parent.type === 'IfStatement' || parent.type === 'ConditionalExpression')) {
         if (node === parent.consequent && isFalsy(parent.test)) {
           this.skip();
           return;
         }
-
         if (node === parent.alternate && isTruthy(parent.test)) {
           this.skip();
           return;
@@ -678,45 +601,44 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
 
       programDepth += 1;
 
-      if (node.scope) {
-        scope = node.scope;
-      }
-
-      if (functionType.test(node.type)) lexicalDepth += 1; // if toplevel return, we need to wrap it
+      if (node.scope) ({ scope } = node);
+      if (functionType.test(node.type)) lexicalDepth += 1;
 
+      // if toplevel return, we need to wrap it
       if (node.type === 'ReturnStatement' && lexicalDepth === 0) {
         shouldWrap = true;
-      } // rewrite `this` as `commonjsHelpers.commonjsGlobal`
-
+      }
 
+      // rewrite `this` as `commonjsHelpers.commonjsGlobal`
       if (node.type === 'ThisExpression' && lexicalDepth === 0) {
         uses.global = true;
-
         if (!ignoreGlobal) {
           magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsGlobal`, {
             storeName: true
           });
           usesCommonjsHelpers = true;
         }
-
         return;
-      } // rewrite `typeof module`, `typeof module.exports` and `typeof exports` (https://github.com/rollup/rollup-plugin-commonjs/issues/151)
-
+      }
 
+      // rewrite `typeof module`, `typeof module.exports` and `typeof exports` (https://github.com/rollup/rollup-plugin-commonjs/issues/151)
       if (node.type === 'UnaryExpression' && node.operator === 'typeof') {
         const flattened = flatten(node.argument);
         if (!flattened) return;
+
         if (scope.contains(flattened.name)) return;
 
-        if (flattened.keypath === 'module.exports' || flattened.keypath === 'module' || flattened.keypath === 'exports') {
-          magicString.overwrite(node.start, node.end, `'object'`, {
-            storeName: false
-          });
+        if (
+          flattened.keypath === 'module.exports' ||
+          flattened.keypath === 'module' ||
+          flattened.keypath === 'exports'
+        ) {
+          magicString.overwrite(node.start, node.end, `'object'`, { storeName: false });
         }
-      } // rewrite `require` (if not already handled) `global` and `define`, and handle free references to
-      // `module` and `exports` as these mean we need to wrap the module in commonjsHelpers.createCommonjsModule
-
+      }
 
+      // rewrite `require` (if not already handled) `global` and `define`, and handle free references to
+      // `module` and `exports` as these mean we need to wrap the module in commonjsHelpers.createCommonjsModule
       if (node.type === 'Identifier') {
         if (isReference(node, parent) && !scope.contains(node.name)) {
           if (node.name in uses) {
@@ -730,9 +652,17 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
               }
 
               if (isDynamicRequireModulesEnabled && isRequireStatement(parent)) {
-                magicString.appendLeft(parent.end - 1, `,${JSON.stringify(dirname(id) === '.' ? null
-                /* default behavior */
-                : getVirtualPathForDynamicRequirePath(normalizePathSlashes(dirname(id)), commonDir))}`);
+                magicString.appendLeft(
+                  parent.end - 1,
+                  `,${JSON.stringify(
+                    dirname(id) === '.'
+                      ? null /* default behavior */
+                      : getVirtualPathForDynamicRequirePath(
+                          normalizePathSlashes(dirname(id)),
+                          commonDir
+                        )
+                  )}`
+                );
               }
 
               magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsRequire`, {
@@ -742,51 +672,54 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
             }
 
             uses[node.name] = true;
-
             if (node.name === 'global' && !ignoreGlobal) {
               magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsGlobal`, {
                 storeName: true
               });
               usesCommonjsHelpers = true;
-            } // if module or exports are used outside the context of an assignment
-            // expression, we need to wrap the module
-
+            }
 
+            // if module or exports are used outside the context of an assignment
+            // expression, we need to wrap the module
             if (node.name === 'module' || node.name === 'exports') {
               shouldWrap = true;
             }
           }
 
           if (node.name === 'define') {
-            magicString.overwrite(node.start, node.end, 'undefined', {
-              storeName: true
-            });
+            magicString.overwrite(node.start, node.end, 'undefined', { storeName: true });
           }
 
           globals.add(node.name);
         }
 
         return;
-      } // Is this an assignment to exports or module.exports?
-
+      }
 
+      // Is this an assignment to exports or module.exports?
       if (node.type === 'AssignmentExpression') {
         if (node.left.type !== 'MemberExpression') return;
+
         const flattened = flatten(node.left);
         if (!flattened) return;
+
         if (scope.contains(flattened.name)) return;
+
         const match = exportsPattern.exec(flattened.keypath);
         if (!match || flattened.keypath === 'exports') return;
-        uses[flattened.name] = true; // we're dealing with `module.exports = ...` or `[module.]exports.foo = ...` –
-        // if this isn't top-level, we'll need to wrap the module
 
+        uses[flattened.name] = true;
+
+        // we're dealing with `module.exports = ...` or `[module.]exports.foo = ...` –
+        // if this isn't top-level, we'll need to wrap the module
         if (programDepth > 3) shouldWrap = true;
+
         node.left._skip = true;
 
         if (flattened.keypath === 'module.exports' && node.right.type === 'ObjectExpression') {
-          node.right.properties.forEach(prop => {
+          node.right.properties.forEach((prop) => {
             if (prop.computed || !('key' in prop) || prop.key.type !== 'Identifier') return;
-            const name = prop.key.name;
+            const { name } = prop.key;
             if (name === makeLegalIdentifier(name)) namedExports[name] = true;
           });
           return;
@@ -797,13 +730,21 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
       }
 
       const name = getDefinePropertyCallName(node, 'exports');
-      if (name && name === makeLegalIdentifier(name)) namedExports[name] = true; // if this is `var x = require('x')`, we can do `import x from 'x'`
-
-      if (node.type === 'VariableDeclarator' && node.id.type === 'Identifier' && isStaticRequireStatement(node.init) && !isIgnoredRequireStatement(node.init)) {
+      if (name && name === makeLegalIdentifier(name)) namedExports[name] = true;
+
+      // if this is `var x = require('x')`, we can do `import x from 'x'`
+      if (
+        node.type === 'VariableDeclarator' &&
+        node.id.type === 'Identifier' &&
+        isStaticRequireStatement(node.init) &&
+        !isIgnoredRequireStatement(node.init)
+      ) {
         // for now, only do this for top-level requires. maybe fix this in future
-        if (scope.parent) return; // edge case — CJS allows you to assign to imports. ES doesn't
+        if (scope.parent) return;
 
+        // edge case — CJS allows you to assign to imports. ES doesn't
         if (assignedTo.has(node.id.name)) return;
+
         const required = getRequired(node.init, node.id.name);
         required.importsDefault = true;
 
@@ -825,9 +766,17 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
         required.importsDefault = true;
 
         if (shouldUseSimulatedRequire(required)) {
-          magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsRequire(${JSON.stringify(getVirtualPathForDynamicRequirePath(normalizePathSlashes(required.source), commonDir))}, ${JSON.stringify(dirname(id) === '.' ? null
-          /* default behavior */
-          : getVirtualPathForDynamicRequirePath(normalizePathSlashes(dirname(id)), commonDir))})`);
+          magicString.overwrite(
+            node.start,
+            node.end,
+            `${HELPERS_NAME}.commonjsRequire(${JSON.stringify(
+              getVirtualPathForDynamicRequirePath(normalizePathSlashes(required.source), commonDir)
+            )}, ${JSON.stringify(
+              dirname(id) === '.'
+                ? null /* default behavior */
+                : getVirtualPathForDynamicRequirePath(normalizePathSlashes(dirname(id)), commonDir)
+            )})`
+          );
           usesCommonjsHelpers = true;
         } else {
           magicString.overwrite(node.start, node.end, required.name);
@@ -866,36 +815,58 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
         }
       }
     }
-
   });
 
-  if (!sources.length && !uses.module && !uses.exports && !uses.require && (ignoreGlobal || !uses.global)) {
+  if (
+    !sources.length &&
+    !uses.module &&
+    !uses.exports &&
+    !uses.require &&
+    (ignoreGlobal || !uses.global)
+  ) {
     // not a CommonJS module
     return null;
-  } // If `isEsModule` is on, it means it has ES6 import/export statements,
-  //   which just can't be wrapped in a function.
-
+  }
 
+  // If `isEsModule` is on, it means it has ES6 import/export statements,
+  //   which just can't be wrapped in a function.
   if (isEsModule) shouldWrap = false;
+
   usesCommonjsHelpers = usesCommonjsHelpers || shouldWrap;
-  const importBlock = `${(usesCommonjsHelpers ? [`import * as ${HELPERS_NAME} from '${HELPERS_ID}';`] : []).concat(sources.map(([source]) => // import the actual module before the proxy, so that we know
-  // what kind of proxy to build
-  `import '${source}';`), sources.filter(([, importProxy]) => importProxy).map(([source]) => {
-    const _required$source = required[source],
-          name = _required$source.name,
-          importsDefault = _required$source.importsDefault;
-    return `import ${importsDefault ? `${name} from ` : ``}'${getProxyId(source)}';`;
-  })).join('\n')}\n\n`;
+
+  const importBlock = `${(usesCommonjsHelpers
+    ? [`import * as ${HELPERS_NAME} from '${HELPERS_ID}';`]
+    : []
+  )
+    .concat(
+      sources.map(
+        ([source]) =>
+          // import the actual module before the proxy, so that we know
+          // what kind of proxy to build
+          `import '${source}';`
+      ),
+      sources
+        .filter(([, importProxy]) => importProxy)
+        .map(([source]) => {
+          const { name, importsDefault } = required[source];
+          return `import ${importsDefault ? `${name} from ` : ``}'${
+            source.startsWith('\0') ? source : getProxyId(source)
+          }';`;
+        })
+    )
+    .join('\n')}\n\n`;
+
   const namedExportDeclarations = [];
   let wrapperStart = '';
   let wrapperEnd = '';
-  const moduleName = deconflict(scope, globals, getName(id));
 
-  if ((!isEntry || hasImporters) && !isEsModule) {
+  const moduleName = deconflict(scope, globals, getName(id));
+  if (!isEsModule) {
     const exportModuleExports = {
       str: `export { ${moduleName} as __moduleExports };`,
       name: '__moduleExports'
     };
+
     namedExportDeclarations.push(exportModuleExports);
   }
 
@@ -904,149 +875,176 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
 
   if (shouldWrap) {
     const args = `module${uses.exports ? ', exports' : ''}`;
+
     wrapperStart = `var ${moduleName} = ${HELPERS_NAME}.createCommonjsModule(function (${args}) {\n`;
-    wrapperEnd = `\n}`;
 
+    wrapperEnd = `\n}`;
     if (isDynamicRequireModulesEnabled) {
-      wrapperEnd += `, ${JSON.stringify(getVirtualPathForDynamicRequirePath(normalizePathSlashes(dirname(id)), commonDir))}`;
+      wrapperEnd += `, ${JSON.stringify(
+        getVirtualPathForDynamicRequirePath(normalizePathSlashes(dirname(id)), commonDir)
+      )}`;
     }
 
     wrapperEnd += `);`;
   } else {
     const names = [];
 
-    var _iterator3 = _createForOfIteratorHelper(ast.body),
-        _step3;
+    for (const node of ast.body) {
+      if (node.type === 'ExpressionStatement' && node.expression.type === 'AssignmentExpression') {
+        const { left } = node.expression;
+        const flattened = flatten(left);
 
-    try {
-      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
-        const node = _step3.value;
+        if (!flattened) {
+          continue;
+        }
 
-        if (node.type === 'ExpressionStatement' && node.expression.type === 'AssignmentExpression') {
-          const left = node.expression.left;
-          const flattened = flatten(left);
+        const match = exportsPattern.exec(flattened.keypath);
+        if (!match) {
+          continue;
+        }
 
-          if (!flattened) {
-            continue;
-          }
+        if (flattened.keypath === 'module.exports') {
+          hasDefaultExport = true;
+          magicString.overwrite(left.start, left.end, `var ${moduleName}`);
+        } else {
+          const [, name] = match;
+          const deconflicted = deconflict(scope, globals, name);
 
-          const match = exportsPattern.exec(flattened.keypath);
+          names.push({ name, deconflicted });
 
-          if (!match) {
-            continue;
-          }
+          magicString.overwrite(node.start, left.end, `var ${deconflicted}`);
 
-          if (flattened.keypath === 'module.exports') {
-            hasDefaultExport = true;
-            magicString.overwrite(left.start, left.end, `var ${moduleName}`);
-          } else {
-            const _match = _slicedToArray(match, 2),
-                  name = _match[1];
+          const declaration =
+            name === deconflicted
+              ? `export { ${name} };`
+              : `export { ${deconflicted} as ${name} };`;
 
-            const deconflicted = deconflict(scope, globals, name);
-            names.push({
-              name,
-              deconflicted
+          if (name !== 'default') {
+            namedExportDeclarations.push({
+              str: declaration,
+              name
             });
-            magicString.overwrite(node.start, left.end, `var ${deconflicted}`);
-            const declaration = name === deconflicted ? `export { ${name} };` : `export { ${deconflicted} as ${name} };`;
-
-            if (name !== 'default') {
-              namedExportDeclarations.push({
-                str: declaration,
-                name
-              });
-            }
-
-            defaultExportPropertyAssignments.push(`${moduleName}.${name} = ${deconflicted};`);
           }
+
+          defaultExportPropertyAssignments.push(`${moduleName}.${name} = ${deconflicted};`);
         }
       }
-    } catch (err) {
-      _iterator3.e(err);
-    } finally {
-      _iterator3.f();
     }
 
-    if (!hasDefaultExport && (names.length || (!isEntry || hasImporters) && !isEsModule)) {
-      wrapperEnd = `\n\nvar ${moduleName} = {\n${names.map(({
-        name,
-        deconflicted
-      }) => `\t${name}: ${deconflicted}`).join(',\n')}\n};`;
+    if (!(isEsModule || hasDefaultExport)) {
+      wrapperEnd = `\n\nvar ${moduleName} = {\n${names
+        .map(({ name, deconflicted }) => `\t${name}: ${deconflicted}`)
+        .join(',\n')}\n};`;
     }
   }
 
-  const defaultExport = `export default ${moduleName};`;
-  const named = namedExportDeclarations.filter(x => x.name !== 'default' || !hasDefaultExport).map(x => x.str);
-  const exportBlock = `\n\n${(isEsModule ? [] : [defaultExport]).concat(named).concat(hasDefaultExport ? defaultExportPropertyAssignments : []).join('\n')}`;
-  magicString.trim().prepend(importBlock + wrapperStart).trim().append(wrapperEnd);
-  const injectExportBlock = hasDefaultExport || named.length > 0 || shouldWrap || !isEntry || hasImporters;
+  magicString
+    .trim()
+    .prepend(importBlock + wrapperStart)
+    .trim()
+    .append(wrapperEnd);
 
-  if (injectExportBlock) {
-    magicString.append(exportBlock);
-  }
+  const defaultExport =
+    code.indexOf('__esModule') >= 0
+      ? `export default /*@__PURE__*/${HELPERS_NAME}.getDefaultExportFromCjs(${moduleName});`
+      : `export default ${moduleName};`;
+
+  const named = namedExportDeclarations
+    .filter((x) => x.name !== 'default' || !hasDefaultExport)
+    .map((x) => x.str);
+
+  magicString.append(
+    `\n\n${(isEsModule ? [] : [defaultExport])
+      .concat(named)
+      .concat(hasDefaultExport ? defaultExportPropertyAssignments : [])
+      .join('\n')}`
+  );
 
   code = magicString.toString();
   const map = sourceMap ? magicString.generateMap() : null;
-  return {
-    code,
-    map,
-    syntheticNamedExports: injectExportBlock
-  };
+
+  return { code, map, syntheticNamedExports: isEsModule ? false : '__moduleExports' };
 }
 
-function getDynamicRequirePaths(patterns) {
-  const dynamicRequireModuleSet = new Set();
+function getDynamicPackagesModule(dynamicRequireModuleDirPaths, commonDir) {
+  let code = `const commonjsRegister = require('${HELPERS_ID}?commonjsRegister');`;
+  for (const dir of dynamicRequireModuleDirPaths) {
+    let entryPoint = 'index.js';
+
+    try {
+      if (existsSync(join(dir, 'package.json'))) {
+        entryPoint =
+          JSON.parse(readFileSync(join(dir, 'package.json'), { encoding: 'utf8' })).main ||
+          entryPoint;
+      }
+    } catch (ignored) {
+      // ignored
+    }
 
-  var _iterator = _createForOfIteratorHelper(!patterns || Array.isArray(patterns) ? patterns || [] : [patterns]),
-      _step;
+    code += `\ncommonjsRegister(${JSON.stringify(
+      getVirtualPathForDynamicRequirePath(dir, commonDir)
+    )}, function (module, exports) {
+  module.exports = require(${JSON.stringify(normalizePathSlashes(join(dir, entryPoint)))});
+});`;
+  }
+  return code;
+}
 
+function getDynamicPackagesEntryIntro(
+  id,
+  dynamicRequireModuleDirPaths,
+  dynamicRequireModuleSet
+) {
   try {
-    for (_iterator.s(); !(_step = _iterator.n()).done;) {
-      const pattern = _step.value;
-      const isNegated = pattern.startsWith('!');
-      const modifySet = Set.prototype[isNegated ? 'delete' : 'add'].bind(dynamicRequireModuleSet);
+    const code = readFileSync(id, { encoding: 'utf8' });
+    let dynamicImports = Array.from(
+      dynamicRequireModuleSet,
+      (dynamicId) => `require(${JSON.stringify(DYNAMIC_REGISTER_PREFIX + dynamicId)});`
+    ).join('\n');
+
+    if (dynamicRequireModuleDirPaths.length) {
+      dynamicImports += `require(${JSON.stringify(
+        DYNAMIC_REGISTER_PREFIX + DYNAMIC_PACKAGES_ID
+      )});`;
+    }
 
-      var _iterator2 = _createForOfIteratorHelper(glob.sync(isNegated ? pattern.substr(1) : pattern)),
-          _step2;
+    return `${dynamicImports}\n${code}`;
+  } catch (ex) {
+    this.warn(`Failed to read file ${id}, dynamic modules might not work correctly`);
+    return null;
+  }
+}
 
-      try {
-        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
-          const path = _step2.value;
-          modifySet(normalizePathSlashes(resolve(path)));
-        }
-      } catch (err) {
-        _iterator2.e(err);
-      } finally {
-        _iterator2.f();
-      }
+function getDynamicRequirePaths(patterns) {
+  const dynamicRequireModuleSet = new Set();
+  for (const pattern of !patterns || Array.isArray(patterns) ? patterns || [] : [patterns]) {
+    const isNegated = pattern.startsWith('!');
+    const modifySet = Set.prototype[isNegated ? 'delete' : 'add'].bind(dynamicRequireModuleSet);
+    for (const path of glob.sync(isNegated ? pattern.substr(1) : pattern)) {
+      modifySet(normalizePathSlashes(resolve(path)));
     }
-  } catch (err) {
-    _iterator.e(err);
-  } finally {
-    _iterator.f();
   }
-
-  const dynamicRequireModuleDirPaths = Array.from(dynamicRequireModuleSet.values()).filter(path => {
-    try {
-      if (statSync(path).isDirectory()) return true;
-    } catch (ignored) {// Nothing to do here
+  const dynamicRequireModuleDirPaths = Array.from(dynamicRequireModuleSet.values()).filter(
+    (path) => {
+      try {
+        if (statSync(path).isDirectory()) return true;
+      } catch (ignored) {
+        // Nothing to do here
+      }
+      return false;
     }
-
-    return false;
-  });
-  return {
-    dynamicRequireModuleSet,
-    dynamicRequireModuleDirPaths
-  };
+  );
+  return { dynamicRequireModuleSet, dynamicRequireModuleDirPaths };
 }
 
 /* eslint-disable no-undefined */
 const isCjsPromises = new Map();
+
 function getIsCjsPromise(id) {
   let isCjsPromise = isCjsPromises.get(id);
   if (isCjsPromise) return isCjsPromise.promise;
-  const promise = new Promise(resolve => {
+
+  const promise = new Promise((resolve) => {
     isCjsPromise = {
       resolve,
       promise: undefined
@@ -1054,22 +1052,79 @@ function getIsCjsPromise(id) {
     isCjsPromises.set(id, isCjsPromise);
   });
   isCjsPromise.promise = promise;
+
   return promise;
 }
+
 function setIsCjsPromise(id, resolution) {
   const isCjsPromise = isCjsPromises.get(id);
-
   if (isCjsPromise) {
     if (isCjsPromise.resolve) {
       isCjsPromise.resolve(resolution);
       isCjsPromise.resolve = undefined;
     }
   } else {
-    isCjsPromises.set(id, {
-      promise: Promise.resolve(resolution),
-      resolve: undefined
-    });
+    isCjsPromises.set(id, { promise: Promise.resolve(resolution), resolve: undefined });
+  }
+}
+
+// e.g. id === "commonjsHelpers?commonjsRegister"
+function getSpecificHelperProxy(id) {
+  return `export {${id.split('?')[1]} as default} from '${HELPERS_ID}';`;
+}
+
+function getUnknownRequireProxy(id, requireReturnsDefault) {
+  if (requireReturnsDefault === true || id.endsWith('.json')) {
+    return `export {default} from ${JSON.stringify(id)};`;
   }
+  const name = getName(id);
+  const exported =
+    requireReturnsDefault === 'auto'
+      ? `import {getDefaultExportFromNamespaceIfNotNamed} from "${HELPERS_ID}"; export default /*@__PURE__*/getDefaultExportFromNamespaceIfNotNamed(${name})`
+      : requireReturnsDefault === 'preferred'
+      ? `import {getDefaultExportFromNamespaceIfPresent} from "${HELPERS_ID}"; export default /*@__PURE__*/getDefaultExportFromNamespaceIfPresent(${name})`
+      : `export default ${name}`;
+  return `import * as ${name} from ${JSON.stringify(id)}; ${exported}`;
+}
+
+function getDynamicJsonProxy(id, commonDir) {
+  const normalizedPath = normalizePathSlashes(id.slice(DYNAMIC_JSON_PREFIX.length));
+  return `const commonjsRegister = require('${HELPERS_ID}?commonjsRegister');\ncommonjsRegister(${JSON.stringify(
+    getVirtualPathForDynamicRequirePath(normalizedPath, commonDir)
+  )}, function (module, exports) {
+  module.exports = require(${JSON.stringify(normalizedPath)});
+});`;
+}
+
+function getDynamicRequireProxy(normalizedPath, commonDir) {
+  return `const commonjsRegister = require('${HELPERS_ID}?commonjsRegister');\ncommonjsRegister(${JSON.stringify(
+    getVirtualPathForDynamicRequirePath(normalizedPath, commonDir)
+  )}, function (module, exports) {
+  ${readFileSync(normalizedPath, { encoding: 'utf8' })}
+});`;
+}
+
+async function getStaticRequireProxy(
+  id,
+  requireReturnsDefault,
+  esModulesWithDefaultExport,
+  esModulesWithNamedExports
+) {
+  const name = getName(id);
+  const isCjs = await getIsCjsPromise(id);
+  if (isCjs) {
+    return `import { __moduleExports } from ${JSON.stringify(id)}; export default __moduleExports;`;
+  } else if (isCjs === null) {
+    return getUnknownRequireProxy(id, requireReturnsDefault);
+  } else if (
+    requireReturnsDefault !== true &&
+    (!requireReturnsDefault ||
+      !esModulesWithDefaultExport.has(id) ||
+      (esModulesWithNamedExports.has(id) && requireReturnsDefault === 'auto'))
+  ) {
+    return `import * as ${name} from ${JSON.stringify(id)}; export default ${name};`;
+  }
+  return `export {default} from ${JSON.stringify(id)};`;
 }
 
 /* eslint-disable no-param-reassign, no-undefined */
@@ -1079,22 +1134,24 @@ function getCandidatesForExtension(resolved, extension) {
 }
 
 function getCandidates(resolved, extensions) {
-  return extensions.reduce((paths, extension) => paths.concat(getCandidatesForExtension(resolved, extension)), [resolved]);
+  return extensions.reduce(
+    (paths, extension) => paths.concat(getCandidatesForExtension(resolved, extension)),
+    [resolved]
+  );
 }
 
 function getResolveId(extensions) {
   function resolveExtensions(importee, importer) {
     // not our problem
     if (importee[0] !== '.' || !importer) return undefined;
+
     const resolved = resolve(dirname(importer), importee);
     const candidates = getCandidates(resolved, extensions);
 
     for (let i = 0; i < candidates.length; i += 1) {
       try {
         const stats = statSync(candidates[i]);
-        if (stats.isFile()) return {
-          id: candidates[i]
-        };
+        if (stats.isFile()) return { id: candidates[i] };
       } catch (err) {
         /* noop */
       }
@@ -1105,45 +1162,38 @@ function getResolveId(extensions) {
 
   function resolveId(importee, importer) {
     const isProxyModule = importee.endsWith(PROXY_SUFFIX);
-
     if (isProxyModule) {
       importee = getIdFromProxyId(importee);
-    } else if (importee.startsWith('\0')) {
-      if (importee === HELPERS_ID || importee === DYNAMIC_PACKAGES_ID || importee.startsWith(DYNAMIC_JSON_PREFIX)) {
+    }
+    if (importee.startsWith('\0')) {
+      if (
+        importee.startsWith(HELPERS_ID) ||
+        importee === DYNAMIC_PACKAGES_ID ||
+        importee.startsWith(DYNAMIC_JSON_PREFIX)
+      ) {
         return importee;
       }
-
-      return null;
-    }
-
-    if (importee.startsWith(DYNAMIC_JSON_PREFIX)) {
-      return importee;
+      if (!isProxyModule) {
+        return null;
+      }
     }
 
     if (importer && importer.endsWith(PROXY_SUFFIX)) {
       importer = getIdFromProxyId(importer);
     }
 
-    return this.resolve(importee, importer, {
-      skipSelf: true
-    }).then(resolved => {
+    return this.resolve(importee, importer, { skipSelf: true }).then((resolved) => {
       if (!resolved) {
         resolved = resolveExtensions(importee, importer);
       }
-
       if (isProxyModule) {
         if (!resolved) {
-          return {
-            id: getExternalProxyId(importee),
-            external: false
-          };
+          return { id: getExternalProxyId(importee), external: false };
         }
-
         resolved.id = (resolved.external ? getExternalProxyId : getProxyId)(resolved.id);
         resolved.external = false;
         return resolved;
       }
-
       return resolved;
     });
   }
@@ -1154,51 +1204,81 @@ function getResolveId(extensions) {
 function commonjs(options = {}) {
   const extensions = options.extensions || ['.js'];
   const filter = createFilter(options.include, options.exclude);
-  const ignoreGlobal = options.ignoreGlobal;
-
-  const _getDynamicRequirePat = getDynamicRequirePaths(options.dynamicRequireTargets),
-        dynamicRequireModuleSet = _getDynamicRequirePat.dynamicRequireModuleSet,
-        dynamicRequireModuleDirPaths = _getDynamicRequirePat.dynamicRequireModuleDirPaths;
-
+  const {
+    ignoreGlobal,
+    requireReturnsDefault: requireReturnsDefaultOption,
+    esmExternals
+  } = options;
+  const getRequireReturnsDefault =
+    typeof requireReturnsDefaultOption === 'function'
+      ? requireReturnsDefaultOption
+      : () => requireReturnsDefaultOption;
+  let esmExternalIds;
+  const isEsmExternal =
+    typeof esmExternals === 'function'
+      ? esmExternals
+      : Array.isArray(esmExternals)
+      ? ((esmExternalIds = new Set(esmExternals)), (id) => esmExternalIds.has(id))
+      : () => esmExternals;
+
+  const { dynamicRequireModuleSet, dynamicRequireModuleDirPaths } = getDynamicRequirePaths(
+    options.dynamicRequireTargets
+  );
   const isDynamicRequireModulesEnabled = dynamicRequireModuleSet.size > 0;
-  const commonDir = isDynamicRequireModulesEnabled ? getCommonDir(null, Array.from(dynamicRequireModuleSet).concat(process.cwd())) : null;
-  const esModulesWithoutDefaultExport = new Set();
-  const esModulesWithDefaultExport = new Set();
-  const ignoreRequire = typeof options.ignore === 'function' ? options.ignore : Array.isArray(options.ignore) ? id => options.ignore.includes(id) : () => false;
-  const resolveId = getResolveId(extensions);
-  const sourceMap = options.sourceMap !== false;
+  const commonDir = isDynamicRequireModulesEnabled
+    ? getCommonDir(null, Array.from(dynamicRequireModuleSet).concat(process.cwd()))
+    : null;
 
-  function transformAndCheckExports(code, id) {
-    const _checkEsModule = checkEsModule(this.parse, code, id),
-          isEsModule = _checkEsModule.isEsModule,
-          hasDefaultExport = _checkEsModule.hasDefaultExport,
-          ast = _checkEsModule.ast;
+  const esModulesWithDefaultExport = new Set();
+  const esModulesWithNamedExports = new Set();
 
-    const isDynamicRequireModule = dynamicRequireModuleSet.has(normalizePathSlashes(id));
+  const ignoreRequire =
+    typeof options.ignore === 'function'
+      ? options.ignore
+      : Array.isArray(options.ignore)
+      ? (id) => options.ignore.includes(id)
+      : () => false;
 
-    if (isEsModule && (!isDynamicRequireModule || !options.transformMixedEsModules)) {
-      (hasDefaultExport ? esModulesWithDefaultExport : esModulesWithoutDefaultExport).add(id);
+  const resolveId = getResolveId(extensions);
 
-      if (!options.transformMixedEsModules) {
-        setIsCjsPromise(id, false);
-        return null;
-      }
-    } // it is not an ES module AND it does not have CJS-specific elements.
-    else if (!hasCjsKeywords(code, ignoreGlobal)) {
-        esModulesWithoutDefaultExport.add(id);
-        setIsCjsPromise(id, false);
-        return null;
-      }
+  const sourceMap = options.sourceMap !== false;
 
-    const moduleInfo = this.getModuleInfo(id);
-    const transformed = transformCommonjs(this.parse, code, id, moduleInfo.isEntry, moduleInfo.importers && moduleInfo.importers.length > 0, isEsModule, ignoreGlobal || isEsModule, ignoreRequire, sourceMap, isDynamicRequireModulesEnabled, dynamicRequireModuleSet, commonDir, ast);
-    setIsCjsPromise(id, isEsModule ? false : Boolean(transformed));
+  function transformAndCheckExports(code, id) {
+    const { isEsModule, hasDefaultExport, hasNamedExports, ast } = checkEsModule(
+      this.parse,
+      code,
+      id
+    );
+    if (hasDefaultExport) {
+      esModulesWithDefaultExport.add(id);
+    }
+    if (hasNamedExports) {
+      esModulesWithNamedExports.add(id);
+    }
 
-    if (!transformed) {
-      if (!isEsModule || isDynamicRequireModule) esModulesWithoutDefaultExport.add(id);
+    if (
+      !dynamicRequireModuleSet.has(normalizePathSlashes(id)) &&
+      (!hasCjsKeywords(code, ignoreGlobal) || (isEsModule && !options.transformMixedEsModules))
+    ) {
+      setIsCjsPromise(id, false);
       return null;
     }
 
+    const transformed = transformCommonjs(
+      this.parse,
+      code,
+      id,
+      isEsModule,
+      ignoreGlobal || isEsModule,
+      ignoreRequire,
+      sourceMap,
+      isDynamicRequireModulesEnabled,
+      dynamicRequireModuleSet,
+      commonDir,
+      ast
+    );
+
+    setIsCjsPromise(id, isEsModule ? false : Boolean(transformed));
     return transformed;
   }
 
@@ -1207,23 +1287,18 @@ function commonjs(options = {}) {
 
     buildStart() {
       if (options.namedExports != null) {
-        this.warn('The namedExports option from "@rollup/plugin-commonjs" is deprecated. Named exports are now handled automatically.');
+        this.warn(
+          'The namedExports option from "@rollup/plugin-commonjs" is deprecated. Named exports are now handled automatically.'
+        );
       }
 
-      const _this$meta$rollupVers = this.meta.rollupVersion.split('.').map(Number),
-            _this$meta$rollupVers2 = _slicedToArray(_this$meta$rollupVers, 2),
-            major = _this$meta$rollupVers2[0],
-            minor = _this$meta$rollupVers2[1];
-
+      const [major, minor] = this.meta.rollupVersion.split('.').map(Number);
       const minVersion = peerDependencies.rollup.slice(2);
-
-      const _minVersion$split$map = minVersion.split('.').map(Number),
-            _minVersion$split$map2 = _slicedToArray(_minVersion$split$map, 2),
-            minMajor = _minVersion$split$map2[0],
-            minMinor = _minVersion$split$map2[1];
-
-      if (major < minMajor || major === minMajor && minor < minMinor) {
-        this.error(`Insufficient Rollup version: "@rollup/plugin-commonjs" requires at least rollup@${minVersion} but found rollup@${this.meta.rollupVersion}.`);
+      const [minMajor, minMinor] = minVersion.split('.').map(Number);
+      if (major < minMajor || (major === minMajor && minor < minMinor)) {
+        this.error(
+          `Insufficient Rollup version: "@rollup/plugin-commonjs" requires at least rollup@${minVersion} but found rollup@${this.meta.rollupVersion}.`
+        );
       }
     },
 
@@ -1231,125 +1306,65 @@ function commonjs(options = {}) {
 
     load(id) {
       if (id === HELPERS_ID) {
-        let code = HELPERS; // Do not bloat everyone's code with the module manager code
-
-        if (isDynamicRequireModulesEnabled) code += HELPERS_DYNAMIC;else code += HELPER_NON_DYNAMIC;
-        return code;
-      } // generate proxy modules
+        return getHelpersModule(isDynamicRequireModulesEnabled);
+      }
 
+      if (id.startsWith(HELPERS_ID)) {
+        return getSpecificHelperProxy(id);
+      }
 
       if (id.endsWith(EXTERNAL_SUFFIX)) {
         const actualId = getIdFromExternalProxyId(id);
-        const name = getName(actualId);
-        if (actualId === HELPERS_ID || actualId === DYNAMIC_PACKAGES_ID) // These do not export default
-          return `import * as ${name} from ${JSON.stringify(actualId)}; export default ${name};`;
-        return `import ${name} from ${JSON.stringify(actualId)}; export default ${name};`;
+        return getUnknownRequireProxy(
+          actualId,
+          isEsmExternal(actualId) ? getRequireReturnsDefault(actualId) : true
+        );
       }
 
       if (id === DYNAMIC_PACKAGES_ID) {
-        let code = `const { commonjsRegister } = require('${HELPERS_ID}');`;
-
-        var _iterator = _createForOfIteratorHelper(dynamicRequireModuleDirPaths),
-            _step;
-
-        try {
-          for (_iterator.s(); !(_step = _iterator.n()).done;) {
-            const dir = _step.value;
-            let entryPoint = 'index.js';
-
-            try {
-              if (existsSync(join(dir, 'package.json'))) {
-                entryPoint = JSON.parse(readFileSync(join(dir, 'package.json'), {
-                  encoding: 'utf8'
-                })).main || entryPoint;
-              }
-            } catch (ignored) {// ignored
-            }
-
-            code += `\ncommonjsRegister(${JSON.stringify(getVirtualPathForDynamicRequirePath(dir, commonDir))}, function (module, exports) {
-  module.exports = require(${JSON.stringify(normalizePathSlashes(join(dir, entryPoint)))});
-});`;
-          }
-        } catch (err) {
-          _iterator.e(err);
-        } finally {
-          _iterator.f();
-        }
-
-        return code;
+        return getDynamicPackagesModule(dynamicRequireModuleDirPaths, commonDir);
       }
 
-      let actualId = id;
-      const isDynamicJson = actualId.startsWith(DYNAMIC_JSON_PREFIX);
-
-      if (isDynamicJson) {
-        actualId = actualId.slice(DYNAMIC_JSON_PREFIX.length);
-      }
-
-      const normalizedPath = normalizePathSlashes(actualId);
-
-      if (isDynamicJson) {
-        return `require('${HELPERS_ID}').commonjsRegister(${JSON.stringify(getVirtualPathForDynamicRequirePath(normalizedPath, commonDir))}, function (module, exports) {
-  module.exports = require(${JSON.stringify(normalizedPath)});
-});`;
+      if (id.startsWith(DYNAMIC_JSON_PREFIX)) {
+        return getDynamicJsonProxy(id, commonDir);
       }
 
+      const normalizedPath = normalizePathSlashes(id);
       if (dynamicRequireModuleSet.has(normalizedPath) && !normalizedPath.endsWith('.json')) {
-        // Try our best to still export the module fully.
-        // The commonjs polyfill should take care of circular references.
-        return `require('${HELPERS_ID}').commonjsRegister(${JSON.stringify(getVirtualPathForDynamicRequirePath(normalizedPath, commonDir))}, function (module, exports) {
-  ${readFileSync(normalizedPath, {
-          encoding: 'utf8'
-        })}
-});`;
+        return getDynamicRequireProxy(normalizedPath, commonDir);
       }
 
-      if (actualId.endsWith(PROXY_SUFFIX)) {
-        actualId = getIdFromProxyId(actualId);
-        const name = getName(actualId);
-        return getIsCjsPromise(actualId).then(isCjs => {
-          if (dynamicRequireModuleSet.has(normalizePathSlashes(actualId)) && !actualId.endsWith('.json')) return `import {commonjsRequire} from '${HELPERS_ID}'; const ${name} = commonjsRequire(${JSON.stringify(getVirtualPathForDynamicRequirePath(normalizePathSlashes(actualId), commonDir))}); export default (${name} && ${name}['default']) || ${name}`;else if (isCjs) return `import { __moduleExports } from ${JSON.stringify(actualId)}; export default __moduleExports;`;else if (esModulesWithoutDefaultExport.has(actualId)) return `import * as ${name} from ${JSON.stringify(actualId)}; export default ${name};`;else if (esModulesWithDefaultExport.has(actualId)) {
-            return `export {default} from ${JSON.stringify(actualId)};`;
-          }
-          return `import * as ${name} from ${JSON.stringify(actualId)}; import {getCjsExportFromNamespace} from "${HELPERS_ID}"; export default getCjsExportFromNamespace(${name})`;
-        });
+      if (id.endsWith(PROXY_SUFFIX)) {
+        const actualId = getIdFromProxyId(id);
+        return getStaticRequireProxy(
+          actualId,
+          getRequireReturnsDefault(actualId),
+          esModulesWithDefaultExport,
+          esModulesWithNamedExports
+        );
       }
 
       if (isDynamicRequireModulesEnabled && this.getModuleInfo(id).isEntry) {
-        let code;
-
-        try {
-          code = readFileSync(actualId, {
-            encoding: 'utf8'
-          });
-        } catch (ex) {
-          this.warn(`Failed to read file ${actualId}, dynamic modules might not work correctly`);
-          return null;
-        }
-
-        let dynamicImports = Array.from(dynamicRequireModuleSet).map(dynamicId => `require(${JSON.stringify(DYNAMIC_REGISTER_PREFIX + dynamicId)});`).join('\n');
-
-        if (dynamicRequireModuleDirPaths.length) {
-          dynamicImports += `require(${JSON.stringify(DYNAMIC_REGISTER_PREFIX + DYNAMIC_PACKAGES_ID)});`;
-        }
-
-        code = `${dynamicImports}\n${code}`;
-        return code;
+        return getDynamicPackagesEntryIntro(
+          id,
+          dynamicRequireModuleDirPaths,
+          dynamicRequireModuleSet
+        );
       }
 
       return null;
     },
 
     transform(code, id) {
-      if (id !== DYNAMIC_PACKAGES_ID && !id.startsWith(DYNAMIC_JSON_PREFIX)) {
-        if (!filter(id) || extensions.indexOf(extname(id)) === -1) {
+      const extName = extname(id);
+      if (extName !== '.cjs' && id !== DYNAMIC_PACKAGES_ID && !id.startsWith(DYNAMIC_JSON_PREFIX)) {
+        if (!filter(id) || !extensions.includes(extName)) {
           setIsCjsPromise(id, null);
           return null;
         }
       }
 
       let transformed;
-
       try {
         transformed = transformAndCheckExports.call(this, code, id);
       } catch (err) {
@@ -1360,7 +1375,6 @@ function commonjs(options = {}) {
 
       return transformed;
     }
-
   };
 }
 
diff --git a/dist/index.es.js.map b/dist/index.es.js.map
index 0469bf72c0a333daf2c21d6d0057ec3abfb8f001..93438b08044a75c3d25bd4b8c0336b055b39582d 100644
--- a/dist/index.es.js.map
+++ b/dist/index.es.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.es.js","sources":["../src/ast-utils.js","../src/helpers.js","../src/utils.js","../src/transform.js","../src/dynamic-require-paths.js","../src/is-cjs.js","../src/resolve-id.js","../src/index.js"],"sourcesContent":["/* eslint-disable no-undefined */\nexport { default as isReference } from 'is-reference';\n\nconst operators = {\n  '==': (x) => equals(x.left, x.right, false),\n\n  '!=': (x) => not(operators['=='](x)),\n\n  '===': (x) => equals(x.left, x.right, true),\n\n  '!==': (x) => not(operators['==='](x)),\n\n  '!': (x) => isFalsy(x.argument),\n\n  '&&': (x) => isTruthy(x.left) && isTruthy(x.right),\n\n  '||': (x) => isTruthy(x.left) || isTruthy(x.right)\n};\n\nconst extractors = {\n  Identifier(names, node) {\n    names.push(node.name);\n  },\n\n  ObjectPattern(names, node) {\n    node.properties.forEach((prop) => {\n      getExtractor(prop.value.type)(names, prop.value);\n    });\n  },\n\n  ArrayPattern(names, node) {\n    node.elements.forEach((element) => {\n      if (!element) return;\n      getExtractor(element.type)(names, element);\n    });\n  },\n\n  RestElement(names, node) {\n    getExtractor(node.argument.type)(names, node.argument);\n  },\n\n  AssignmentPattern(names, node) {\n    getExtractor(node.left.type)(names, node.left);\n  }\n};\n\nexport function flatten(node) {\n  const parts = [];\n\n  while (node.type === 'MemberExpression') {\n    if (node.computed) return null;\n\n    parts.unshift(node.property.name);\n    // eslint-disable-next-line no-param-reassign\n    node = node.object;\n  }\n\n  if (node.type !== 'Identifier') return null;\n\n  const { name } = node;\n  parts.unshift(name);\n\n  return { name, keypath: parts.join('.') };\n}\n\nexport function extractNames(node) {\n  const names = [];\n  extractors[node.type](names, node);\n  return names;\n}\n\nfunction getExtractor(type) {\n  const extractor = extractors[type];\n  if (!extractor) throw new SyntaxError(`${type} pattern not supported.`);\n  return extractor;\n}\n\nexport function isTruthy(node) {\n  if (node.type === 'Literal') return !!node.value;\n  if (node.type === 'ParenthesizedExpression') return isTruthy(node.expression);\n  if (node.operator in operators) return operators[node.operator](node);\n  return undefined;\n}\n\nexport function isFalsy(node) {\n  return not(isTruthy(node));\n}\n\nfunction not(value) {\n  return value === undefined ? value : !value;\n}\n\nfunction equals(a, b, strict) {\n  if (a.type !== b.type) return undefined;\n  // eslint-disable-next-line eqeqeq\n  if (a.type === 'Literal') return strict ? a.value === b.value : a.value == b.value;\n  return undefined;\n}\n","export const PROXY_SUFFIX = '?commonjs-proxy';\nexport const getProxyId = (id) => `\\0${id}${PROXY_SUFFIX}`;\nexport const getIdFromProxyId = (proxyId) => proxyId.slice(1, -PROXY_SUFFIX.length);\n\nexport const EXTERNAL_SUFFIX = '?commonjs-external';\nexport const getExternalProxyId = (id) => `\\0${id}${EXTERNAL_SUFFIX}`;\nexport const getIdFromExternalProxyId = (proxyId) => proxyId.slice(1, -EXTERNAL_SUFFIX.length);\n\nexport const VIRTUAL_PATH_BASE = '/$$rollup_base$$';\nexport const getVirtualPathForDynamicRequirePath = (path, commonDir) => {\n  if (path.startsWith(commonDir)) return VIRTUAL_PATH_BASE + path.slice(commonDir.length);\n  return path;\n};\n\nexport const DYNAMIC_REGISTER_PREFIX = '\\0commonjs-dynamic-register:';\nexport const DYNAMIC_JSON_PREFIX = '\\0commonjs-dynamic-json:';\nexport const DYNAMIC_PACKAGES_ID = '\\0commonjs-dynamic-packages';\n\nexport const HELPERS_ID = '\\0commonjsHelpers.js';\n\n// `x['default']` is used instead of `x.default` for backward compatibility with ES3 browsers.\n// Minifiers like uglify will usually transpile it back if compatibility with ES3 is not enabled.\nexport const HELPERS = `\nexport var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nexport function createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t  path: basedir,\n\t  exports: {},\n\t  require: function (path, base) {\n      return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n    }\n\t}, fn(module, module.exports), module.exports;\n}\n\nexport function getCjsExportFromNamespace (n) {\n\treturn n && n['default'] || n;\n}\n`;\n\nexport const HELPER_NON_DYNAMIC = `\nexport function commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n`;\n\nexport const HELPERS_DYNAMIC = `\nexport function commonjsRegister (path, loader) {\n\tDYNAMIC_REQUIRE_LOADERS[path] = loader;\n}\n\nconst DYNAMIC_REQUIRE_LOADERS = Object.create(null);\nconst DYNAMIC_REQUIRE_CACHE = Object.create(null);\nconst DEFAULT_PARENT_MODULE = {\n\tid: '<' + 'rollup>', exports: {}, parent: undefined, filename: null, loaded: false, children: [], paths: []\n};\nconst CHECKED_EXTENSIONS = ['', '.js', '.json'];\n\nfunction normalize (path) {\n\tpath = path.replace(/\\\\\\\\/g, '/');\n\tconst parts = path.split('/');\n\tconst slashed = parts[0] === '';\n\tfor (let i = 1; i < parts.length; i++) {\n\t\tif (parts[i] === '.' || parts[i] === '') {\n\t\t\tparts.splice(i--, 1);\n\t\t}\n\t}\n\tfor (let i = 1; i < parts.length; i++) {\n\t\tif (parts[i] !== '..') continue;\n\t\tif (i > 0 && parts[i - 1] !== '..' && parts[i - 1] !== '.') {\n\t\t\tparts.splice(--i, 2);\n\t\t\ti--;\n\t\t}\n\t}\n\tpath = parts.join('/');\n\tif (slashed && path[0] !== '/')\n\t  path = '/' + path;\n\telse if (path.length === 0)\n\t  path = '.';\n\treturn path;\n}\n\nfunction join () {\n\tif (arguments.length === 0)\n\t  return '.';\n\tlet joined;\n\tfor (let i = 0; i < arguments.length; ++i) {\n\t  let arg = arguments[i];\n\t  if (arg.length > 0) {\n\t\tif (joined === undefined)\n\t\t  joined = arg;\n\t\telse\n\t\t  joined += '/' + arg;\n\t  }\n\t}\n\tif (joined === undefined)\n\t  return '.';\n\n\treturn joined;\n}\n\nfunction isPossibleNodeModulesPath (modulePath) {\n\tlet c0 = modulePath[0];\n\tif (c0 === '/' || c0 === '\\\\\\\\') return false;\n\tlet c1 = modulePath[1], c2 = modulePath[2];\n\tif ((c0 === '.' && (!c1 || c1 === '/' || c1 === '\\\\\\\\')) ||\n\t\t(c0 === '.' && c1 === '.' && (!c2 || c2 === '/' || c2 === '\\\\\\\\'))) return false;\n\tif (c1 === ':' && (c2 === '/' || c2 === '\\\\\\\\'))\n\t\treturn false;\n\treturn true;\n}\n\nfunction dirname (path) {\n  if (path.length === 0)\n    return '.';\n\n  let i = path.length - 1;\n  while (i > 0) {\n    const c = path.charCodeAt(i);\n    if ((c === 47 || c === 92) && i !== path.length - 1)\n      break;\n    i--;\n  }\n\n  if (i > 0)\n    return path.substr(0, i);\n\n  if (path.chartCodeAt(0) === 47 || path.chartCodeAt(0) === 92)\n    return path.charAt(0);\n\n  return '.';\n}\n\nexport function commonjsRequire (path, originalModuleDir) {\n\tconst shouldTryNodeModules = isPossibleNodeModulesPath(path);\n\tpath = normalize(path);\n\tlet relPath;\n\twhile (true) {\n\t\tif (!shouldTryNodeModules) {\n\t\t\trelPath = originalModuleDir ? normalize(originalModuleDir + '/' + path) : path;\n\t\t} else if (originalModuleDir) {\n\t\t\trelPath = normalize(originalModuleDir + '/node_modules/' + path);\n\t\t} else {\n\t\t\trelPath = normalize(join('node_modules', path));\n\t\t}\n\t\tfor (let extensionIndex = 0; extensionIndex < CHECKED_EXTENSIONS.length; extensionIndex++) {\n\t\t\tconst resolvedPath = relPath + CHECKED_EXTENSIONS[extensionIndex];\n\t\t\tlet cachedModule = DYNAMIC_REQUIRE_CACHE[resolvedPath];\n\t\t\tif (cachedModule) return cachedModule.exports;\n\t\t\tconst loader = DYNAMIC_REQUIRE_LOADERS[resolvedPath];\n\t\t\tif (loader) {\n\t\t\t\tDYNAMIC_REQUIRE_CACHE[resolvedPath] = cachedModule = {\n\t\t\t\t\tid: resolvedPath,\n\t\t\t\t\tfilename: resolvedPath,\n\t\t\t\t\tpath: dirname(resolvedPath),\n\t\t\t\t\texports: {},\n\t\t\t\t\tparent: DEFAULT_PARENT_MODULE,\n\t\t\t\t\tloaded: false,\n\t\t\t\t\tchildren: [],\n\t\t\t\t\tpaths: [],\n\t\t\t\t\trequire: function (path, base) {\n\t\t\t\t\t  return commonjsRequire(path, (base === undefined || base === null) ? cachedModule.path : base);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\ttry {\n\t\t\t\t\tloader.call(commonjsGlobal, cachedModule, cachedModule.exports);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdelete DYNAMIC_REQUIRE_CACHE[resolvedPath];\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\tcachedModule.loaded = true;\n\t\t\t\treturn cachedModule.exports;\n\t\t\t};\n\t\t}\n\t\tif (!shouldTryNodeModules) break;\n\t\tconst nextDir = normalize(originalModuleDir + '/..');\n\t\tif (nextDir === originalModuleDir) break;\n\t\toriginalModuleDir = nextDir;\n\t}\n\treturn require(path);\n}\n\ncommonjsRequire.cache = DYNAMIC_REQUIRE_CACHE;\n`;\n","/* eslint-disable import/prefer-default-export */\nimport { basename, dirname, extname, sep } from 'path';\n\nimport { makeLegalIdentifier } from '@rollup/pluginutils';\n\nexport function getName(id) {\n  const name = makeLegalIdentifier(basename(id, extname(id)));\n  if (name !== 'index') {\n    return name;\n  }\n  const segments = dirname(id).split(sep);\n  return makeLegalIdentifier(segments[segments.length - 1]);\n}\n","/* eslint-disable no-param-reassign, no-shadow, no-underscore-dangle, no-continue */\nimport { resolve, dirname } from 'path';\n\nimport { walk } from 'estree-walker';\nimport MagicString from 'magic-string';\nimport { attachScopes, extractAssignedNames, makeLegalIdentifier } from '@rollup/pluginutils';\n\nimport { sync as nodeResolveSync } from 'resolve';\n\nimport { flatten, isFalsy, isReference, isTruthy } from './ast-utils';\nimport {\n  getProxyId,\n  getVirtualPathForDynamicRequirePath,\n  HELPERS_ID,\n  DYNAMIC_REGISTER_PREFIX,\n  DYNAMIC_JSON_PREFIX\n} from './helpers';\nimport { getName } from './utils';\n// TODO can this be async?\n\nconst reserved = 'process location abstract arguments boolean break byte case catch char class const continue debugger default delete do double else enum eval export extends false final finally float for from function goto if implements import in instanceof int interface let long native new null package private protected public return short static super switch synchronized this throw throws transient true try typeof var void volatile while with yield'.split(\n  ' '\n);\nconst blacklist = { __esModule: true };\nreserved.forEach((word) => (blacklist[word] = true));\n\nconst exportsPattern = /^(?:module\\.)?exports(?:\\.([a-zA-Z_$][a-zA-Z_$0-9]*))?$/;\n\nconst firstpassGlobal = /\\b(?:require|module|exports|global)\\b/;\nconst firstpassNoGlobal = /\\b(?:require|module|exports)\\b/;\nconst importExportDeclaration = /^(?:Import|Export(?:Named|Default))Declaration/;\nconst functionType = /^(?:FunctionDeclaration|FunctionExpression|ArrowFunctionExpression)$/;\n\nfunction deconflict(scope, globals, identifier) {\n  let i = 1;\n  let deconflicted = makeLegalIdentifier(identifier);\n\n  while (scope.contains(deconflicted) || globals.has(deconflicted) || deconflicted in blacklist) {\n    deconflicted = `${identifier}_${i}`;\n    i += 1;\n  }\n  scope.declarations[deconflicted] = true;\n\n  return deconflicted;\n}\n\nfunction tryParse(parse, code, id) {\n  try {\n    return parse(code, { allowReturnOutsideFunction: true });\n  } catch (err) {\n    err.message += ` in ${id}`;\n    throw err;\n  }\n}\n\nexport function normalizePathSlashes(path) {\n  return path.replace(/\\\\/g, '/');\n}\n\nexport function hasCjsKeywords(code, ignoreGlobal) {\n  const firstpass = ignoreGlobal ? firstpassNoGlobal : firstpassGlobal;\n  return firstpass.test(code);\n}\n\nexport function checkEsModule(parse, code, id) {\n  const ast = tryParse(parse, code, id);\n\n  let isEsModule = false;\n  for (const node of ast.body) {\n    if (node.type === 'ExportDefaultDeclaration')\n      return { isEsModule: true, hasDefaultExport: true, ast };\n    if (node.type === 'ExportNamedDeclaration') {\n      isEsModule = true;\n      for (const specifier of node.specifiers) {\n        if (specifier.exported.name === 'default') {\n          return { isEsModule: true, hasDefaultExport: true, ast };\n        }\n      }\n    } else if (importExportDeclaration.test(node.type)) isEsModule = true;\n  }\n\n  return { isEsModule, hasDefaultExport: false, ast };\n}\n\nfunction getDefinePropertyCallName(node, targetName) {\n  if (node.type !== 'CallExpression') return;\n\n  const {\n    callee: { object, property }\n  } = node;\n\n  if (!object || object.type !== 'Identifier' || object.name !== 'Object') return;\n\n  if (!property || property.type !== 'Identifier' || property.name !== 'defineProperty') return;\n\n  if (node.arguments.length !== 3) return;\n\n  const [target, val] = node.arguments;\n  if (target.type !== 'Identifier' || target.name !== targetName) return;\n  // eslint-disable-next-line consistent-return\n  return val.value;\n}\n\nexport function transformCommonjs(\n  parse,\n  code,\n  id,\n  isEntry,\n  hasImporters,\n  isEsModule,\n  ignoreGlobal,\n  ignoreRequire,\n  sourceMap,\n  isDynamicRequireModulesEnabled,\n  dynamicRequireModuleSet,\n  commonDir,\n  astCache\n) {\n  const ast = astCache || tryParse(parse, code, id);\n\n  const magicString = new MagicString(code);\n\n  const required = {};\n  // Because objects have no guaranteed ordering, yet we need it,\n  // we need to keep track of the order in a array\n  const sources = [];\n\n  let uid = 0;\n\n  let scope = attachScopes(ast, 'scope');\n  const uses = { module: false, exports: false, global: false, require: false };\n\n  let lexicalDepth = 0;\n  let programDepth = 0;\n\n  const globals = new Set();\n\n  // TODO technically wrong since globals isn't populated yet, but ¯\\_(ツ)_/¯\n  const HELPERS_NAME = deconflict(scope, globals, 'commonjsHelpers');\n\n  const namedExports = {};\n\n  // TODO handle transpiled modules\n  let shouldWrap = /__esModule/.test(code);\n  let usesCommonjsHelpers = false;\n\n  function isRequireStatement(node) {\n    if (!node) return false;\n    if (node.type !== 'CallExpression') return false;\n\n    // Weird case of `require()` or `module.require()` without arguments\n    if (node.arguments.length === 0) return false;\n\n    return isRequireIdentifier(node.callee);\n  }\n\n  function isRequireIdentifier(node) {\n    if (!node) return false;\n\n    if (node.type === 'Identifier' && node.name === 'require' /* `require` */) {\n      // `require` is hidden by a variable in local scope\n      if (scope.contains('require')) return false;\n\n      return true;\n    } else if (node.type === 'MemberExpression' /* `[something].[something]` */) {\n      // `module.[something]`\n      if (node.object.type !== 'Identifier' || node.object.name !== 'module') return false;\n\n      // `module` is hidden by a variable in local scope\n      if (scope.contains('module')) return false;\n\n      // `module.require(...)`\n      if (node.property.type !== 'Identifier' || node.property.name !== 'require') return false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function hasDynamicArguments(node) {\n    return (\n      node.arguments.length > 1 ||\n      (node.arguments[0].type !== 'Literal' &&\n        (node.arguments[0].type !== 'TemplateLiteral' || node.arguments[0].expressions.length > 0))\n    );\n  }\n\n  function isStaticRequireStatement(node) {\n    if (!isRequireStatement(node)) return false;\n    if (hasDynamicArguments(node)) return false;\n    return true;\n  }\n\n  function isNodeRequireStatement(parent) {\n    const reservedMethod = ['resolve', 'cache', 'main'];\n    if (parent && parent.property && reservedMethod.indexOf(parent.property.name) > -1) {\n      return true;\n    }\n    return false;\n  }\n\n  function isIgnoredRequireStatement(requiredNode) {\n    return ignoreRequire(requiredNode.arguments[0].value);\n  }\n\n  function getRequireStringArg(node) {\n    return node.arguments[0].type === 'Literal'\n      ? node.arguments[0].value\n      : node.arguments[0].quasis[0].value.cooked;\n  }\n\n  function getRequired(node, name) {\n    let sourceId = getRequireStringArg(node);\n    const isDynamicRegister = sourceId.startsWith(DYNAMIC_REGISTER_PREFIX);\n    if (isDynamicRegister) {\n      sourceId = sourceId.substr(DYNAMIC_REGISTER_PREFIX.length);\n    }\n\n    const existing = required[sourceId];\n    // eslint-disable-next-line no-undefined\n    if (existing === undefined) {\n      const isDynamic = hasDynamicModuleForPath(sourceId);\n\n      if (!name) {\n        do {\n          name = `require$$${uid}`;\n          uid += 1;\n        } while (scope.contains(name));\n      }\n\n      if (isDynamicRegister && sourceId.endsWith('.json')) {\n        sourceId = DYNAMIC_JSON_PREFIX + sourceId;\n      }\n\n      if (isDynamicRegister || !isDynamic || sourceId.endsWith('.json')) {\n        sources.push([sourceId, !isDynamicRegister]);\n      }\n\n      required[sourceId] = { source: sourceId, name, importsDefault: false, isDynamic };\n    }\n\n    return required[sourceId];\n  }\n\n  function hasDynamicModuleForPath(source) {\n    if (!/[/\\\\]/.test(source)) {\n      try {\n        const resolvedPath = normalizePathSlashes(\n          nodeResolveSync(source, { basedir: dirname(id) })\n        );\n        if (dynamicRequireModuleSet.has(resolvedPath)) {\n          return true;\n        }\n      } catch (ex) {\n        // Probably a node.js internal module\n        return false;\n      }\n\n      return false;\n    }\n\n    for (const attemptExt of ['', '.js', '.json']) {\n      const resolvedPath = normalizePathSlashes(resolve(dirname(id), source + attemptExt));\n      if (dynamicRequireModuleSet.has(resolvedPath)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function shouldUseSimulatedRequire(required) {\n    return (\n      hasDynamicModuleForPath(required.source) &&\n      // We only do `commonjsRequire` for json if it's the `commonjsRegister` call.\n      (required.source.startsWith(DYNAMIC_REGISTER_PREFIX) || !required.source.endsWith('.json'))\n    );\n  }\n\n  // do a first pass, see which names are assigned to. This is necessary to prevent\n  // illegally replacing `var foo = require('foo')` with `import foo from 'foo'`,\n  // where `foo` is later reassigned. (This happens in the wild. CommonJS, sigh)\n  const assignedTo = new Set();\n  walk(ast, {\n    enter(node) {\n      if (node.type !== 'AssignmentExpression') return;\n      if (node.left.type === 'MemberExpression') return;\n\n      extractAssignedNames(node.left).forEach((name) => {\n        assignedTo.add(name);\n      });\n    }\n  });\n\n  walk(ast, {\n    enter(node, parent) {\n      if (sourceMap) {\n        magicString.addSourcemapLocation(node.start);\n        magicString.addSourcemapLocation(node.end);\n      }\n\n      // skip dead branches\n      if (parent && (parent.type === 'IfStatement' || parent.type === 'ConditionalExpression')) {\n        if (node === parent.consequent && isFalsy(parent.test)) {\n          this.skip();\n          return;\n        }\n        if (node === parent.alternate && isTruthy(parent.test)) {\n          this.skip();\n          return;\n        }\n      }\n\n      if (node._skip) {\n        this.skip();\n        return;\n      }\n\n      programDepth += 1;\n\n      if (node.scope) ({ scope } = node);\n      if (functionType.test(node.type)) lexicalDepth += 1;\n\n      // if toplevel return, we need to wrap it\n      if (node.type === 'ReturnStatement' && lexicalDepth === 0) {\n        shouldWrap = true;\n      }\n\n      // rewrite `this` as `commonjsHelpers.commonjsGlobal`\n      if (node.type === 'ThisExpression' && lexicalDepth === 0) {\n        uses.global = true;\n        if (!ignoreGlobal) {\n          magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsGlobal`, {\n            storeName: true\n          });\n          usesCommonjsHelpers = true;\n        }\n        return;\n      }\n\n      // rewrite `typeof module`, `typeof module.exports` and `typeof exports` (https://github.com/rollup/rollup-plugin-commonjs/issues/151)\n      if (node.type === 'UnaryExpression' && node.operator === 'typeof') {\n        const flattened = flatten(node.argument);\n        if (!flattened) return;\n\n        if (scope.contains(flattened.name)) return;\n\n        if (\n          flattened.keypath === 'module.exports' ||\n          flattened.keypath === 'module' ||\n          flattened.keypath === 'exports'\n        ) {\n          magicString.overwrite(node.start, node.end, `'object'`, { storeName: false });\n        }\n      }\n\n      // rewrite `require` (if not already handled) `global` and `define`, and handle free references to\n      // `module` and `exports` as these mean we need to wrap the module in commonjsHelpers.createCommonjsModule\n      if (node.type === 'Identifier') {\n        if (isReference(node, parent) && !scope.contains(node.name)) {\n          if (node.name in uses) {\n            if (isRequireIdentifier(node)) {\n              if (isNodeRequireStatement(parent)) {\n                return;\n              }\n\n              if (!isDynamicRequireModulesEnabled && isStaticRequireStatement(parent)) {\n                return;\n              }\n\n              if (isDynamicRequireModulesEnabled && isRequireStatement(parent)) {\n                magicString.appendLeft(\n                  parent.end - 1,\n                  `,${JSON.stringify(\n                    dirname(id) === '.'\n                      ? null /* default behavior */\n                      : getVirtualPathForDynamicRequirePath(\n                          normalizePathSlashes(dirname(id)),\n                          commonDir\n                        )\n                  )}`\n                );\n              }\n\n              magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsRequire`, {\n                storeName: true\n              });\n              usesCommonjsHelpers = true;\n            }\n\n            uses[node.name] = true;\n            if (node.name === 'global' && !ignoreGlobal) {\n              magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsGlobal`, {\n                storeName: true\n              });\n              usesCommonjsHelpers = true;\n            }\n\n            // if module or exports are used outside the context of an assignment\n            // expression, we need to wrap the module\n            if (node.name === 'module' || node.name === 'exports') {\n              shouldWrap = true;\n            }\n          }\n\n          if (node.name === 'define') {\n            magicString.overwrite(node.start, node.end, 'undefined', { storeName: true });\n          }\n\n          globals.add(node.name);\n        }\n\n        return;\n      }\n\n      // Is this an assignment to exports or module.exports?\n      if (node.type === 'AssignmentExpression') {\n        if (node.left.type !== 'MemberExpression') return;\n\n        const flattened = flatten(node.left);\n        if (!flattened) return;\n\n        if (scope.contains(flattened.name)) return;\n\n        const match = exportsPattern.exec(flattened.keypath);\n        if (!match || flattened.keypath === 'exports') return;\n\n        uses[flattened.name] = true;\n\n        // we're dealing with `module.exports = ...` or `[module.]exports.foo = ...` –\n        // if this isn't top-level, we'll need to wrap the module\n        if (programDepth > 3) shouldWrap = true;\n\n        node.left._skip = true;\n\n        if (flattened.keypath === 'module.exports' && node.right.type === 'ObjectExpression') {\n          node.right.properties.forEach((prop) => {\n            if (prop.computed || !('key' in prop) || prop.key.type !== 'Identifier') return;\n            const { name } = prop.key;\n            if (name === makeLegalIdentifier(name)) namedExports[name] = true;\n          });\n          return;\n        }\n\n        if (match[1]) namedExports[match[1]] = true;\n        return;\n      }\n\n      const name = getDefinePropertyCallName(node, 'exports');\n      if (name && name === makeLegalIdentifier(name)) namedExports[name] = true;\n\n      // if this is `var x = require('x')`, we can do `import x from 'x'`\n      if (\n        node.type === 'VariableDeclarator' &&\n        node.id.type === 'Identifier' &&\n        isStaticRequireStatement(node.init) &&\n        !isIgnoredRequireStatement(node.init)\n      ) {\n        // for now, only do this for top-level requires. maybe fix this in future\n        if (scope.parent) return;\n\n        // edge case — CJS allows you to assign to imports. ES doesn't\n        if (assignedTo.has(node.id.name)) return;\n\n        const required = getRequired(node.init, node.id.name);\n        required.importsDefault = true;\n\n        if (required.name === node.id.name && !required.isDynamic) {\n          node._shouldRemove = true;\n        }\n      }\n\n      if (!isStaticRequireStatement(node) || isIgnoredRequireStatement(node)) {\n        return;\n      }\n\n      const required = getRequired(node);\n\n      if (parent.type === 'ExpressionStatement') {\n        // is a bare import, e.g. `require('foo');`\n        magicString.remove(parent.start, parent.end);\n      } else {\n        required.importsDefault = true;\n\n        if (shouldUseSimulatedRequire(required)) {\n          magicString.overwrite(\n            node.start,\n            node.end,\n            `${HELPERS_NAME}.commonjsRequire(${JSON.stringify(\n              getVirtualPathForDynamicRequirePath(normalizePathSlashes(required.source), commonDir)\n            )}, ${JSON.stringify(\n              dirname(id) === '.'\n                ? null /* default behavior */\n                : getVirtualPathForDynamicRequirePath(normalizePathSlashes(dirname(id)), commonDir)\n            )})`\n          );\n          usesCommonjsHelpers = true;\n        } else {\n          magicString.overwrite(node.start, node.end, required.name);\n        }\n      }\n\n      node.callee._skip = true;\n    },\n\n    leave(node) {\n      programDepth -= 1;\n      if (node.scope) scope = scope.parent;\n      if (functionType.test(node.type)) lexicalDepth -= 1;\n\n      if (node.type === 'VariableDeclaration') {\n        let keepDeclaration = false;\n        let c = node.declarations[0].start;\n\n        for (let i = 0; i < node.declarations.length; i += 1) {\n          const declarator = node.declarations[i];\n\n          if (declarator._shouldRemove) {\n            magicString.remove(c, declarator.end);\n          } else {\n            if (!keepDeclaration) {\n              magicString.remove(c, declarator.start);\n              keepDeclaration = true;\n            }\n\n            c = declarator.end;\n          }\n        }\n\n        if (!keepDeclaration) {\n          magicString.remove(node.start, node.end);\n        }\n      }\n    }\n  });\n\n  if (\n    !sources.length &&\n    !uses.module &&\n    !uses.exports &&\n    !uses.require &&\n    (ignoreGlobal || !uses.global)\n  ) {\n    // not a CommonJS module\n    return null;\n  }\n\n  // If `isEsModule` is on, it means it has ES6 import/export statements,\n  //   which just can't be wrapped in a function.\n  if (isEsModule) shouldWrap = false;\n\n  usesCommonjsHelpers = usesCommonjsHelpers || shouldWrap;\n\n  const importBlock = `${(usesCommonjsHelpers\n    ? [`import * as ${HELPERS_NAME} from '${HELPERS_ID}';`]\n    : []\n  )\n    .concat(\n      sources.map(\n        ([source]) =>\n          // import the actual module before the proxy, so that we know\n          // what kind of proxy to build\n          `import '${source}';`\n      ),\n      sources\n        .filter(([, importProxy]) => importProxy)\n        .map(([source]) => {\n          const { name, importsDefault } = required[source];\n          return `import ${importsDefault ? `${name} from ` : ``}'${getProxyId(source)}';`;\n        })\n    )\n    .join('\\n')}\\n\\n`;\n\n  const namedExportDeclarations = [];\n  let wrapperStart = '';\n  let wrapperEnd = '';\n\n  const moduleName = deconflict(scope, globals, getName(id));\n  if ((!isEntry || hasImporters) && !isEsModule) {\n    const exportModuleExports = {\n      str: `export { ${moduleName} as __moduleExports };`,\n      name: '__moduleExports'\n    };\n\n    namedExportDeclarations.push(exportModuleExports);\n  }\n\n  const defaultExportPropertyAssignments = [];\n  let hasDefaultExport = false;\n\n  if (shouldWrap) {\n    const args = `module${uses.exports ? ', exports' : ''}`;\n\n    wrapperStart = `var ${moduleName} = ${HELPERS_NAME}.createCommonjsModule(function (${args}) {\\n`;\n\n    wrapperEnd = `\\n}`;\n    if (isDynamicRequireModulesEnabled) {\n      wrapperEnd += `, ${JSON.stringify(\n        getVirtualPathForDynamicRequirePath(normalizePathSlashes(dirname(id)), commonDir)\n      )}`;\n    }\n\n    wrapperEnd += `);`;\n  } else {\n    const names = [];\n\n    for (const node of ast.body) {\n      if (node.type === 'ExpressionStatement' && node.expression.type === 'AssignmentExpression') {\n        const { left } = node.expression;\n        const flattened = flatten(left);\n\n        if (!flattened) {\n          continue;\n        }\n\n        const match = exportsPattern.exec(flattened.keypath);\n        if (!match) {\n          continue;\n        }\n\n        if (flattened.keypath === 'module.exports') {\n          hasDefaultExport = true;\n          magicString.overwrite(left.start, left.end, `var ${moduleName}`);\n        } else {\n          const [, name] = match;\n          const deconflicted = deconflict(scope, globals, name);\n\n          names.push({ name, deconflicted });\n\n          magicString.overwrite(node.start, left.end, `var ${deconflicted}`);\n\n          const declaration =\n            name === deconflicted\n              ? `export { ${name} };`\n              : `export { ${deconflicted} as ${name} };`;\n\n          if (name !== 'default') {\n            namedExportDeclarations.push({\n              str: declaration,\n              name\n            });\n          }\n\n          defaultExportPropertyAssignments.push(`${moduleName}.${name} = ${deconflicted};`);\n        }\n      }\n    }\n\n    if (!hasDefaultExport && (names.length || ((!isEntry || hasImporters) && !isEsModule))) {\n      wrapperEnd = `\\n\\nvar ${moduleName} = {\\n${names\n        .map(({ name, deconflicted }) => `\\t${name}: ${deconflicted}`)\n        .join(',\\n')}\\n};`;\n    }\n  }\n\n  const defaultExport = `export default ${moduleName};`;\n\n  const named = namedExportDeclarations\n    .filter((x) => x.name !== 'default' || !hasDefaultExport)\n    .map((x) => x.str);\n\n  const exportBlock = `\\n\\n${(isEsModule ? [] : [defaultExport])\n    .concat(named)\n    .concat(hasDefaultExport ? defaultExportPropertyAssignments : [])\n    .join('\\n')}`;\n\n  magicString\n    .trim()\n    .prepend(importBlock + wrapperStart)\n    .trim()\n    .append(wrapperEnd);\n\n  const injectExportBlock =\n    hasDefaultExport || named.length > 0 || shouldWrap || !isEntry || hasImporters;\n  if (injectExportBlock) {\n    magicString.append(exportBlock);\n  }\n\n  code = magicString.toString();\n  const map = sourceMap ? magicString.generateMap() : null;\n\n  return { code, map, syntheticNamedExports: injectExportBlock };\n}\n","import { statSync } from 'fs';\n\nimport { resolve } from 'path';\n\nimport glob from 'glob';\n\nimport { normalizePathSlashes } from './transform';\n\nexport default function getDynamicRequirePaths(patterns) {\n  const dynamicRequireModuleSet = new Set();\n  for (const pattern of !patterns || Array.isArray(patterns) ? patterns || [] : [patterns]) {\n    const isNegated = pattern.startsWith('!');\n    const modifySet = Set.prototype[isNegated ? 'delete' : 'add'].bind(dynamicRequireModuleSet);\n    for (const path of glob.sync(isNegated ? pattern.substr(1) : pattern)) {\n      modifySet(normalizePathSlashes(resolve(path)));\n    }\n  }\n  const dynamicRequireModuleDirPaths = Array.from(dynamicRequireModuleSet.values()).filter(\n    (path) => {\n      try {\n        if (statSync(path).isDirectory()) return true;\n      } catch (ignored) {\n        // Nothing to do here\n      }\n      return false;\n    }\n  );\n  return { dynamicRequireModuleSet, dynamicRequireModuleDirPaths };\n}\n","/* eslint-disable no-undefined */\nconst isCjsPromises = new Map();\n\nexport function getIsCjsPromise(id) {\n  let isCjsPromise = isCjsPromises.get(id);\n  if (isCjsPromise) return isCjsPromise.promise;\n\n  const promise = new Promise((resolve) => {\n    isCjsPromise = {\n      resolve,\n      promise: undefined\n    };\n    isCjsPromises.set(id, isCjsPromise);\n  });\n  isCjsPromise.promise = promise;\n\n  return promise;\n}\n\nexport function setIsCjsPromise(id, resolution) {\n  const isCjsPromise = isCjsPromises.get(id);\n  if (isCjsPromise) {\n    if (isCjsPromise.resolve) {\n      isCjsPromise.resolve(resolution);\n      isCjsPromise.resolve = undefined;\n    }\n  } else {\n    isCjsPromises.set(id, { promise: Promise.resolve(resolution), resolve: undefined });\n  }\n}\n","/* eslint-disable no-param-reassign, no-undefined */\nimport { statSync } from 'fs';\nimport { dirname, resolve, sep } from 'path';\n\nimport {\n  DYNAMIC_JSON_PREFIX,\n  DYNAMIC_PACKAGES_ID,\n  getExternalProxyId,\n  getIdFromProxyId,\n  getProxyId,\n  HELPERS_ID,\n  PROXY_SUFFIX\n} from './helpers';\n\nfunction getCandidatesForExtension(resolved, extension) {\n  return [resolved + extension, `${resolved}${sep}index${extension}`];\n}\n\nfunction getCandidates(resolved, extensions) {\n  return extensions.reduce(\n    (paths, extension) => paths.concat(getCandidatesForExtension(resolved, extension)),\n    [resolved]\n  );\n}\n\nexport default function getResolveId(extensions) {\n  function resolveExtensions(importee, importer) {\n    // not our problem\n    if (importee[0] !== '.' || !importer) return undefined;\n\n    const resolved = resolve(dirname(importer), importee);\n    const candidates = getCandidates(resolved, extensions);\n\n    for (let i = 0; i < candidates.length; i += 1) {\n      try {\n        const stats = statSync(candidates[i]);\n        if (stats.isFile()) return { id: candidates[i] };\n      } catch (err) {\n        /* noop */\n      }\n    }\n\n    return undefined;\n  }\n\n  function resolveId(importee, importer) {\n    const isProxyModule = importee.endsWith(PROXY_SUFFIX);\n    if (isProxyModule) {\n      importee = getIdFromProxyId(importee);\n    } else if (importee.startsWith('\\0')) {\n      if (\n        importee === HELPERS_ID ||\n        importee === DYNAMIC_PACKAGES_ID ||\n        importee.startsWith(DYNAMIC_JSON_PREFIX)\n      ) {\n        return importee;\n      }\n      return null;\n    }\n\n    if (importee.startsWith(DYNAMIC_JSON_PREFIX)) {\n      return importee;\n    }\n\n    if (importer && importer.endsWith(PROXY_SUFFIX)) {\n      importer = getIdFromProxyId(importer);\n    }\n\n    return this.resolve(importee, importer, { skipSelf: true }).then((resolved) => {\n      if (!resolved) {\n        resolved = resolveExtensions(importee, importer);\n      }\n      if (isProxyModule) {\n        if (!resolved) {\n          return { id: getExternalProxyId(importee), external: false };\n        }\n        resolved.id = (resolved.external ? getExternalProxyId : getProxyId)(resolved.id);\n        resolved.external = false;\n        return resolved;\n      }\n      return resolved;\n    });\n  }\n\n  return resolveId;\n}\n","import { existsSync, readFileSync } from 'fs';\nimport { extname, join } from 'path';\n\nimport { createFilter } from '@rollup/pluginutils';\n\nimport getCommonDir from 'commondir';\n\nimport { peerDependencies } from '../package.json';\n\nimport getDynamicRequirePaths from './dynamic-require-paths';\n\nimport {\n  DYNAMIC_JSON_PREFIX,\n  DYNAMIC_PACKAGES_ID,\n  DYNAMIC_REGISTER_PREFIX,\n  getVirtualPathForDynamicRequirePath,\n  EXTERNAL_SUFFIX,\n  getIdFromExternalProxyId,\n  getIdFromProxyId,\n  HELPERS,\n  HELPERS_ID,\n  HELPER_NON_DYNAMIC,\n  HELPERS_DYNAMIC,\n  PROXY_SUFFIX\n} from './helpers';\n\nimport { getIsCjsPromise, setIsCjsPromise } from './is-cjs';\nimport getResolveId from './resolve-id';\nimport {\n  checkEsModule,\n  normalizePathSlashes,\n  hasCjsKeywords,\n  transformCommonjs\n} from './transform';\nimport { getName } from './utils';\n\nexport default function commonjs(options = {}) {\n  const extensions = options.extensions || ['.js'];\n  const filter = createFilter(options.include, options.exclude);\n  const { ignoreGlobal } = options;\n\n  const { dynamicRequireModuleSet, dynamicRequireModuleDirPaths } = getDynamicRequirePaths(\n    options.dynamicRequireTargets\n  );\n  const isDynamicRequireModulesEnabled = dynamicRequireModuleSet.size > 0;\n  const commonDir = isDynamicRequireModulesEnabled\n    ? getCommonDir(null, Array.from(dynamicRequireModuleSet).concat(process.cwd()))\n    : null;\n\n  const esModulesWithoutDefaultExport = new Set();\n  const esModulesWithDefaultExport = new Set();\n\n  const ignoreRequire =\n    typeof options.ignore === 'function'\n      ? options.ignore\n      : Array.isArray(options.ignore)\n      ? (id) => options.ignore.includes(id)\n      : () => false;\n\n  const resolveId = getResolveId(extensions);\n\n  const sourceMap = options.sourceMap !== false;\n\n  function transformAndCheckExports(code, id) {\n    const { isEsModule, hasDefaultExport, ast } = checkEsModule(this.parse, code, id);\n\n    const isDynamicRequireModule = dynamicRequireModuleSet.has(normalizePathSlashes(id));\n\n    if (isEsModule && (!isDynamicRequireModule || !options.transformMixedEsModules)) {\n      (hasDefaultExport ? esModulesWithDefaultExport : esModulesWithoutDefaultExport).add(id);\n      if (!options.transformMixedEsModules) {\n        setIsCjsPromise(id, false);\n        return null;\n      }\n    }\n    // it is not an ES module AND it does not have CJS-specific elements.\n    else if (!hasCjsKeywords(code, ignoreGlobal)) {\n      esModulesWithoutDefaultExport.add(id);\n      setIsCjsPromise(id, false);\n      return null;\n    }\n\n    const moduleInfo = this.getModuleInfo(id);\n\n    const transformed = transformCommonjs(\n      this.parse,\n      code,\n      id,\n      moduleInfo.isEntry,\n      moduleInfo.importers && moduleInfo.importers.length > 0,\n      isEsModule,\n      ignoreGlobal || isEsModule,\n      ignoreRequire,\n      sourceMap,\n      isDynamicRequireModulesEnabled,\n      dynamicRequireModuleSet,\n      commonDir,\n      ast\n    );\n\n    setIsCjsPromise(id, isEsModule ? false : Boolean(transformed));\n\n    if (!transformed) {\n      if (!isEsModule || isDynamicRequireModule) esModulesWithoutDefaultExport.add(id);\n      return null;\n    }\n\n    return transformed;\n  }\n\n  return {\n    name: 'commonjs',\n\n    buildStart() {\n      if (options.namedExports != null) {\n        this.warn(\n          'The namedExports option from \"@rollup/plugin-commonjs\" is deprecated. Named exports are now handled automatically.'\n        );\n      }\n\n      const [major, minor] = this.meta.rollupVersion.split('.').map(Number);\n      const minVersion = peerDependencies.rollup.slice(2);\n      const [minMajor, minMinor] = minVersion.split('.').map(Number);\n      if (major < minMajor || (major === minMajor && minor < minMinor)) {\n        this.error(\n          `Insufficient Rollup version: \"@rollup/plugin-commonjs\" requires at least rollup@${minVersion} but found rollup@${this.meta.rollupVersion}.`\n        );\n      }\n    },\n\n    resolveId,\n\n    load(id) {\n      if (id === HELPERS_ID) {\n        let code = HELPERS;\n\n        // Do not bloat everyone's code with the module manager code\n        if (isDynamicRequireModulesEnabled) code += HELPERS_DYNAMIC;\n        else code += HELPER_NON_DYNAMIC;\n\n        return code;\n      }\n\n      // generate proxy modules\n      if (id.endsWith(EXTERNAL_SUFFIX)) {\n        const actualId = getIdFromExternalProxyId(id);\n        const name = getName(actualId);\n\n        if (actualId === HELPERS_ID || actualId === DYNAMIC_PACKAGES_ID)\n          // These do not export default\n          return `import * as ${name} from ${JSON.stringify(actualId)}; export default ${name};`;\n\n        return `import ${name} from ${JSON.stringify(actualId)}; export default ${name};`;\n      }\n\n      if (id === DYNAMIC_PACKAGES_ID) {\n        let code = `const { commonjsRegister } = require('${HELPERS_ID}');`;\n        for (const dir of dynamicRequireModuleDirPaths) {\n          let entryPoint = 'index.js';\n\n          try {\n            if (existsSync(join(dir, 'package.json'))) {\n              entryPoint =\n                JSON.parse(readFileSync(join(dir, 'package.json'), { encoding: 'utf8' })).main ||\n                entryPoint;\n            }\n          } catch (ignored) {\n            // ignored\n          }\n\n          code += `\\ncommonjsRegister(${JSON.stringify(\n            getVirtualPathForDynamicRequirePath(dir, commonDir)\n          )}, function (module, exports) {\n  module.exports = require(${JSON.stringify(normalizePathSlashes(join(dir, entryPoint)))});\n});`;\n        }\n        return code;\n      }\n\n      let actualId = id;\n\n      const isDynamicJson = actualId.startsWith(DYNAMIC_JSON_PREFIX);\n      if (isDynamicJson) {\n        actualId = actualId.slice(DYNAMIC_JSON_PREFIX.length);\n      }\n\n      const normalizedPath = normalizePathSlashes(actualId);\n\n      if (isDynamicJson) {\n        return `require('${HELPERS_ID}').commonjsRegister(${JSON.stringify(\n          getVirtualPathForDynamicRequirePath(normalizedPath, commonDir)\n        )}, function (module, exports) {\n  module.exports = require(${JSON.stringify(normalizedPath)});\n});`;\n      }\n\n      if (dynamicRequireModuleSet.has(normalizedPath) && !normalizedPath.endsWith('.json')) {\n        // Try our best to still export the module fully.\n        // The commonjs polyfill should take care of circular references.\n\n        return `require('${HELPERS_ID}').commonjsRegister(${JSON.stringify(\n          getVirtualPathForDynamicRequirePath(normalizedPath, commonDir)\n        )}, function (module, exports) {\n  ${readFileSync(normalizedPath, { encoding: 'utf8' })}\n});`;\n      }\n\n      if (actualId.endsWith(PROXY_SUFFIX)) {\n        actualId = getIdFromProxyId(actualId);\n        const name = getName(actualId);\n\n        return getIsCjsPromise(actualId).then((isCjs) => {\n          if (\n            dynamicRequireModuleSet.has(normalizePathSlashes(actualId)) &&\n            !actualId.endsWith('.json')\n          )\n            return `import {commonjsRequire} from '${HELPERS_ID}'; const ${name} = commonjsRequire(${JSON.stringify(\n              getVirtualPathForDynamicRequirePath(normalizePathSlashes(actualId), commonDir)\n            )}); export default (${name} && ${name}['default']) || ${name}`;\n          else if (isCjs)\n            return `import { __moduleExports } from ${JSON.stringify(\n              actualId\n            )}; export default __moduleExports;`;\n          else if (esModulesWithoutDefaultExport.has(actualId))\n            return `import * as ${name} from ${JSON.stringify(actualId)}; export default ${name};`;\n          else if (esModulesWithDefaultExport.has(actualId)) {\n            return `export {default} from ${JSON.stringify(actualId)};`;\n          }\n          return `import * as ${name} from ${JSON.stringify(\n            actualId\n          )}; import {getCjsExportFromNamespace} from \"${HELPERS_ID}\"; export default getCjsExportFromNamespace(${name})`;\n        });\n      }\n\n      if (isDynamicRequireModulesEnabled && this.getModuleInfo(id).isEntry) {\n        let code;\n\n        try {\n          code = readFileSync(actualId, { encoding: 'utf8' });\n        } catch (ex) {\n          this.warn(`Failed to read file ${actualId}, dynamic modules might not work correctly`);\n          return null;\n        }\n\n        let dynamicImports = Array.from(dynamicRequireModuleSet)\n          .map((dynamicId) => `require(${JSON.stringify(DYNAMIC_REGISTER_PREFIX + dynamicId)});`)\n          .join('\\n');\n\n        if (dynamicRequireModuleDirPaths.length) {\n          dynamicImports += `require(${JSON.stringify(\n            DYNAMIC_REGISTER_PREFIX + DYNAMIC_PACKAGES_ID\n          )});`;\n        }\n\n        code = `${dynamicImports}\\n${code}`;\n\n        return code;\n      }\n\n      return null;\n    },\n\n    transform(code, id) {\n      if (id !== DYNAMIC_PACKAGES_ID && !id.startsWith(DYNAMIC_JSON_PREFIX)) {\n        if (!filter(id) || extensions.indexOf(extname(id)) === -1) {\n          setIsCjsPromise(id, null);\n          return null;\n        }\n      }\n\n      let transformed;\n      try {\n        transformed = transformAndCheckExports.call(this, code, id);\n      } catch (err) {\n        transformed = null;\n        setIsCjsPromise(id, false);\n        this.error(err, err.loc);\n      }\n\n      return transformed;\n    }\n  };\n}\n"],"names":["operators","x","equals","left","right","not","isFalsy","argument","isTruthy","flatten","node","parts","type","computed","unshift","property","name","object","keypath","join","value","expression","operator","undefined","a","b","strict","PROXY_SUFFIX","getProxyId","id","getIdFromProxyId","proxyId","slice","length","EXTERNAL_SUFFIX","getExternalProxyId","getIdFromExternalProxyId","VIRTUAL_PATH_BASE","getVirtualPathForDynamicRequirePath","path","commonDir","startsWith","DYNAMIC_REGISTER_PREFIX","DYNAMIC_JSON_PREFIX","DYNAMIC_PACKAGES_ID","HELPERS_ID","HELPERS","HELPER_NON_DYNAMIC","HELPERS_DYNAMIC","getName","makeLegalIdentifier","basename","extname","segments","dirname","split","sep","reserved","blacklist","__esModule","forEach","word","exportsPattern","firstpassGlobal","firstpassNoGlobal","importExportDeclaration","functionType","deconflict","scope","globals","identifier","i","deconflicted","contains","has","declarations","tryParse","parse","code","allowReturnOutsideFunction","err","message","normalizePathSlashes","replace","hasCjsKeywords","ignoreGlobal","firstpass","test","checkEsModule","ast","isEsModule","body","hasDefaultExport","specifiers","specifier","exported","getDefinePropertyCallName","targetName","callee","arguments","target","val","transformCommonjs","isEntry","hasImporters","ignoreRequire","sourceMap","isDynamicRequireModulesEnabled","dynamicRequireModuleSet","astCache","magicString","MagicString","required","sources","uid","attachScopes","uses","module","exports","global","require","lexicalDepth","programDepth","Set","HELPERS_NAME","namedExports","shouldWrap","usesCommonjsHelpers","isRequireStatement","isRequireIdentifier","hasDynamicArguments","expressions","isStaticRequireStatement","isNodeRequireStatement","parent","reservedMethod","indexOf","isIgnoredRequireStatement","requiredNode","getRequireStringArg","quasis","cooked","getRequired","sourceId","isDynamicRegister","substr","existing","isDynamic","hasDynamicModuleForPath","endsWith","push","source","importsDefault","resolvedPath","nodeResolveSync","basedir","ex","attemptExt","resolve","shouldUseSimulatedRequire","assignedTo","walk","enter","extractAssignedNames","add","addSourcemapLocation","start","end","consequent","skip","alternate","_skip","overwrite","storeName","flattened","isReference","appendLeft","JSON","stringify","match","exec","properties","prop","key","init","_shouldRemove","remove","leave","keepDeclaration","c","declarator","importBlock","concat","map","filter","importProxy","namedExportDeclarations","wrapperStart","wrapperEnd","moduleName","exportModuleExports","str","defaultExportPropertyAssignments","args","names","declaration","defaultExport","named","exportBlock","trim","prepend","append","injectExportBlock","toString","generateMap","syntheticNamedExports","getDynamicRequirePaths","patterns","Array","isArray","pattern","isNegated","modifySet","prototype","bind","glob","sync","dynamicRequireModuleDirPaths","from","values","statSync","isDirectory","ignored","isCjsPromises","Map","getIsCjsPromise","isCjsPromise","get","promise","Promise","set","setIsCjsPromise","resolution","getCandidatesForExtension","resolved","extension","getCandidates","extensions","reduce","paths","getResolveId","resolveExtensions","importee","importer","candidates","stats","isFile","resolveId","isProxyModule","skipSelf","then","external","commonjs","options","createFilter","include","exclude","dynamicRequireTargets","size","getCommonDir","process","cwd","esModulesWithoutDefaultExport","esModulesWithDefaultExport","ignore","includes","transformAndCheckExports","isDynamicRequireModule","transformMixedEsModules","moduleInfo","getModuleInfo","transformed","importers","Boolean","buildStart","warn","meta","rollupVersion","Number","major","minor","minVersion","peerDependencies","rollup","minMajor","minMinor","error","load","actualId","dir","entryPoint","existsSync","readFileSync","encoding","main","isDynamicJson","normalizedPath","isCjs","dynamicImports","dynamicId","transform","call","loc"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.es.js","sources":["../src/helpers.js","../src/ast-utils.js","../src/utils.js","../src/transform.js","../src/dynamic-packages-manager.js","../src/dynamic-require-paths.js","../src/is-cjs.js","../src/proxies.js","../src/resolve-id.js","../src/index.js"],"sourcesContent":["export const PROXY_SUFFIX = '?commonjs-proxy';\nexport const getProxyId = (id) => `\\0${id}${PROXY_SUFFIX}`;\nexport const getIdFromProxyId = (proxyId) => proxyId.slice(1, -PROXY_SUFFIX.length);\n\nexport const EXTERNAL_SUFFIX = '?commonjs-external';\nexport const getExternalProxyId = (id) => `\\0${id}${EXTERNAL_SUFFIX}`;\nexport const getIdFromExternalProxyId = (proxyId) => proxyId.slice(1, -EXTERNAL_SUFFIX.length);\n\nexport const VIRTUAL_PATH_BASE = '/$$rollup_base$$';\nexport const getVirtualPathForDynamicRequirePath = (path, commonDir) => {\n  if (path.startsWith(commonDir)) return VIRTUAL_PATH_BASE + path.slice(commonDir.length);\n  return path;\n};\n\nexport const DYNAMIC_REGISTER_PREFIX = '\\0commonjs-dynamic-register:';\nexport const DYNAMIC_JSON_PREFIX = '\\0commonjs-dynamic-json:';\nexport const DYNAMIC_PACKAGES_ID = '\\0commonjs-dynamic-packages';\n\nexport const HELPERS_ID = '\\0commonjsHelpers.js';\n\n// `x['default']` is used instead of `x.default` for backward compatibility with ES3 browsers.\n// Minifiers like uglify will usually transpile it back if compatibility with ES3 is not enabled.\n// This will no longer be necessary once Rollup switches to ES6 output, likely\n// in Rollup 3\n\n// The \"hasOwnProperty\" call in \"getDefaultExportFromCjs\" is technically not\n// needed, but for consumers that use Rollup's old interop pattern, it will fix\n// rollup/rollup-plugin-commonjs#224\n// We should remove it once Rollup core and this plugin are updated to not use\n// this pattern any more\nconst HELPERS = `\nexport var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nexport function getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nexport function createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t  path: basedir,\n\t  exports: {},\n\t  require: function (path, base) {\n      return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n    }\n\t}, fn(module, module.exports), module.exports;\n}\n\nexport function getDefaultExportFromNamespaceIfPresent (n) {\n\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;\n}\n\nexport function getDefaultExportFromNamespaceIfNotNamed (n) {\n\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;\n}\n`;\n\nconst HELPER_NON_DYNAMIC = `\nexport function commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n`;\n\nconst HELPERS_DYNAMIC = `\nexport function commonjsRegister (path, loader) {\n\tDYNAMIC_REQUIRE_LOADERS[path] = loader;\n}\n\nconst DYNAMIC_REQUIRE_LOADERS = Object.create(null);\nconst DYNAMIC_REQUIRE_CACHE = Object.create(null);\nconst DEFAULT_PARENT_MODULE = {\n\tid: '<' + 'rollup>', exports: {}, parent: undefined, filename: null, loaded: false, children: [], paths: []\n};\nconst CHECKED_EXTENSIONS = ['', '.js', '.json'];\n\nfunction normalize (path) {\n\tpath = path.replace(/\\\\\\\\/g, '/');\n\tconst parts = path.split('/');\n\tconst slashed = parts[0] === '';\n\tfor (let i = 1; i < parts.length; i++) {\n\t\tif (parts[i] === '.' || parts[i] === '') {\n\t\t\tparts.splice(i--, 1);\n\t\t}\n\t}\n\tfor (let i = 1; i < parts.length; i++) {\n\t\tif (parts[i] !== '..') continue;\n\t\tif (i > 0 && parts[i - 1] !== '..' && parts[i - 1] !== '.') {\n\t\t\tparts.splice(--i, 2);\n\t\t\ti--;\n\t\t}\n\t}\n\tpath = parts.join('/');\n\tif (slashed && path[0] !== '/')\n\t  path = '/' + path;\n\telse if (path.length === 0)\n\t  path = '.';\n\treturn path;\n}\n\nfunction join () {\n\tif (arguments.length === 0)\n\t  return '.';\n\tlet joined;\n\tfor (let i = 0; i < arguments.length; ++i) {\n\t  let arg = arguments[i];\n\t  if (arg.length > 0) {\n\t\tif (joined === undefined)\n\t\t  joined = arg;\n\t\telse\n\t\t  joined += '/' + arg;\n\t  }\n\t}\n\tif (joined === undefined)\n\t  return '.';\n\n\treturn joined;\n}\n\nfunction isPossibleNodeModulesPath (modulePath) {\n\tlet c0 = modulePath[0];\n\tif (c0 === '/' || c0 === '\\\\\\\\') return false;\n\tlet c1 = modulePath[1], c2 = modulePath[2];\n\tif ((c0 === '.' && (!c1 || c1 === '/' || c1 === '\\\\\\\\')) ||\n\t\t(c0 === '.' && c1 === '.' && (!c2 || c2 === '/' || c2 === '\\\\\\\\'))) return false;\n\tif (c1 === ':' && (c2 === '/' || c2 === '\\\\\\\\'))\n\t\treturn false;\n\treturn true;\n}\n\nfunction dirname (path) {\n  if (path.length === 0)\n    return '.';\n\n  let i = path.length - 1;\n  while (i > 0) {\n    const c = path.charCodeAt(i);\n    if ((c === 47 || c === 92) && i !== path.length - 1)\n      break;\n    i--;\n  }\n\n  if (i > 0)\n    return path.substr(0, i);\n\n  if (path.chartCodeAt(0) === 47 || path.chartCodeAt(0) === 92)\n    return path.charAt(0);\n\n  return '.';\n}\n\nexport function commonjsRequire (path, originalModuleDir) {\n\tconst shouldTryNodeModules = isPossibleNodeModulesPath(path);\n\tpath = normalize(path);\n\tlet relPath;\n\twhile (true) {\n\t\tif (!shouldTryNodeModules) {\n\t\t\trelPath = originalModuleDir ? normalize(originalModuleDir + '/' + path) : path;\n\t\t} else if (originalModuleDir) {\n\t\t\trelPath = normalize(originalModuleDir + '/node_modules/' + path);\n\t\t} else {\n\t\t\trelPath = normalize(join('node_modules', path));\n\t\t}\n\t\tfor (let extensionIndex = 0; extensionIndex < CHECKED_EXTENSIONS.length; extensionIndex++) {\n\t\t\tconst resolvedPath = relPath + CHECKED_EXTENSIONS[extensionIndex];\n\t\t\tlet cachedModule = DYNAMIC_REQUIRE_CACHE[resolvedPath];\n\t\t\tif (cachedModule) return cachedModule.exports;\n\t\t\tconst loader = DYNAMIC_REQUIRE_LOADERS[resolvedPath];\n\t\t\tif (loader) {\n\t\t\t\tDYNAMIC_REQUIRE_CACHE[resolvedPath] = cachedModule = {\n\t\t\t\t\tid: resolvedPath,\n\t\t\t\t\tfilename: resolvedPath,\n\t\t\t\t\tpath: dirname(resolvedPath),\n\t\t\t\t\texports: {},\n\t\t\t\t\tparent: DEFAULT_PARENT_MODULE,\n\t\t\t\t\tloaded: false,\n\t\t\t\t\tchildren: [],\n\t\t\t\t\tpaths: [],\n\t\t\t\t\trequire: function (path, base) {\n\t\t\t\t\t  return commonjsRequire(path, (base === undefined || base === null) ? cachedModule.path : base);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\ttry {\n\t\t\t\t\tloader.call(commonjsGlobal, cachedModule, cachedModule.exports);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdelete DYNAMIC_REQUIRE_CACHE[resolvedPath];\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\tcachedModule.loaded = true;\n\t\t\t\treturn cachedModule.exports;\n\t\t\t};\n\t\t}\n\t\tif (!shouldTryNodeModules) break;\n\t\tconst nextDir = normalize(originalModuleDir + '/..');\n\t\tif (nextDir === originalModuleDir) break;\n\t\toriginalModuleDir = nextDir;\n\t}\n\treturn require(path);\n}\n\ncommonjsRequire.cache = DYNAMIC_REQUIRE_CACHE;\n`;\n\nexport function getHelpersModule(isDynamicRequireModulesEnabled) {\n  return `${HELPERS}${isDynamicRequireModulesEnabled ? HELPERS_DYNAMIC : HELPER_NON_DYNAMIC}`;\n}\n","/* eslint-disable no-undefined */\nexport { default as isReference } from 'is-reference';\n\nconst operators = {\n  '==': (x) => equals(x.left, x.right, false),\n\n  '!=': (x) => not(operators['=='](x)),\n\n  '===': (x) => equals(x.left, x.right, true),\n\n  '!==': (x) => not(operators['==='](x)),\n\n  '!': (x) => isFalsy(x.argument),\n\n  '&&': (x) => isTruthy(x.left) && isTruthy(x.right),\n\n  '||': (x) => isTruthy(x.left) || isTruthy(x.right)\n};\n\nconst extractors = {\n  Identifier(names, node) {\n    names.push(node.name);\n  },\n\n  ObjectPattern(names, node) {\n    node.properties.forEach((prop) => {\n      getExtractor(prop.value.type)(names, prop.value);\n    });\n  },\n\n  ArrayPattern(names, node) {\n    node.elements.forEach((element) => {\n      if (!element) return;\n      getExtractor(element.type)(names, element);\n    });\n  },\n\n  RestElement(names, node) {\n    getExtractor(node.argument.type)(names, node.argument);\n  },\n\n  AssignmentPattern(names, node) {\n    getExtractor(node.left.type)(names, node.left);\n  }\n};\n\nexport function flatten(node) {\n  const parts = [];\n\n  while (node.type === 'MemberExpression') {\n    if (node.computed) return null;\n\n    parts.unshift(node.property.name);\n    // eslint-disable-next-line no-param-reassign\n    node = node.object;\n  }\n\n  if (node.type !== 'Identifier') return null;\n\n  const { name } = node;\n  parts.unshift(name);\n\n  return { name, keypath: parts.join('.') };\n}\n\nexport function extractNames(node) {\n  const names = [];\n  extractors[node.type](names, node);\n  return names;\n}\n\nfunction getExtractor(type) {\n  const extractor = extractors[type];\n  if (!extractor) throw new SyntaxError(`${type} pattern not supported.`);\n  return extractor;\n}\n\nexport function isTruthy(node) {\n  if (node.type === 'Literal') return !!node.value;\n  if (node.type === 'ParenthesizedExpression') return isTruthy(node.expression);\n  if (node.operator in operators) return operators[node.operator](node);\n  return undefined;\n}\n\nexport function isFalsy(node) {\n  return not(isTruthy(node));\n}\n\nfunction not(value) {\n  return value === undefined ? value : !value;\n}\n\nfunction equals(a, b, strict) {\n  if (a.type !== b.type) return undefined;\n  // eslint-disable-next-line eqeqeq\n  if (a.type === 'Literal') return strict ? a.value === b.value : a.value == b.value;\n  return undefined;\n}\n","/* eslint-disable import/prefer-default-export */\nimport { basename, dirname, extname, sep } from 'path';\n\nimport { makeLegalIdentifier } from '@rollup/pluginutils';\n\nexport function getName(id) {\n  const name = makeLegalIdentifier(basename(id, extname(id)));\n  if (name !== 'index') {\n    return name;\n  }\n  const segments = dirname(id).split(sep);\n  return makeLegalIdentifier(segments[segments.length - 1]);\n}\n","/* eslint-disable no-param-reassign, no-shadow, no-underscore-dangle, no-continue */\n\nimport { dirname, resolve } from 'path';\n\nimport { attachScopes, extractAssignedNames, makeLegalIdentifier } from '@rollup/pluginutils';\nimport { walk } from 'estree-walker';\nimport MagicString from 'magic-string';\nimport { sync as nodeResolveSync } from 'resolve';\n\nimport { flatten, isFalsy, isReference, isTruthy } from './ast-utils';\nimport {\n  DYNAMIC_JSON_PREFIX,\n  DYNAMIC_REGISTER_PREFIX,\n  getProxyId,\n  getVirtualPathForDynamicRequirePath,\n  HELPERS_ID\n} from './helpers';\nimport { getName } from './utils';\n\nconst reserved = 'process location abstract arguments boolean break byte case catch char class const continue debugger default delete do double else enum eval export extends false final finally float for from function goto if implements import in instanceof int interface let long native new null package private protected public return short static super switch synchronized this throw throws transient true try typeof var void volatile while with yield'.split(\n  ' '\n);\nconst blacklist = { __esModule: true };\nreserved.forEach((word) => (blacklist[word] = true));\n\nconst exportsPattern = /^(?:module\\.)?exports(?:\\.([a-zA-Z_$][a-zA-Z_$0-9]*))?$/;\n\nconst firstpassGlobal = /\\b(?:require|module|exports|global)\\b/;\nconst firstpassNoGlobal = /\\b(?:require|module|exports)\\b/;\nconst functionType = /^(?:FunctionDeclaration|FunctionExpression|ArrowFunctionExpression)$/;\n\nfunction deconflict(scope, globals, identifier) {\n  let i = 1;\n  let deconflicted = makeLegalIdentifier(identifier);\n\n  while (scope.contains(deconflicted) || globals.has(deconflicted) || deconflicted in blacklist) {\n    deconflicted = `${identifier}_${i}`;\n    i += 1;\n  }\n  scope.declarations[deconflicted] = true;\n\n  return deconflicted;\n}\n\nfunction tryParse(parse, code, id) {\n  try {\n    return parse(code, { allowReturnOutsideFunction: true });\n  } catch (err) {\n    err.message += ` in ${id}`;\n    throw err;\n  }\n}\n\nexport function normalizePathSlashes(path) {\n  return path.replace(/\\\\/g, '/');\n}\n\nexport function hasCjsKeywords(code, ignoreGlobal) {\n  const firstpass = ignoreGlobal ? firstpassNoGlobal : firstpassGlobal;\n  return firstpass.test(code);\n}\n\nexport function checkEsModule(parse, code, id) {\n  const ast = tryParse(parse, code, id);\n\n  let isEsModule = false;\n  let hasDefaultExport = false;\n  let hasNamedExports = false;\n  for (const node of ast.body) {\n    if (node.type === 'ExportDefaultDeclaration') {\n      isEsModule = true;\n      hasDefaultExport = true;\n    } else if (node.type === 'ExportNamedDeclaration') {\n      isEsModule = true;\n      if (node.declaration) {\n        hasNamedExports = true;\n      } else {\n        for (const specifier of node.specifiers) {\n          if (specifier.exported.name === 'default') {\n            hasDefaultExport = true;\n          } else {\n            hasNamedExports = true;\n          }\n        }\n      }\n    } else if (node.type === 'ExportAllDeclaration') {\n      isEsModule = true;\n      if (node.exported && node.exported.name === 'default') {\n        hasDefaultExport = true;\n      } else {\n        hasNamedExports = true;\n      }\n    } else if (node.type === 'ImportDeclaration') {\n      isEsModule = true;\n    }\n  }\n\n  return { isEsModule, hasDefaultExport, hasNamedExports, ast };\n}\n\nfunction getDefinePropertyCallName(node, targetName) {\n  if (node.type !== 'CallExpression') return;\n\n  const {\n    callee: { object, property }\n  } = node;\n\n  if (!object || object.type !== 'Identifier' || object.name !== 'Object') return;\n\n  if (!property || property.type !== 'Identifier' || property.name !== 'defineProperty') return;\n\n  if (node.arguments.length !== 3) return;\n\n  const [target, val] = node.arguments;\n  if (target.type !== 'Identifier' || target.name !== targetName) return;\n  // eslint-disable-next-line consistent-return\n  return val.value;\n}\n\nexport function transformCommonjs(\n  parse,\n  code,\n  id,\n  isEsModule,\n  ignoreGlobal,\n  ignoreRequire,\n  sourceMap,\n  isDynamicRequireModulesEnabled,\n  dynamicRequireModuleSet,\n  commonDir,\n  astCache\n) {\n  const ast = astCache || tryParse(parse, code, id);\n\n  const magicString = new MagicString(code);\n\n  const required = {};\n  // Because objects have no guaranteed ordering, yet we need it,\n  // we need to keep track of the order in a array\n  const sources = [];\n\n  let uid = 0;\n\n  let scope = attachScopes(ast, 'scope');\n  const uses = { module: false, exports: false, global: false, require: false };\n\n  let lexicalDepth = 0;\n  let programDepth = 0;\n\n  const globals = new Set();\n\n  // TODO technically wrong since globals isn't populated yet, but ¯\\_(ツ)_/¯\n  const HELPERS_NAME = deconflict(scope, globals, 'commonjsHelpers');\n\n  const namedExports = {};\n\n  // TODO handle transpiled modules\n  let shouldWrap = /__esModule/.test(code);\n  let usesCommonjsHelpers = false;\n\n  function isRequireStatement(node) {\n    if (!node) return false;\n    if (node.type !== 'CallExpression') return false;\n\n    // Weird case of `require()` or `module.require()` without arguments\n    if (node.arguments.length === 0) return false;\n\n    return isRequireIdentifier(node.callee);\n  }\n\n  function isRequireIdentifier(node) {\n    if (!node) return false;\n\n    if (node.type === 'Identifier' && node.name === 'require' /* `require` */) {\n      // `require` is hidden by a variable in local scope\n      if (scope.contains('require')) return false;\n\n      return true;\n    } else if (node.type === 'MemberExpression' /* `[something].[something]` */) {\n      // `module.[something]`\n      if (node.object.type !== 'Identifier' || node.object.name !== 'module') return false;\n\n      // `module` is hidden by a variable in local scope\n      if (scope.contains('module')) return false;\n\n      // `module.require(...)`\n      if (node.property.type !== 'Identifier' || node.property.name !== 'require') return false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function hasDynamicArguments(node) {\n    return (\n      node.arguments.length > 1 ||\n      (node.arguments[0].type !== 'Literal' &&\n        (node.arguments[0].type !== 'TemplateLiteral' || node.arguments[0].expressions.length > 0))\n    );\n  }\n\n  function isStaticRequireStatement(node) {\n    if (!isRequireStatement(node)) return false;\n    return !hasDynamicArguments(node);\n  }\n\n  function isNodeRequireStatement(parent) {\n    const reservedMethod = ['resolve', 'cache', 'main'];\n    return !!(parent && parent.property && reservedMethod.indexOf(parent.property.name) > -1);\n  }\n\n  function isIgnoredRequireStatement(requiredNode) {\n    return ignoreRequire(requiredNode.arguments[0].value);\n  }\n\n  function getRequireStringArg(node) {\n    return node.arguments[0].type === 'Literal'\n      ? node.arguments[0].value\n      : node.arguments[0].quasis[0].value.cooked;\n  }\n\n  function getRequired(node, name) {\n    let sourceId = getRequireStringArg(node);\n    const isDynamicRegister = sourceId.startsWith(DYNAMIC_REGISTER_PREFIX);\n    if (isDynamicRegister) {\n      sourceId = sourceId.substr(DYNAMIC_REGISTER_PREFIX.length);\n    }\n\n    const existing = required[sourceId];\n    // eslint-disable-next-line no-undefined\n    if (existing === undefined) {\n      const isDynamic = hasDynamicModuleForPath(sourceId);\n\n      if (!name) {\n        do {\n          name = `require$$${uid}`;\n          uid += 1;\n        } while (scope.contains(name));\n      }\n\n      if (isDynamicRegister && sourceId.endsWith('.json')) {\n        sourceId = DYNAMIC_JSON_PREFIX + sourceId;\n      }\n\n      if (isDynamicRegister || !isDynamic || sourceId.endsWith('.json')) {\n        sources.push([sourceId, !isDynamicRegister]);\n      }\n\n      required[sourceId] = { source: sourceId, name, importsDefault: false, isDynamic };\n    }\n\n    return required[sourceId];\n  }\n\n  function hasDynamicModuleForPath(source) {\n    if (!/[/\\\\]/.test(source)) {\n      try {\n        const resolvedPath = normalizePathSlashes(\n          nodeResolveSync(source, { basedir: dirname(id) })\n        );\n        if (dynamicRequireModuleSet.has(resolvedPath)) {\n          return true;\n        }\n      } catch (ex) {\n        // Probably a node.js internal module\n        return false;\n      }\n\n      return false;\n    }\n\n    for (const attemptExt of ['', '.js', '.json']) {\n      const resolvedPath = normalizePathSlashes(resolve(dirname(id), source + attemptExt));\n      if (dynamicRequireModuleSet.has(resolvedPath)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function shouldUseSimulatedRequire(required) {\n    return (\n      hasDynamicModuleForPath(required.source) &&\n      // We only do `commonjsRequire` for json if it's the `commonjsRegister` call.\n      (required.source.startsWith(DYNAMIC_REGISTER_PREFIX) || !required.source.endsWith('.json'))\n    );\n  }\n\n  // do a first pass, see which names are assigned to. This is necessary to prevent\n  // illegally replacing `var foo = require('foo')` with `import foo from 'foo'`,\n  // where `foo` is later reassigned. (This happens in the wild. CommonJS, sigh)\n  const assignedTo = new Set();\n  walk(ast, {\n    enter(node) {\n      if (node.type !== 'AssignmentExpression') return;\n      if (node.left.type === 'MemberExpression') return;\n\n      extractAssignedNames(node.left).forEach((name) => {\n        assignedTo.add(name);\n      });\n    }\n  });\n\n  walk(ast, {\n    enter(node, parent) {\n      if (sourceMap) {\n        magicString.addSourcemapLocation(node.start);\n        magicString.addSourcemapLocation(node.end);\n      }\n\n      // skip dead branches\n      if (parent && (parent.type === 'IfStatement' || parent.type === 'ConditionalExpression')) {\n        if (node === parent.consequent && isFalsy(parent.test)) {\n          this.skip();\n          return;\n        }\n        if (node === parent.alternate && isTruthy(parent.test)) {\n          this.skip();\n          return;\n        }\n      }\n\n      if (node._skip) {\n        this.skip();\n        return;\n      }\n\n      programDepth += 1;\n\n      if (node.scope) ({ scope } = node);\n      if (functionType.test(node.type)) lexicalDepth += 1;\n\n      // if toplevel return, we need to wrap it\n      if (node.type === 'ReturnStatement' && lexicalDepth === 0) {\n        shouldWrap = true;\n      }\n\n      // rewrite `this` as `commonjsHelpers.commonjsGlobal`\n      if (node.type === 'ThisExpression' && lexicalDepth === 0) {\n        uses.global = true;\n        if (!ignoreGlobal) {\n          magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsGlobal`, {\n            storeName: true\n          });\n          usesCommonjsHelpers = true;\n        }\n        return;\n      }\n\n      // rewrite `typeof module`, `typeof module.exports` and `typeof exports` (https://github.com/rollup/rollup-plugin-commonjs/issues/151)\n      if (node.type === 'UnaryExpression' && node.operator === 'typeof') {\n        const flattened = flatten(node.argument);\n        if (!flattened) return;\n\n        if (scope.contains(flattened.name)) return;\n\n        if (\n          flattened.keypath === 'module.exports' ||\n          flattened.keypath === 'module' ||\n          flattened.keypath === 'exports'\n        ) {\n          magicString.overwrite(node.start, node.end, `'object'`, { storeName: false });\n        }\n      }\n\n      // rewrite `require` (if not already handled) `global` and `define`, and handle free references to\n      // `module` and `exports` as these mean we need to wrap the module in commonjsHelpers.createCommonjsModule\n      if (node.type === 'Identifier') {\n        if (isReference(node, parent) && !scope.contains(node.name)) {\n          if (node.name in uses) {\n            if (isRequireIdentifier(node)) {\n              if (isNodeRequireStatement(parent)) {\n                return;\n              }\n\n              if (!isDynamicRequireModulesEnabled && isStaticRequireStatement(parent)) {\n                return;\n              }\n\n              if (isDynamicRequireModulesEnabled && isRequireStatement(parent)) {\n                magicString.appendLeft(\n                  parent.end - 1,\n                  `,${JSON.stringify(\n                    dirname(id) === '.'\n                      ? null /* default behavior */\n                      : getVirtualPathForDynamicRequirePath(\n                          normalizePathSlashes(dirname(id)),\n                          commonDir\n                        )\n                  )}`\n                );\n              }\n\n              magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsRequire`, {\n                storeName: true\n              });\n              usesCommonjsHelpers = true;\n            }\n\n            uses[node.name] = true;\n            if (node.name === 'global' && !ignoreGlobal) {\n              magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsGlobal`, {\n                storeName: true\n              });\n              usesCommonjsHelpers = true;\n            }\n\n            // if module or exports are used outside the context of an assignment\n            // expression, we need to wrap the module\n            if (node.name === 'module' || node.name === 'exports') {\n              shouldWrap = true;\n            }\n          }\n\n          if (node.name === 'define') {\n            magicString.overwrite(node.start, node.end, 'undefined', { storeName: true });\n          }\n\n          globals.add(node.name);\n        }\n\n        return;\n      }\n\n      // Is this an assignment to exports or module.exports?\n      if (node.type === 'AssignmentExpression') {\n        if (node.left.type !== 'MemberExpression') return;\n\n        const flattened = flatten(node.left);\n        if (!flattened) return;\n\n        if (scope.contains(flattened.name)) return;\n\n        const match = exportsPattern.exec(flattened.keypath);\n        if (!match || flattened.keypath === 'exports') return;\n\n        uses[flattened.name] = true;\n\n        // we're dealing with `module.exports = ...` or `[module.]exports.foo = ...` –\n        // if this isn't top-level, we'll need to wrap the module\n        if (programDepth > 3) shouldWrap = true;\n\n        node.left._skip = true;\n\n        if (flattened.keypath === 'module.exports' && node.right.type === 'ObjectExpression') {\n          node.right.properties.forEach((prop) => {\n            if (prop.computed || !('key' in prop) || prop.key.type !== 'Identifier') return;\n            const { name } = prop.key;\n            if (name === makeLegalIdentifier(name)) namedExports[name] = true;\n          });\n          return;\n        }\n\n        if (match[1]) namedExports[match[1]] = true;\n        return;\n      }\n\n      const name = getDefinePropertyCallName(node, 'exports');\n      if (name && name === makeLegalIdentifier(name)) namedExports[name] = true;\n\n      // if this is `var x = require('x')`, we can do `import x from 'x'`\n      if (\n        node.type === 'VariableDeclarator' &&\n        node.id.type === 'Identifier' &&\n        isStaticRequireStatement(node.init) &&\n        !isIgnoredRequireStatement(node.init)\n      ) {\n        // for now, only do this for top-level requires. maybe fix this in future\n        if (scope.parent) return;\n\n        // edge case — CJS allows you to assign to imports. ES doesn't\n        if (assignedTo.has(node.id.name)) return;\n\n        const required = getRequired(node.init, node.id.name);\n        required.importsDefault = true;\n\n        if (required.name === node.id.name && !required.isDynamic) {\n          node._shouldRemove = true;\n        }\n      }\n\n      if (!isStaticRequireStatement(node) || isIgnoredRequireStatement(node)) {\n        return;\n      }\n\n      const required = getRequired(node);\n\n      if (parent.type === 'ExpressionStatement') {\n        // is a bare import, e.g. `require('foo');`\n        magicString.remove(parent.start, parent.end);\n      } else {\n        required.importsDefault = true;\n\n        if (shouldUseSimulatedRequire(required)) {\n          magicString.overwrite(\n            node.start,\n            node.end,\n            `${HELPERS_NAME}.commonjsRequire(${JSON.stringify(\n              getVirtualPathForDynamicRequirePath(normalizePathSlashes(required.source), commonDir)\n            )}, ${JSON.stringify(\n              dirname(id) === '.'\n                ? null /* default behavior */\n                : getVirtualPathForDynamicRequirePath(normalizePathSlashes(dirname(id)), commonDir)\n            )})`\n          );\n          usesCommonjsHelpers = true;\n        } else {\n          magicString.overwrite(node.start, node.end, required.name);\n        }\n      }\n\n      node.callee._skip = true;\n    },\n\n    leave(node) {\n      programDepth -= 1;\n      if (node.scope) scope = scope.parent;\n      if (functionType.test(node.type)) lexicalDepth -= 1;\n\n      if (node.type === 'VariableDeclaration') {\n        let keepDeclaration = false;\n        let c = node.declarations[0].start;\n\n        for (let i = 0; i < node.declarations.length; i += 1) {\n          const declarator = node.declarations[i];\n\n          if (declarator._shouldRemove) {\n            magicString.remove(c, declarator.end);\n          } else {\n            if (!keepDeclaration) {\n              magicString.remove(c, declarator.start);\n              keepDeclaration = true;\n            }\n\n            c = declarator.end;\n          }\n        }\n\n        if (!keepDeclaration) {\n          magicString.remove(node.start, node.end);\n        }\n      }\n    }\n  });\n\n  if (\n    !sources.length &&\n    !uses.module &&\n    !uses.exports &&\n    !uses.require &&\n    (ignoreGlobal || !uses.global)\n  ) {\n    // not a CommonJS module\n    return null;\n  }\n\n  // If `isEsModule` is on, it means it has ES6 import/export statements,\n  //   which just can't be wrapped in a function.\n  if (isEsModule) shouldWrap = false;\n\n  usesCommonjsHelpers = usesCommonjsHelpers || shouldWrap;\n\n  const importBlock = `${(usesCommonjsHelpers\n    ? [`import * as ${HELPERS_NAME} from '${HELPERS_ID}';`]\n    : []\n  )\n    .concat(\n      sources.map(\n        ([source]) =>\n          // import the actual module before the proxy, so that we know\n          // what kind of proxy to build\n          `import '${source}';`\n      ),\n      sources\n        .filter(([, importProxy]) => importProxy)\n        .map(([source]) => {\n          const { name, importsDefault } = required[source];\n          return `import ${importsDefault ? `${name} from ` : ``}'${\n            source.startsWith('\\0') ? source : getProxyId(source)\n          }';`;\n        })\n    )\n    .join('\\n')}\\n\\n`;\n\n  const namedExportDeclarations = [];\n  let wrapperStart = '';\n  let wrapperEnd = '';\n\n  const moduleName = deconflict(scope, globals, getName(id));\n  if (!isEsModule) {\n    const exportModuleExports = {\n      str: `export { ${moduleName} as __moduleExports };`,\n      name: '__moduleExports'\n    };\n\n    namedExportDeclarations.push(exportModuleExports);\n  }\n\n  const defaultExportPropertyAssignments = [];\n  let hasDefaultExport = false;\n\n  if (shouldWrap) {\n    const args = `module${uses.exports ? ', exports' : ''}`;\n\n    wrapperStart = `var ${moduleName} = ${HELPERS_NAME}.createCommonjsModule(function (${args}) {\\n`;\n\n    wrapperEnd = `\\n}`;\n    if (isDynamicRequireModulesEnabled) {\n      wrapperEnd += `, ${JSON.stringify(\n        getVirtualPathForDynamicRequirePath(normalizePathSlashes(dirname(id)), commonDir)\n      )}`;\n    }\n\n    wrapperEnd += `);`;\n  } else {\n    const names = [];\n\n    for (const node of ast.body) {\n      if (node.type === 'ExpressionStatement' && node.expression.type === 'AssignmentExpression') {\n        const { left } = node.expression;\n        const flattened = flatten(left);\n\n        if (!flattened) {\n          continue;\n        }\n\n        const match = exportsPattern.exec(flattened.keypath);\n        if (!match) {\n          continue;\n        }\n\n        if (flattened.keypath === 'module.exports') {\n          hasDefaultExport = true;\n          magicString.overwrite(left.start, left.end, `var ${moduleName}`);\n        } else {\n          const [, name] = match;\n          const deconflicted = deconflict(scope, globals, name);\n\n          names.push({ name, deconflicted });\n\n          magicString.overwrite(node.start, left.end, `var ${deconflicted}`);\n\n          const declaration =\n            name === deconflicted\n              ? `export { ${name} };`\n              : `export { ${deconflicted} as ${name} };`;\n\n          if (name !== 'default') {\n            namedExportDeclarations.push({\n              str: declaration,\n              name\n            });\n          }\n\n          defaultExportPropertyAssignments.push(`${moduleName}.${name} = ${deconflicted};`);\n        }\n      }\n    }\n\n    if (!(isEsModule || hasDefaultExport)) {\n      wrapperEnd = `\\n\\nvar ${moduleName} = {\\n${names\n        .map(({ name, deconflicted }) => `\\t${name}: ${deconflicted}`)\n        .join(',\\n')}\\n};`;\n    }\n  }\n\n  magicString\n    .trim()\n    .prepend(importBlock + wrapperStart)\n    .trim()\n    .append(wrapperEnd);\n\n  const defaultExport =\n    code.indexOf('__esModule') >= 0\n      ? `export default /*@__PURE__*/${HELPERS_NAME}.getDefaultExportFromCjs(${moduleName});`\n      : `export default ${moduleName};`;\n\n  const named = namedExportDeclarations\n    .filter((x) => x.name !== 'default' || !hasDefaultExport)\n    .map((x) => x.str);\n\n  magicString.append(\n    `\\n\\n${(isEsModule ? [] : [defaultExport])\n      .concat(named)\n      .concat(hasDefaultExport ? defaultExportPropertyAssignments : [])\n      .join('\\n')}`\n  );\n\n  code = magicString.toString();\n  const map = sourceMap ? magicString.generateMap() : null;\n\n  return { code, map, syntheticNamedExports: isEsModule ? false : '__moduleExports' };\n}\n","import { existsSync, readFileSync } from 'fs';\nimport { join } from 'path';\n\nimport {\n  DYNAMIC_PACKAGES_ID,\n  DYNAMIC_REGISTER_PREFIX,\n  getVirtualPathForDynamicRequirePath,\n  HELPERS_ID\n} from './helpers';\nimport { normalizePathSlashes } from './transform';\n\nexport function getDynamicPackagesModule(dynamicRequireModuleDirPaths, commonDir) {\n  let code = `const commonjsRegister = require('${HELPERS_ID}?commonjsRegister');`;\n  for (const dir of dynamicRequireModuleDirPaths) {\n    let entryPoint = 'index.js';\n\n    try {\n      if (existsSync(join(dir, 'package.json'))) {\n        entryPoint =\n          JSON.parse(readFileSync(join(dir, 'package.json'), { encoding: 'utf8' })).main ||\n          entryPoint;\n      }\n    } catch (ignored) {\n      // ignored\n    }\n\n    code += `\\ncommonjsRegister(${JSON.stringify(\n      getVirtualPathForDynamicRequirePath(dir, commonDir)\n    )}, function (module, exports) {\n  module.exports = require(${JSON.stringify(normalizePathSlashes(join(dir, entryPoint)))});\n});`;\n  }\n  return code;\n}\n\nexport function getDynamicPackagesEntryIntro(\n  id,\n  dynamicRequireModuleDirPaths,\n  dynamicRequireModuleSet\n) {\n  try {\n    const code = readFileSync(id, { encoding: 'utf8' });\n    let dynamicImports = Array.from(\n      dynamicRequireModuleSet,\n      (dynamicId) => `require(${JSON.stringify(DYNAMIC_REGISTER_PREFIX + dynamicId)});`\n    ).join('\\n');\n\n    if (dynamicRequireModuleDirPaths.length) {\n      dynamicImports += `require(${JSON.stringify(\n        DYNAMIC_REGISTER_PREFIX + DYNAMIC_PACKAGES_ID\n      )});`;\n    }\n\n    return `${dynamicImports}\\n${code}`;\n  } catch (ex) {\n    this.warn(`Failed to read file ${id}, dynamic modules might not work correctly`);\n    return null;\n  }\n}\n","import { statSync } from 'fs';\n\nimport { resolve } from 'path';\n\nimport glob from 'glob';\n\nimport { normalizePathSlashes } from './transform';\n\nexport default function getDynamicRequirePaths(patterns) {\n  const dynamicRequireModuleSet = new Set();\n  for (const pattern of !patterns || Array.isArray(patterns) ? patterns || [] : [patterns]) {\n    const isNegated = pattern.startsWith('!');\n    const modifySet = Set.prototype[isNegated ? 'delete' : 'add'].bind(dynamicRequireModuleSet);\n    for (const path of glob.sync(isNegated ? pattern.substr(1) : pattern)) {\n      modifySet(normalizePathSlashes(resolve(path)));\n    }\n  }\n  const dynamicRequireModuleDirPaths = Array.from(dynamicRequireModuleSet.values()).filter(\n    (path) => {\n      try {\n        if (statSync(path).isDirectory()) return true;\n      } catch (ignored) {\n        // Nothing to do here\n      }\n      return false;\n    }\n  );\n  return { dynamicRequireModuleSet, dynamicRequireModuleDirPaths };\n}\n","/* eslint-disable no-undefined */\nconst isCjsPromises = new Map();\n\nexport function getIsCjsPromise(id) {\n  let isCjsPromise = isCjsPromises.get(id);\n  if (isCjsPromise) return isCjsPromise.promise;\n\n  const promise = new Promise((resolve) => {\n    isCjsPromise = {\n      resolve,\n      promise: undefined\n    };\n    isCjsPromises.set(id, isCjsPromise);\n  });\n  isCjsPromise.promise = promise;\n\n  return promise;\n}\n\nexport function setIsCjsPromise(id, resolution) {\n  const isCjsPromise = isCjsPromises.get(id);\n  if (isCjsPromise) {\n    if (isCjsPromise.resolve) {\n      isCjsPromise.resolve(resolution);\n      isCjsPromise.resolve = undefined;\n    }\n  } else {\n    isCjsPromises.set(id, { promise: Promise.resolve(resolution), resolve: undefined });\n  }\n}\n","import { readFileSync } from 'fs';\n\nimport { DYNAMIC_JSON_PREFIX, getVirtualPathForDynamicRequirePath, HELPERS_ID } from './helpers';\nimport { getIsCjsPromise } from './is-cjs';\nimport { normalizePathSlashes } from './transform';\nimport { getName } from './utils';\n\n// e.g. id === \"commonjsHelpers?commonjsRegister\"\nexport function getSpecificHelperProxy(id) {\n  return `export {${id.split('?')[1]} as default} from '${HELPERS_ID}';`;\n}\n\nexport function getUnknownRequireProxy(id, requireReturnsDefault) {\n  if (requireReturnsDefault === true || id.endsWith('.json')) {\n    return `export {default} from ${JSON.stringify(id)};`;\n  }\n  const name = getName(id);\n  const exported =\n    requireReturnsDefault === 'auto'\n      ? `import {getDefaultExportFromNamespaceIfNotNamed} from \"${HELPERS_ID}\"; export default /*@__PURE__*/getDefaultExportFromNamespaceIfNotNamed(${name})`\n      : requireReturnsDefault === 'preferred'\n      ? `import {getDefaultExportFromNamespaceIfPresent} from \"${HELPERS_ID}\"; export default /*@__PURE__*/getDefaultExportFromNamespaceIfPresent(${name})`\n      : `export default ${name}`;\n  return `import * as ${name} from ${JSON.stringify(id)}; ${exported}`;\n}\n\nexport function getDynamicJsonProxy(id, commonDir) {\n  const normalizedPath = normalizePathSlashes(id.slice(DYNAMIC_JSON_PREFIX.length));\n  return `const commonjsRegister = require('${HELPERS_ID}?commonjsRegister');\\ncommonjsRegister(${JSON.stringify(\n    getVirtualPathForDynamicRequirePath(normalizedPath, commonDir)\n  )}, function (module, exports) {\n  module.exports = require(${JSON.stringify(normalizedPath)});\n});`;\n}\n\nexport function getDynamicRequireProxy(normalizedPath, commonDir) {\n  return `const commonjsRegister = require('${HELPERS_ID}?commonjsRegister');\\ncommonjsRegister(${JSON.stringify(\n    getVirtualPathForDynamicRequirePath(normalizedPath, commonDir)\n  )}, function (module, exports) {\n  ${readFileSync(normalizedPath, { encoding: 'utf8' })}\n});`;\n}\n\nexport async function getStaticRequireProxy(\n  id,\n  requireReturnsDefault,\n  esModulesWithDefaultExport,\n  esModulesWithNamedExports\n) {\n  const name = getName(id);\n  const isCjs = await getIsCjsPromise(id);\n  if (isCjs) {\n    return `import { __moduleExports } from ${JSON.stringify(id)}; export default __moduleExports;`;\n  } else if (isCjs === null) {\n    return getUnknownRequireProxy(id, requireReturnsDefault);\n  } else if (\n    requireReturnsDefault !== true &&\n    (!requireReturnsDefault ||\n      !esModulesWithDefaultExport.has(id) ||\n      (esModulesWithNamedExports.has(id) && requireReturnsDefault === 'auto'))\n  ) {\n    return `import * as ${name} from ${JSON.stringify(id)}; export default ${name};`;\n  }\n  return `export {default} from ${JSON.stringify(id)};`;\n}\n","/* eslint-disable no-param-reassign, no-undefined */\n\nimport { statSync } from 'fs';\nimport { dirname, resolve, sep } from 'path';\n\nimport {\n  DYNAMIC_JSON_PREFIX,\n  DYNAMIC_PACKAGES_ID,\n  getExternalProxyId,\n  getIdFromProxyId,\n  getProxyId,\n  HELPERS_ID,\n  PROXY_SUFFIX\n} from './helpers';\n\nfunction getCandidatesForExtension(resolved, extension) {\n  return [resolved + extension, `${resolved}${sep}index${extension}`];\n}\n\nfunction getCandidates(resolved, extensions) {\n  return extensions.reduce(\n    (paths, extension) => paths.concat(getCandidatesForExtension(resolved, extension)),\n    [resolved]\n  );\n}\n\nexport default function getResolveId(extensions) {\n  function resolveExtensions(importee, importer) {\n    // not our problem\n    if (importee[0] !== '.' || !importer) return undefined;\n\n    const resolved = resolve(dirname(importer), importee);\n    const candidates = getCandidates(resolved, extensions);\n\n    for (let i = 0; i < candidates.length; i += 1) {\n      try {\n        const stats = statSync(candidates[i]);\n        if (stats.isFile()) return { id: candidates[i] };\n      } catch (err) {\n        /* noop */\n      }\n    }\n\n    return undefined;\n  }\n\n  function resolveId(importee, importer) {\n    const isProxyModule = importee.endsWith(PROXY_SUFFIX);\n    if (isProxyModule) {\n      importee = getIdFromProxyId(importee);\n    }\n    if (importee.startsWith('\\0')) {\n      if (\n        importee.startsWith(HELPERS_ID) ||\n        importee === DYNAMIC_PACKAGES_ID ||\n        importee.startsWith(DYNAMIC_JSON_PREFIX)\n      ) {\n        return importee;\n      }\n      if (!isProxyModule) {\n        return null;\n      }\n    }\n\n    if (importer && importer.endsWith(PROXY_SUFFIX)) {\n      importer = getIdFromProxyId(importer);\n    }\n\n    return this.resolve(importee, importer, { skipSelf: true }).then((resolved) => {\n      if (!resolved) {\n        resolved = resolveExtensions(importee, importer);\n      }\n      if (isProxyModule) {\n        if (!resolved) {\n          return { id: getExternalProxyId(importee), external: false };\n        }\n        resolved.id = (resolved.external ? getExternalProxyId : getProxyId)(resolved.id);\n        resolved.external = false;\n        return resolved;\n      }\n      return resolved;\n    });\n  }\n\n  return resolveId;\n}\n","import { extname } from 'path';\n\nimport { createFilter } from '@rollup/pluginutils';\nimport getCommonDir from 'commondir';\n\nimport { peerDependencies } from '../package.json';\n\nimport { getDynamicPackagesEntryIntro, getDynamicPackagesModule } from './dynamic-packages-manager';\nimport getDynamicRequirePaths from './dynamic-require-paths';\nimport {\n  DYNAMIC_JSON_PREFIX,\n  DYNAMIC_PACKAGES_ID,\n  EXTERNAL_SUFFIX,\n  getHelpersModule,\n  getIdFromExternalProxyId,\n  getIdFromProxyId,\n  HELPERS_ID,\n  PROXY_SUFFIX\n} from './helpers';\nimport { setIsCjsPromise } from './is-cjs';\nimport {\n  getDynamicJsonProxy,\n  getDynamicRequireProxy,\n  getSpecificHelperProxy,\n  getStaticRequireProxy,\n  getUnknownRequireProxy\n} from './proxies';\nimport getResolveId from './resolve-id';\nimport {\n  checkEsModule,\n  hasCjsKeywords,\n  normalizePathSlashes,\n  transformCommonjs\n} from './transform';\n\nexport default function commonjs(options = {}) {\n  const extensions = options.extensions || ['.js'];\n  const filter = createFilter(options.include, options.exclude);\n  const {\n    ignoreGlobal,\n    requireReturnsDefault: requireReturnsDefaultOption,\n    esmExternals\n  } = options;\n  const getRequireReturnsDefault =\n    typeof requireReturnsDefaultOption === 'function'\n      ? requireReturnsDefaultOption\n      : () => requireReturnsDefaultOption;\n  let esmExternalIds;\n  const isEsmExternal =\n    typeof esmExternals === 'function'\n      ? esmExternals\n      : Array.isArray(esmExternals)\n      ? ((esmExternalIds = new Set(esmExternals)), (id) => esmExternalIds.has(id))\n      : () => esmExternals;\n\n  const { dynamicRequireModuleSet, dynamicRequireModuleDirPaths } = getDynamicRequirePaths(\n    options.dynamicRequireTargets\n  );\n  const isDynamicRequireModulesEnabled = dynamicRequireModuleSet.size > 0;\n  const commonDir = isDynamicRequireModulesEnabled\n    ? getCommonDir(null, Array.from(dynamicRequireModuleSet).concat(process.cwd()))\n    : null;\n\n  const esModulesWithDefaultExport = new Set();\n  const esModulesWithNamedExports = new Set();\n\n  const ignoreRequire =\n    typeof options.ignore === 'function'\n      ? options.ignore\n      : Array.isArray(options.ignore)\n      ? (id) => options.ignore.includes(id)\n      : () => false;\n\n  const resolveId = getResolveId(extensions);\n\n  const sourceMap = options.sourceMap !== false;\n\n  function transformAndCheckExports(code, id) {\n    const { isEsModule, hasDefaultExport, hasNamedExports, ast } = checkEsModule(\n      this.parse,\n      code,\n      id\n    );\n    if (hasDefaultExport) {\n      esModulesWithDefaultExport.add(id);\n    }\n    if (hasNamedExports) {\n      esModulesWithNamedExports.add(id);\n    }\n\n    if (\n      !dynamicRequireModuleSet.has(normalizePathSlashes(id)) &&\n      (!hasCjsKeywords(code, ignoreGlobal) || (isEsModule && !options.transformMixedEsModules))\n    ) {\n      setIsCjsPromise(id, false);\n      return null;\n    }\n\n    const transformed = transformCommonjs(\n      this.parse,\n      code,\n      id,\n      isEsModule,\n      ignoreGlobal || isEsModule,\n      ignoreRequire,\n      sourceMap,\n      isDynamicRequireModulesEnabled,\n      dynamicRequireModuleSet,\n      commonDir,\n      ast\n    );\n\n    setIsCjsPromise(id, isEsModule ? false : Boolean(transformed));\n    return transformed;\n  }\n\n  return {\n    name: 'commonjs',\n\n    buildStart() {\n      if (options.namedExports != null) {\n        this.warn(\n          'The namedExports option from \"@rollup/plugin-commonjs\" is deprecated. Named exports are now handled automatically.'\n        );\n      }\n\n      const [major, minor] = this.meta.rollupVersion.split('.').map(Number);\n      const minVersion = peerDependencies.rollup.slice(2);\n      const [minMajor, minMinor] = minVersion.split('.').map(Number);\n      if (major < minMajor || (major === minMajor && minor < minMinor)) {\n        this.error(\n          `Insufficient Rollup version: \"@rollup/plugin-commonjs\" requires at least rollup@${minVersion} but found rollup@${this.meta.rollupVersion}.`\n        );\n      }\n    },\n\n    resolveId,\n\n    load(id) {\n      if (id === HELPERS_ID) {\n        return getHelpersModule(isDynamicRequireModulesEnabled);\n      }\n\n      if (id.startsWith(HELPERS_ID)) {\n        return getSpecificHelperProxy(id);\n      }\n\n      if (id.endsWith(EXTERNAL_SUFFIX)) {\n        const actualId = getIdFromExternalProxyId(id);\n        return getUnknownRequireProxy(\n          actualId,\n          isEsmExternal(actualId) ? getRequireReturnsDefault(actualId) : true\n        );\n      }\n\n      if (id === DYNAMIC_PACKAGES_ID) {\n        return getDynamicPackagesModule(dynamicRequireModuleDirPaths, commonDir);\n      }\n\n      if (id.startsWith(DYNAMIC_JSON_PREFIX)) {\n        return getDynamicJsonProxy(id, commonDir);\n      }\n\n      const normalizedPath = normalizePathSlashes(id);\n      if (dynamicRequireModuleSet.has(normalizedPath) && !normalizedPath.endsWith('.json')) {\n        return getDynamicRequireProxy(normalizedPath, commonDir);\n      }\n\n      if (id.endsWith(PROXY_SUFFIX)) {\n        const actualId = getIdFromProxyId(id);\n        return getStaticRequireProxy(\n          actualId,\n          getRequireReturnsDefault(actualId),\n          esModulesWithDefaultExport,\n          esModulesWithNamedExports\n        );\n      }\n\n      if (isDynamicRequireModulesEnabled && this.getModuleInfo(id).isEntry) {\n        return getDynamicPackagesEntryIntro(\n          id,\n          dynamicRequireModuleDirPaths,\n          dynamicRequireModuleSet\n        );\n      }\n\n      return null;\n    },\n\n    transform(code, id) {\n      const extName = extname(id);\n      if (extName !== '.cjs' && id !== DYNAMIC_PACKAGES_ID && !id.startsWith(DYNAMIC_JSON_PREFIX)) {\n        if (!filter(id) || !extensions.includes(extName)) {\n          setIsCjsPromise(id, null);\n          return null;\n        }\n      }\n\n      let transformed;\n      try {\n        transformed = transformAndCheckExports.call(this, code, id);\n      } catch (err) {\n        transformed = null;\n        setIsCjsPromise(id, false);\n        this.error(err, err.loc);\n      }\n\n      return transformed;\n    }\n  };\n}\n"],"names":["nodeResolveSync"],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/index.js b/dist/index.js
index 737994a11bf119d7ce723e6dd1ec8629b3564feb..6501f2ee2915d538d907421659a8506e5908be8e 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -2,202 +2,57 @@
 
 function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
 
-var fs = require('fs');
 var path = require('path');
 var pluginutils = require('@rollup/pluginutils');
 var getCommonDir = _interopDefault(require('commondir'));
-var glob = _interopDefault(require('glob'));
+var fs = require('fs');
 var estreeWalker = require('estree-walker');
 var MagicString = _interopDefault(require('magic-string'));
 var resolve = require('resolve');
 var isReference = _interopDefault(require('is-reference'));
-
-function _slicedToArray(arr, i) {
-  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
-}
-
-function _arrayWithHoles(arr) {
-  if (Array.isArray(arr)) return arr;
-}
-
-function _iterableToArrayLimit(arr, i) {
-  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
-  var _arr = [];
-  var _n = true;
-  var _d = false;
-  var _e = undefined;
-
-  try {
-    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
-      _arr.push(_s.value);
-
-      if (i && _arr.length === i) break;
-    }
-  } catch (err) {
-    _d = true;
-    _e = err;
-  } finally {
-    try {
-      if (!_n && _i["return"] != null) _i["return"]();
-    } finally {
-      if (_d) throw _e;
-    }
-  }
-
-  return _arr;
-}
-
-function _unsupportedIterableToArray(o, minLen) {
-  if (!o) return;
-  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
-  var n = Object.prototype.toString.call(o).slice(8, -1);
-  if (n === "Object" && o.constructor) n = o.constructor.name;
-  if (n === "Map" || n === "Set") return Array.from(n);
-  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
-}
-
-function _arrayLikeToArray(arr, len) {
-  if (len == null || len > arr.length) len = arr.length;
-
-  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
-
-  return arr2;
-}
-
-function _nonIterableRest() {
-  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
-}
-
-function _createForOfIteratorHelper(o) {
-  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
-    if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {
-      var i = 0;
-
-      var F = function () {};
-
-      return {
-        s: F,
-        n: function () {
-          if (i >= o.length) return {
-            done: true
-          };
-          return {
-            done: false,
-            value: o[i++]
-          };
-        },
-        e: function (e) {
-          throw e;
-        },
-        f: F
-      };
-    }
-
-    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
-  }
-
-  var it,
-      normalCompletion = true,
-      didErr = false,
-      err;
-  return {
-    s: function () {
-      it = o[Symbol.iterator]();
-    },
-    n: function () {
-      var step = it.next();
-      normalCompletion = step.done;
-      return step;
-    },
-    e: function (e) {
-      didErr = true;
-      err = e;
-    },
-    f: function () {
-      try {
-        if (!normalCompletion && it.return != null) it.return();
-      } finally {
-        if (didErr) throw err;
-      }
-    }
-  };
-}
+var glob = _interopDefault(require('glob'));
 
 var peerDependencies = {
-	rollup: "^2.3.4"
-};
-
-/* eslint-disable no-undefined */
-const operators = {
-  '==': x => equals(x.left, x.right, false),
-  '!=': x => not(operators['=='](x)),
-  '===': x => equals(x.left, x.right, true),
-  '!==': x => not(operators['==='](x)),
-  '!': x => isFalsy(x.argument),
-  '&&': x => isTruthy(x.left) && isTruthy(x.right),
-  '||': x => isTruthy(x.left) || isTruthy(x.right)
+	rollup: "^2.22.0"
 };
-function flatten(node) {
-  const parts = [];
-
-  while (node.type === 'MemberExpression') {
-    if (node.computed) return null;
-    parts.unshift(node.property.name); // eslint-disable-next-line no-param-reassign
-
-    node = node.object;
-  }
-
-  if (node.type !== 'Identifier') return null;
-  const _node = node,
-        name = _node.name;
-  parts.unshift(name);
-  return {
-    name,
-    keypath: parts.join('.')
-  };
-}
-
-function isTruthy(node) {
-  if (node.type === 'Literal') return !!node.value;
-  if (node.type === 'ParenthesizedExpression') return isTruthy(node.expression);
-  if (node.operator in operators) return operators[node.operator](node);
-  return undefined;
-}
-function isFalsy(node) {
-  return not(isTruthy(node));
-}
-
-function not(value) {
-  return value === undefined ? value : !value;
-}
-
-function equals(a, b, strict) {
-  if (a.type !== b.type) return undefined; // eslint-disable-next-line eqeqeq
-
-  if (a.type === 'Literal') return strict ? a.value === b.value : a.value == b.value;
-  return undefined;
-}
 
 const PROXY_SUFFIX = '?commonjs-proxy';
-const getProxyId = id => `\0${id}${PROXY_SUFFIX}`;
-const getIdFromProxyId = proxyId => proxyId.slice(1, -PROXY_SUFFIX.length);
+const getProxyId = (id) => `\0${id}${PROXY_SUFFIX}`;
+const getIdFromProxyId = (proxyId) => proxyId.slice(1, -PROXY_SUFFIX.length);
+
 const EXTERNAL_SUFFIX = '?commonjs-external';
-const getExternalProxyId = id => `\0${id}${EXTERNAL_SUFFIX}`;
-const getIdFromExternalProxyId = proxyId => proxyId.slice(1, -EXTERNAL_SUFFIX.length);
+const getExternalProxyId = (id) => `\0${id}${EXTERNAL_SUFFIX}`;
+const getIdFromExternalProxyId = (proxyId) => proxyId.slice(1, -EXTERNAL_SUFFIX.length);
+
 const VIRTUAL_PATH_BASE = '/$$rollup_base$$';
 const getVirtualPathForDynamicRequirePath = (path, commonDir) => {
   if (path.startsWith(commonDir)) return VIRTUAL_PATH_BASE + path.slice(commonDir.length);
   return path;
 };
+
 const DYNAMIC_REGISTER_PREFIX = '\0commonjs-dynamic-register:';
 const DYNAMIC_JSON_PREFIX = '\0commonjs-dynamic-json:';
 const DYNAMIC_PACKAGES_ID = '\0commonjs-dynamic-packages';
-const HELPERS_ID = '\0commonjsHelpers.js'; // `x['default']` is used instead of `x.default` for backward compatibility with ES3 browsers.
-// Minifiers like uglify will usually transpile it back if compatibility with ES3 is not enabled.
 
+const HELPERS_ID = '\0commonjsHelpers.js';
+
+// `x['default']` is used instead of `x.default` for backward compatibility with ES3 browsers.
+// Minifiers like uglify will usually transpile it back if compatibility with ES3 is not enabled.
+// This will no longer be necessary once Rollup switches to ES6 output, likely
+// in Rollup 3
+
+// The "hasOwnProperty" call in "getDefaultExportFromCjs" is technically not
+// needed, but for consumers that use Rollup's old interop pattern, it will fix
+// rollup/rollup-plugin-commonjs#224
+// We should remove it once Rollup core and this plugin are updated to not use
+// this pattern any more
 const HELPERS = `
 export var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};
 
+export function getDefaultExportFromCjs (x) {
+	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
+}
+
 export function createCommonjsModule(fn, basedir, module) {
 	return module = {
 	  path: basedir,
@@ -208,15 +63,21 @@ export function createCommonjsModule(fn, basedir, module) {
 	}, fn(module, module.exports), module.exports;
 }
 
-export function getCjsExportFromNamespace (n) {
-	return n && n['default'] || n;
+export function getDefaultExportFromNamespaceIfPresent (n) {
+	return n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;
+}
+
+export function getDefaultExportFromNamespaceIfNotNamed (n) {
+	return n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;
 }
 `;
+
 const HELPER_NON_DYNAMIC = `
 export function commonjsRequire () {
 	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
 }
 `;
+
 const HELPERS_DYNAMIC = `
 export function commonjsRegister (path, loader) {
 	DYNAMIC_REQUIRE_LOADERS[path] = loader;
@@ -356,27 +217,92 @@ export function commonjsRequire (path, originalModuleDir) {
 commonjsRequire.cache = DYNAMIC_REQUIRE_CACHE;
 `;
 
+function getHelpersModule(isDynamicRequireModulesEnabled) {
+  return `${HELPERS}${isDynamicRequireModulesEnabled ? HELPERS_DYNAMIC : HELPER_NON_DYNAMIC}`;
+}
+
+/* eslint-disable no-undefined */
+
+const operators = {
+  '==': (x) => equals(x.left, x.right, false),
+
+  '!=': (x) => not(operators['=='](x)),
+
+  '===': (x) => equals(x.left, x.right, true),
+
+  '!==': (x) => not(operators['==='](x)),
+
+  '!': (x) => isFalsy(x.argument),
+
+  '&&': (x) => isTruthy(x.left) && isTruthy(x.right),
+
+  '||': (x) => isTruthy(x.left) || isTruthy(x.right)
+};
+
+function flatten(node) {
+  const parts = [];
+
+  while (node.type === 'MemberExpression') {
+    if (node.computed) return null;
+
+    parts.unshift(node.property.name);
+    // eslint-disable-next-line no-param-reassign
+    node = node.object;
+  }
+
+  if (node.type !== 'Identifier') return null;
+
+  const { name } = node;
+  parts.unshift(name);
+
+  return { name, keypath: parts.join('.') };
+}
+
+function isTruthy(node) {
+  if (node.type === 'Literal') return !!node.value;
+  if (node.type === 'ParenthesizedExpression') return isTruthy(node.expression);
+  if (node.operator in operators) return operators[node.operator](node);
+  return undefined;
+}
+
+function isFalsy(node) {
+  return not(isTruthy(node));
+}
+
+function not(value) {
+  return value === undefined ? value : !value;
+}
+
+function equals(a, b, strict) {
+  if (a.type !== b.type) return undefined;
+  // eslint-disable-next-line eqeqeq
+  if (a.type === 'Literal') return strict ? a.value === b.value : a.value == b.value;
+  return undefined;
+}
+
 /* eslint-disable import/prefer-default-export */
+
 function getName(id) {
   const name = pluginutils.makeLegalIdentifier(path.basename(id, path.extname(id)));
-
   if (name !== 'index') {
     return name;
   }
-
   const segments = path.dirname(id).split(path.sep);
   return pluginutils.makeLegalIdentifier(segments[segments.length - 1]);
 }
 
-const reserved = 'process location abstract arguments boolean break byte case catch char class const continue debugger default delete do double else enum eval export extends false final finally float for from function goto if implements import in instanceof int interface let long native new null package private protected public return short static super switch synchronized this throw throws transient true try typeof var void volatile while with yield'.split(' ');
-const blacklist = {
-  __esModule: true
-};
-reserved.forEach(word => blacklist[word] = true);
+/* eslint-disable no-param-reassign, no-shadow, no-underscore-dangle, no-continue */
+
+const reserved = 'process location abstract arguments boolean break byte case catch char class const continue debugger default delete do double else enum eval export extends false final finally float for from function goto if implements import in instanceof int interface let long native new null package private protected public return short static super switch synchronized this throw throws transient true try typeof var void volatile while with yield'.split(
+  ' '
+);
+const blacklist = { __esModule: true };
+reserved.forEach((word) => (blacklist[word] = true));
+
 const exportsPattern = /^(?:module\.)?exports(?:\.([a-zA-Z_$][a-zA-Z_$0-9]*))?$/;
+
 const firstpassGlobal = /\b(?:require|module|exports|global)\b/;
 const firstpassNoGlobal = /\b(?:require|module|exports)\b/;
-const importExportDeclaration = /^(?:Import|Export(?:Named|Default))Declaration/;
 const functionType = /^(?:FunctionDeclaration|FunctionExpression|ArrowFunctionExpression)$/;
 
 function deconflict(scope, globals, identifier) {
@@ -387,16 +313,14 @@ function deconflict(scope, globals, identifier) {
     deconflicted = `${identifier}_${i}`;
     i += 1;
   }
-
   scope.declarations[deconflicted] = true;
+
   return deconflicted;
 }
 
 function tryParse(parse, code, id) {
   try {
-    return parse(code, {
-      allowReturnOutsideFunction: true
-    });
+    return parse(code, { allowReturnOutsideFunction: true });
   } catch (err) {
     err.message += ` in ${id}`;
     throw err;
@@ -406,157 +330,160 @@ function tryParse(parse, code, id) {
 function normalizePathSlashes(path) {
   return path.replace(/\\/g, '/');
 }
+
 function hasCjsKeywords(code, ignoreGlobal) {
   const firstpass = ignoreGlobal ? firstpassNoGlobal : firstpassGlobal;
   return firstpass.test(code);
 }
+
 function checkEsModule(parse, code, id) {
   const ast = tryParse(parse, code, id);
-  let isEsModule = false;
 
-  var _iterator = _createForOfIteratorHelper(ast.body),
-      _step;
-
-  try {
-    for (_iterator.s(); !(_step = _iterator.n()).done;) {
-      const node = _step.value;
-      if (node.type === 'ExportDefaultDeclaration') return {
-        isEsModule: true,
-        hasDefaultExport: true,
-        ast
-      };
-
-      if (node.type === 'ExportNamedDeclaration') {
-        isEsModule = true;
-
-        var _iterator2 = _createForOfIteratorHelper(node.specifiers),
-            _step2;
-
-        try {
-          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
-            const specifier = _step2.value;
-
-            if (specifier.exported.name === 'default') {
-              return {
-                isEsModule: true,
-                hasDefaultExport: true,
-                ast
-              };
-            }
+  let isEsModule = false;
+  let hasDefaultExport = false;
+  let hasNamedExports = false;
+  for (const node of ast.body) {
+    if (node.type === 'ExportDefaultDeclaration') {
+      isEsModule = true;
+      hasDefaultExport = true;
+    } else if (node.type === 'ExportNamedDeclaration') {
+      isEsModule = true;
+      if (node.declaration) {
+        hasNamedExports = true;
+      } else {
+        for (const specifier of node.specifiers) {
+          if (specifier.exported.name === 'default') {
+            hasDefaultExport = true;
+          } else {
+            hasNamedExports = true;
           }
-        } catch (err) {
-          _iterator2.e(err);
-        } finally {
-          _iterator2.f();
         }
-      } else if (importExportDeclaration.test(node.type)) isEsModule = true;
+      }
+    } else if (node.type === 'ExportAllDeclaration') {
+      isEsModule = true;
+      if (node.exported && node.exported.name === 'default') {
+        hasDefaultExport = true;
+      } else {
+        hasNamedExports = true;
+      }
+    } else if (node.type === 'ImportDeclaration') {
+      isEsModule = true;
     }
-  } catch (err) {
-    _iterator.e(err);
-  } finally {
-    _iterator.f();
   }
 
-  return {
-    isEsModule,
-    hasDefaultExport: false,
-    ast
-  };
+  return { isEsModule, hasDefaultExport, hasNamedExports, ast };
 }
 
 function getDefinePropertyCallName(node, targetName) {
   if (node.type !== 'CallExpression') return;
-  const _node$callee = node.callee,
-        object = _node$callee.object,
-        property = _node$callee.property;
+
+  const {
+    callee: { object, property }
+  } = node;
+
   if (!object || object.type !== 'Identifier' || object.name !== 'Object') return;
-  if (!property || property.type !== 'Identifier' || property.name !== 'defineProperty') return;
-  if (node.arguments.length !== 3) return;
 
-  const _node$arguments = _slicedToArray(node.arguments, 2),
-        target = _node$arguments[0],
-        val = _node$arguments[1];
+  if (!property || property.type !== 'Identifier' || property.name !== 'defineProperty') return;
 
-  if (target.type !== 'Identifier' || target.name !== targetName) return; // eslint-disable-next-line consistent-return
+  if (node.arguments.length !== 3) return;
 
+  const [target, val] = node.arguments;
+  if (target.type !== 'Identifier' || target.name !== targetName) return;
+  // eslint-disable-next-line consistent-return
   return val.value;
 }
 
-function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, ignoreGlobal, ignoreRequire, sourceMap, isDynamicRequireModulesEnabled, dynamicRequireModuleSet, commonDir, astCache) {
+function transformCommonjs(
+  parse,
+  code,
+  id,
+  isEsModule,
+  ignoreGlobal,
+  ignoreRequire,
+  sourceMap,
+  isDynamicRequireModulesEnabled,
+  dynamicRequireModuleSet,
+  commonDir,
+  astCache
+) {
   const ast = astCache || tryParse(parse, code, id);
+
   const magicString = new MagicString(code);
-  const required = {}; // Because objects have no guaranteed ordering, yet we need it,
-  // we need to keep track of the order in a array
 
+  const required = {};
+  // Because objects have no guaranteed ordering, yet we need it,
+  // we need to keep track of the order in a array
   const sources = [];
+
   let uid = 0;
+
   let scope = pluginutils.attachScopes(ast, 'scope');
-  const uses = {
-    module: false,
-    exports: false,
-    global: false,
-    require: false
-  };
+  const uses = { module: false, exports: false, global: false, require: false };
+
   let lexicalDepth = 0;
   let programDepth = 0;
-  const globals = new Set(); // TODO technically wrong since globals isn't populated yet, but ¯\_(ツ)_/¯
 
+  const globals = new Set();
+
+  // TODO technically wrong since globals isn't populated yet, but ¯\_(ツ)_/¯
   const HELPERS_NAME = deconflict(scope, globals, 'commonjsHelpers');
-  const namedExports = {}; // TODO handle transpiled modules
 
+  const namedExports = {};
+
+  // TODO handle transpiled modules
   let shouldWrap = /__esModule/.test(code);
   let usesCommonjsHelpers = false;
 
   function isRequireStatement(node) {
     if (!node) return false;
-    if (node.type !== 'CallExpression') return false; // Weird case of `require()` or `module.require()` without arguments
+    if (node.type !== 'CallExpression') return false;
 
+    // Weird case of `require()` or `module.require()` without arguments
     if (node.arguments.length === 0) return false;
+
     return isRequireIdentifier(node.callee);
   }
 
   function isRequireIdentifier(node) {
     if (!node) return false;
 
-    if (node.type === 'Identifier' && node.name === 'require'
-    /* `require` */
-    ) {
-        // `require` is hidden by a variable in local scope
-        if (scope.contains('require')) return false;
-        return true;
-      } else if (node.type === 'MemberExpression'
-    /* `[something].[something]` */
-    ) {
-        // `module.[something]`
-        if (node.object.type !== 'Identifier' || node.object.name !== 'module') return false; // `module` is hidden by a variable in local scope
+    if (node.type === 'Identifier' && node.name === 'require' /* `require` */) {
+      // `require` is hidden by a variable in local scope
+      if (scope.contains('require')) return false;
 
-        if (scope.contains('module')) return false; // `module.require(...)`
+      return true;
+    } else if (node.type === 'MemberExpression' /* `[something].[something]` */) {
+      // `module.[something]`
+      if (node.object.type !== 'Identifier' || node.object.name !== 'module') return false;
 
-        if (node.property.type !== 'Identifier' || node.property.name !== 'require') return false;
-        return true;
-      }
+      // `module` is hidden by a variable in local scope
+      if (scope.contains('module')) return false;
+
+      // `module.require(...)`
+      if (node.property.type !== 'Identifier' || node.property.name !== 'require') return false;
+
+      return true;
+    }
 
     return false;
   }
 
   function hasDynamicArguments(node) {
-    return node.arguments.length > 1 || node.arguments[0].type !== 'Literal' && (node.arguments[0].type !== 'TemplateLiteral' || node.arguments[0].expressions.length > 0);
+    return (
+      node.arguments.length > 1 ||
+      (node.arguments[0].type !== 'Literal' &&
+        (node.arguments[0].type !== 'TemplateLiteral' || node.arguments[0].expressions.length > 0))
+    );
   }
 
   function isStaticRequireStatement(node) {
     if (!isRequireStatement(node)) return false;
-    if (hasDynamicArguments(node)) return false;
-    return true;
+    return !hasDynamicArguments(node);
   }
 
   function isNodeRequireStatement(parent) {
     const reservedMethod = ['resolve', 'cache', 'main'];
-
-    if (parent && parent.property && reservedMethod.indexOf(parent.property.name) > -1) {
-      return true;
-    }
-
-    return false;
+    return !!(parent && parent.property && reservedMethod.indexOf(parent.property.name) > -1);
   }
 
   function isIgnoredRequireStatement(requiredNode) {
@@ -564,19 +491,20 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
   }
 
   function getRequireStringArg(node) {
-    return node.arguments[0].type === 'Literal' ? node.arguments[0].value : node.arguments[0].quasis[0].value.cooked;
+    return node.arguments[0].type === 'Literal'
+      ? node.arguments[0].value
+      : node.arguments[0].quasis[0].value.cooked;
   }
 
   function getRequired(node, name) {
     let sourceId = getRequireStringArg(node);
     const isDynamicRegister = sourceId.startsWith(DYNAMIC_REGISTER_PREFIX);
-
     if (isDynamicRegister) {
       sourceId = sourceId.substr(DYNAMIC_REGISTER_PREFIX.length);
     }
 
-    const existing = required[sourceId]; // eslint-disable-next-line no-undefined
-
+    const existing = required[sourceId];
+    // eslint-disable-next-line no-undefined
     if (existing === undefined) {
       const isDynamic = hasDynamicModuleForPath(sourceId);
 
@@ -595,12 +523,7 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
         sources.push([sourceId, !isDynamicRegister]);
       }
 
-      required[sourceId] = {
-        source: sourceId,
-        name,
-        importsDefault: false,
-        isDynamic
-      };
+      required[sourceId] = { source: sourceId, name, importsDefault: false, isDynamic };
     }
 
     return required[sourceId];
@@ -609,10 +532,9 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
   function hasDynamicModuleForPath(source) {
     if (!/[/\\]/.test(source)) {
       try {
-        const resolvedPath = normalizePathSlashes(resolve.sync(source, {
-          basedir: path.dirname(id)
-        }));
-
+        const resolvedPath = normalizePathSlashes(
+          resolve.sync(source, { basedir: path.dirname(id) })
+        );
         if (dynamicRequireModuleSet.has(resolvedPath)) {
           return true;
         }
@@ -624,10 +546,8 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
       return false;
     }
 
-    for (var _i = 0, _arr = ['', '.js', '.json']; _i < _arr.length; _i++) {
-      const attemptExt = _arr[_i];
+    for (const attemptExt of ['', '.js', '.json']) {
       const resolvedPath = normalizePathSlashes(path.resolve(path.dirname(id), source + attemptExt));
-
       if (dynamicRequireModuleSet.has(resolvedPath)) {
         return true;
       }
@@ -637,38 +557,41 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
   }
 
   function shouldUseSimulatedRequire(required) {
-    return hasDynamicModuleForPath(required.source) && ( // We only do `commonjsRequire` for json if it's the `commonjsRegister` call.
-    required.source.startsWith(DYNAMIC_REGISTER_PREFIX) || !required.source.endsWith('.json'));
-  } // do a first pass, see which names are assigned to. This is necessary to prevent
+    return (
+      hasDynamicModuleForPath(required.source) &&
+      // We only do `commonjsRequire` for json if it's the `commonjsRegister` call.
+      (required.source.startsWith(DYNAMIC_REGISTER_PREFIX) || !required.source.endsWith('.json'))
+    );
+  }
+
+  // do a first pass, see which names are assigned to. This is necessary to prevent
   // illegally replacing `var foo = require('foo')` with `import foo from 'foo'`,
   // where `foo` is later reassigned. (This happens in the wild. CommonJS, sigh)
-
-
   const assignedTo = new Set();
   estreeWalker.walk(ast, {
     enter(node) {
       if (node.type !== 'AssignmentExpression') return;
       if (node.left.type === 'MemberExpression') return;
-      pluginutils.extractAssignedNames(node.left).forEach(name => {
+
+      pluginutils.extractAssignedNames(node.left).forEach((name) => {
         assignedTo.add(name);
       });
     }
-
   });
+
   estreeWalker.walk(ast, {
     enter(node, parent) {
       if (sourceMap) {
         magicString.addSourcemapLocation(node.start);
         magicString.addSourcemapLocation(node.end);
-      } // skip dead branches
-
+      }
 
+      // skip dead branches
       if (parent && (parent.type === 'IfStatement' || parent.type === 'ConditionalExpression')) {
         if (node === parent.consequent && isFalsy(parent.test)) {
           this.skip();
           return;
         }
-
         if (node === parent.alternate && isTruthy(parent.test)) {
           this.skip();
           return;
@@ -682,45 +605,44 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
 
       programDepth += 1;
 
-      if (node.scope) {
-        scope = node.scope;
-      }
-
-      if (functionType.test(node.type)) lexicalDepth += 1; // if toplevel return, we need to wrap it
+      if (node.scope) ({ scope } = node);
+      if (functionType.test(node.type)) lexicalDepth += 1;
 
+      // if toplevel return, we need to wrap it
       if (node.type === 'ReturnStatement' && lexicalDepth === 0) {
         shouldWrap = true;
-      } // rewrite `this` as `commonjsHelpers.commonjsGlobal`
-
+      }
 
+      // rewrite `this` as `commonjsHelpers.commonjsGlobal`
       if (node.type === 'ThisExpression' && lexicalDepth === 0) {
         uses.global = true;
-
         if (!ignoreGlobal) {
           magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsGlobal`, {
             storeName: true
           });
           usesCommonjsHelpers = true;
         }
-
         return;
-      } // rewrite `typeof module`, `typeof module.exports` and `typeof exports` (https://github.com/rollup/rollup-plugin-commonjs/issues/151)
-
+      }
 
+      // rewrite `typeof module`, `typeof module.exports` and `typeof exports` (https://github.com/rollup/rollup-plugin-commonjs/issues/151)
       if (node.type === 'UnaryExpression' && node.operator === 'typeof') {
         const flattened = flatten(node.argument);
         if (!flattened) return;
+
         if (scope.contains(flattened.name)) return;
 
-        if (flattened.keypath === 'module.exports' || flattened.keypath === 'module' || flattened.keypath === 'exports') {
-          magicString.overwrite(node.start, node.end, `'object'`, {
-            storeName: false
-          });
+        if (
+          flattened.keypath === 'module.exports' ||
+          flattened.keypath === 'module' ||
+          flattened.keypath === 'exports'
+        ) {
+          magicString.overwrite(node.start, node.end, `'object'`, { storeName: false });
         }
-      } // rewrite `require` (if not already handled) `global` and `define`, and handle free references to
-      // `module` and `exports` as these mean we need to wrap the module in commonjsHelpers.createCommonjsModule
-
+      }
 
+      // rewrite `require` (if not already handled) `global` and `define`, and handle free references to
+      // `module` and `exports` as these mean we need to wrap the module in commonjsHelpers.createCommonjsModule
       if (node.type === 'Identifier') {
         if (isReference(node, parent) && !scope.contains(node.name)) {
           if (node.name in uses) {
@@ -734,9 +656,17 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
               }
 
               if (isDynamicRequireModulesEnabled && isRequireStatement(parent)) {
-                magicString.appendLeft(parent.end - 1, `,${JSON.stringify(path.dirname(id) === '.' ? null
-                /* default behavior */
-                : getVirtualPathForDynamicRequirePath(normalizePathSlashes(path.dirname(id)), commonDir))}`);
+                magicString.appendLeft(
+                  parent.end - 1,
+                  `,${JSON.stringify(
+                    path.dirname(id) === '.'
+                      ? null /* default behavior */
+                      : getVirtualPathForDynamicRequirePath(
+                          normalizePathSlashes(path.dirname(id)),
+                          commonDir
+                        )
+                  )}`
+                );
               }
 
               magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsRequire`, {
@@ -746,51 +676,54 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
             }
 
             uses[node.name] = true;
-
             if (node.name === 'global' && !ignoreGlobal) {
               magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsGlobal`, {
                 storeName: true
               });
               usesCommonjsHelpers = true;
-            } // if module or exports are used outside the context of an assignment
-            // expression, we need to wrap the module
-
+            }
 
+            // if module or exports are used outside the context of an assignment
+            // expression, we need to wrap the module
             if (node.name === 'module' || node.name === 'exports') {
               shouldWrap = true;
             }
           }
 
           if (node.name === 'define') {
-            magicString.overwrite(node.start, node.end, 'undefined', {
-              storeName: true
-            });
+            magicString.overwrite(node.start, node.end, 'undefined', { storeName: true });
           }
 
           globals.add(node.name);
         }
 
         return;
-      } // Is this an assignment to exports or module.exports?
-
+      }
 
+      // Is this an assignment to exports or module.exports?
       if (node.type === 'AssignmentExpression') {
         if (node.left.type !== 'MemberExpression') return;
+
         const flattened = flatten(node.left);
         if (!flattened) return;
+
         if (scope.contains(flattened.name)) return;
+
         const match = exportsPattern.exec(flattened.keypath);
         if (!match || flattened.keypath === 'exports') return;
-        uses[flattened.name] = true; // we're dealing with `module.exports = ...` or `[module.]exports.foo = ...` –
-        // if this isn't top-level, we'll need to wrap the module
 
+        uses[flattened.name] = true;
+
+        // we're dealing with `module.exports = ...` or `[module.]exports.foo = ...` –
+        // if this isn't top-level, we'll need to wrap the module
         if (programDepth > 3) shouldWrap = true;
+
         node.left._skip = true;
 
         if (flattened.keypath === 'module.exports' && node.right.type === 'ObjectExpression') {
-          node.right.properties.forEach(prop => {
+          node.right.properties.forEach((prop) => {
             if (prop.computed || !('key' in prop) || prop.key.type !== 'Identifier') return;
-            const name = prop.key.name;
+            const { name } = prop.key;
             if (name === pluginutils.makeLegalIdentifier(name)) namedExports[name] = true;
           });
           return;
@@ -801,13 +734,21 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
       }
 
       const name = getDefinePropertyCallName(node, 'exports');
-      if (name && name === pluginutils.makeLegalIdentifier(name)) namedExports[name] = true; // if this is `var x = require('x')`, we can do `import x from 'x'`
-
-      if (node.type === 'VariableDeclarator' && node.id.type === 'Identifier' && isStaticRequireStatement(node.init) && !isIgnoredRequireStatement(node.init)) {
+      if (name && name === pluginutils.makeLegalIdentifier(name)) namedExports[name] = true;
+
+      // if this is `var x = require('x')`, we can do `import x from 'x'`
+      if (
+        node.type === 'VariableDeclarator' &&
+        node.id.type === 'Identifier' &&
+        isStaticRequireStatement(node.init) &&
+        !isIgnoredRequireStatement(node.init)
+      ) {
         // for now, only do this for top-level requires. maybe fix this in future
-        if (scope.parent) return; // edge case — CJS allows you to assign to imports. ES doesn't
+        if (scope.parent) return;
 
+        // edge case — CJS allows you to assign to imports. ES doesn't
         if (assignedTo.has(node.id.name)) return;
+
         const required = getRequired(node.init, node.id.name);
         required.importsDefault = true;
 
@@ -829,9 +770,17 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
         required.importsDefault = true;
 
         if (shouldUseSimulatedRequire(required)) {
-          magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsRequire(${JSON.stringify(getVirtualPathForDynamicRequirePath(normalizePathSlashes(required.source), commonDir))}, ${JSON.stringify(path.dirname(id) === '.' ? null
-          /* default behavior */
-          : getVirtualPathForDynamicRequirePath(normalizePathSlashes(path.dirname(id)), commonDir))})`);
+          magicString.overwrite(
+            node.start,
+            node.end,
+            `${HELPERS_NAME}.commonjsRequire(${JSON.stringify(
+              getVirtualPathForDynamicRequirePath(normalizePathSlashes(required.source), commonDir)
+            )}, ${JSON.stringify(
+              path.dirname(id) === '.'
+                ? null /* default behavior */
+                : getVirtualPathForDynamicRequirePath(normalizePathSlashes(path.dirname(id)), commonDir)
+            )})`
+          );
           usesCommonjsHelpers = true;
         } else {
           magicString.overwrite(node.start, node.end, required.name);
@@ -870,36 +819,58 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
         }
       }
     }
-
   });
 
-  if (!sources.length && !uses.module && !uses.exports && !uses.require && (ignoreGlobal || !uses.global)) {
+  if (
+    !sources.length &&
+    !uses.module &&
+    !uses.exports &&
+    !uses.require &&
+    (ignoreGlobal || !uses.global)
+  ) {
     // not a CommonJS module
     return null;
-  } // If `isEsModule` is on, it means it has ES6 import/export statements,
-  //   which just can't be wrapped in a function.
-
+  }
 
+  // If `isEsModule` is on, it means it has ES6 import/export statements,
+  //   which just can't be wrapped in a function.
   if (isEsModule) shouldWrap = false;
+
   usesCommonjsHelpers = usesCommonjsHelpers || shouldWrap;
-  const importBlock = `${(usesCommonjsHelpers ? [`import * as ${HELPERS_NAME} from '${HELPERS_ID}';`] : []).concat(sources.map(([source]) => // import the actual module before the proxy, so that we know
-  // what kind of proxy to build
-  `import '${source}';`), sources.filter(([, importProxy]) => importProxy).map(([source]) => {
-    const _required$source = required[source],
-          name = _required$source.name,
-          importsDefault = _required$source.importsDefault;
-    return `import ${importsDefault ? `${name} from ` : ``}'${getProxyId(source)}';`;
-  })).join('\n')}\n\n`;
+
+  const importBlock = `${(usesCommonjsHelpers
+    ? [`import * as ${HELPERS_NAME} from '${HELPERS_ID}';`]
+    : []
+  )
+    .concat(
+      sources.map(
+        ([source]) =>
+          // import the actual module before the proxy, so that we know
+          // what kind of proxy to build
+          `import '${source}';`
+      ),
+      sources
+        .filter(([, importProxy]) => importProxy)
+        .map(([source]) => {
+          const { name, importsDefault } = required[source];
+          return `import ${importsDefault ? `${name} from ` : ``}'${
+            source.startsWith('\0') ? source : getProxyId(source)
+          }';`;
+        })
+    )
+    .join('\n')}\n\n`;
+
   const namedExportDeclarations = [];
   let wrapperStart = '';
   let wrapperEnd = '';
-  const moduleName = deconflict(scope, globals, getName(id));
 
-  if ((!isEntry || hasImporters) && !isEsModule) {
+  const moduleName = deconflict(scope, globals, getName(id));
+  if (!isEsModule) {
     const exportModuleExports = {
       str: `export { ${moduleName} as __moduleExports };`,
       name: '__moduleExports'
     };
+
     namedExportDeclarations.push(exportModuleExports);
   }
 
@@ -908,149 +879,176 @@ function transformCommonjs(parse, code, id, isEntry, hasImporters, isEsModule, i
 
   if (shouldWrap) {
     const args = `module${uses.exports ? ', exports' : ''}`;
+
     wrapperStart = `var ${moduleName} = ${HELPERS_NAME}.createCommonjsModule(function (${args}) {\n`;
-    wrapperEnd = `\n}`;
 
+    wrapperEnd = `\n}`;
     if (isDynamicRequireModulesEnabled) {
-      wrapperEnd += `, ${JSON.stringify(getVirtualPathForDynamicRequirePath(normalizePathSlashes(path.dirname(id)), commonDir))}`;
+      wrapperEnd += `, ${JSON.stringify(
+        getVirtualPathForDynamicRequirePath(normalizePathSlashes(path.dirname(id)), commonDir)
+      )}`;
     }
 
     wrapperEnd += `);`;
   } else {
     const names = [];
 
-    var _iterator3 = _createForOfIteratorHelper(ast.body),
-        _step3;
+    for (const node of ast.body) {
+      if (node.type === 'ExpressionStatement' && node.expression.type === 'AssignmentExpression') {
+        const { left } = node.expression;
+        const flattened = flatten(left);
 
-    try {
-      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
-        const node = _step3.value;
+        if (!flattened) {
+          continue;
+        }
 
-        if (node.type === 'ExpressionStatement' && node.expression.type === 'AssignmentExpression') {
-          const left = node.expression.left;
-          const flattened = flatten(left);
+        const match = exportsPattern.exec(flattened.keypath);
+        if (!match) {
+          continue;
+        }
 
-          if (!flattened) {
-            continue;
-          }
+        if (flattened.keypath === 'module.exports') {
+          hasDefaultExport = true;
+          magicString.overwrite(left.start, left.end, `var ${moduleName}`);
+        } else {
+          const [, name] = match;
+          const deconflicted = deconflict(scope, globals, name);
 
-          const match = exportsPattern.exec(flattened.keypath);
+          names.push({ name, deconflicted });
 
-          if (!match) {
-            continue;
-          }
+          magicString.overwrite(node.start, left.end, `var ${deconflicted}`);
 
-          if (flattened.keypath === 'module.exports') {
-            hasDefaultExport = true;
-            magicString.overwrite(left.start, left.end, `var ${moduleName}`);
-          } else {
-            const _match = _slicedToArray(match, 2),
-                  name = _match[1];
+          const declaration =
+            name === deconflicted
+              ? `export { ${name} };`
+              : `export { ${deconflicted} as ${name} };`;
 
-            const deconflicted = deconflict(scope, globals, name);
-            names.push({
-              name,
-              deconflicted
+          if (name !== 'default') {
+            namedExportDeclarations.push({
+              str: declaration,
+              name
             });
-            magicString.overwrite(node.start, left.end, `var ${deconflicted}`);
-            const declaration = name === deconflicted ? `export { ${name} };` : `export { ${deconflicted} as ${name} };`;
-
-            if (name !== 'default') {
-              namedExportDeclarations.push({
-                str: declaration,
-                name
-              });
-            }
-
-            defaultExportPropertyAssignments.push(`${moduleName}.${name} = ${deconflicted};`);
           }
+
+          defaultExportPropertyAssignments.push(`${moduleName}.${name} = ${deconflicted};`);
         }
       }
-    } catch (err) {
-      _iterator3.e(err);
-    } finally {
-      _iterator3.f();
     }
 
-    if (!hasDefaultExport && (names.length || (!isEntry || hasImporters) && !isEsModule)) {
-      wrapperEnd = `\n\nvar ${moduleName} = {\n${names.map(({
-        name,
-        deconflicted
-      }) => `\t${name}: ${deconflicted}`).join(',\n')}\n};`;
+    if (!(isEsModule || hasDefaultExport)) {
+      wrapperEnd = `\n\nvar ${moduleName} = {\n${names
+        .map(({ name, deconflicted }) => `\t${name}: ${deconflicted}`)
+        .join(',\n')}\n};`;
     }
   }
 
-  const defaultExport = `export default ${moduleName};`;
-  const named = namedExportDeclarations.filter(x => x.name !== 'default' || !hasDefaultExport).map(x => x.str);
-  const exportBlock = `\n\n${(isEsModule ? [] : [defaultExport]).concat(named).concat(hasDefaultExport ? defaultExportPropertyAssignments : []).join('\n')}`;
-  magicString.trim().prepend(importBlock + wrapperStart).trim().append(wrapperEnd);
-  const injectExportBlock = hasDefaultExport || named.length > 0 || shouldWrap || !isEntry || hasImporters;
+  magicString
+    .trim()
+    .prepend(importBlock + wrapperStart)
+    .trim()
+    .append(wrapperEnd);
 
-  if (injectExportBlock) {
-    magicString.append(exportBlock);
-  }
+  const defaultExport =
+    code.indexOf('__esModule') >= 0
+      ? `export default /*@__PURE__*/${HELPERS_NAME}.getDefaultExportFromCjs(${moduleName});`
+      : `export default ${moduleName};`;
+
+  const named = namedExportDeclarations
+    .filter((x) => x.name !== 'default' || !hasDefaultExport)
+    .map((x) => x.str);
+
+  magicString.append(
+    `\n\n${(isEsModule ? [] : [defaultExport])
+      .concat(named)
+      .concat(hasDefaultExport ? defaultExportPropertyAssignments : [])
+      .join('\n')}`
+  );
 
   code = magicString.toString();
   const map = sourceMap ? magicString.generateMap() : null;
-  return {
-    code,
-    map,
-    syntheticNamedExports: injectExportBlock
-  };
+
+  return { code, map, syntheticNamedExports: isEsModule ? false : '__moduleExports' };
 }
 
-function getDynamicRequirePaths(patterns) {
-  const dynamicRequireModuleSet = new Set();
+function getDynamicPackagesModule(dynamicRequireModuleDirPaths, commonDir) {
+  let code = `const commonjsRegister = require('${HELPERS_ID}?commonjsRegister');`;
+  for (const dir of dynamicRequireModuleDirPaths) {
+    let entryPoint = 'index.js';
+
+    try {
+      if (fs.existsSync(path.join(dir, 'package.json'))) {
+        entryPoint =
+          JSON.parse(fs.readFileSync(path.join(dir, 'package.json'), { encoding: 'utf8' })).main ||
+          entryPoint;
+      }
+    } catch (ignored) {
+      // ignored
+    }
 
-  var _iterator = _createForOfIteratorHelper(!patterns || Array.isArray(patterns) ? patterns || [] : [patterns]),
-      _step;
+    code += `\ncommonjsRegister(${JSON.stringify(
+      getVirtualPathForDynamicRequirePath(dir, commonDir)
+    )}, function (module, exports) {
+  module.exports = require(${JSON.stringify(normalizePathSlashes(path.join(dir, entryPoint)))});
+});`;
+  }
+  return code;
+}
 
+function getDynamicPackagesEntryIntro(
+  id,
+  dynamicRequireModuleDirPaths,
+  dynamicRequireModuleSet
+) {
   try {
-    for (_iterator.s(); !(_step = _iterator.n()).done;) {
-      const pattern = _step.value;
-      const isNegated = pattern.startsWith('!');
-      const modifySet = Set.prototype[isNegated ? 'delete' : 'add'].bind(dynamicRequireModuleSet);
+    const code = fs.readFileSync(id, { encoding: 'utf8' });
+    let dynamicImports = Array.from(
+      dynamicRequireModuleSet,
+      (dynamicId) => `require(${JSON.stringify(DYNAMIC_REGISTER_PREFIX + dynamicId)});`
+    ).join('\n');
+
+    if (dynamicRequireModuleDirPaths.length) {
+      dynamicImports += `require(${JSON.stringify(
+        DYNAMIC_REGISTER_PREFIX + DYNAMIC_PACKAGES_ID
+      )});`;
+    }
 
-      var _iterator2 = _createForOfIteratorHelper(glob.sync(isNegated ? pattern.substr(1) : pattern)),
-          _step2;
+    return `${dynamicImports}\n${code}`;
+  } catch (ex) {
+    this.warn(`Failed to read file ${id}, dynamic modules might not work correctly`);
+    return null;
+  }
+}
 
-      try {
-        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
-          const path$1 = _step2.value;
-          modifySet(normalizePathSlashes(path.resolve(path$1)));
-        }
-      } catch (err) {
-        _iterator2.e(err);
-      } finally {
-        _iterator2.f();
-      }
+function getDynamicRequirePaths(patterns) {
+  const dynamicRequireModuleSet = new Set();
+  for (const pattern of !patterns || Array.isArray(patterns) ? patterns || [] : [patterns]) {
+    const isNegated = pattern.startsWith('!');
+    const modifySet = Set.prototype[isNegated ? 'delete' : 'add'].bind(dynamicRequireModuleSet);
+    for (const path$1 of glob.sync(isNegated ? pattern.substr(1) : pattern)) {
+      modifySet(normalizePathSlashes(path.resolve(path$1)));
     }
-  } catch (err) {
-    _iterator.e(err);
-  } finally {
-    _iterator.f();
   }
-
-  const dynamicRequireModuleDirPaths = Array.from(dynamicRequireModuleSet.values()).filter(path => {
-    try {
-      if (fs.statSync(path).isDirectory()) return true;
-    } catch (ignored) {// Nothing to do here
+  const dynamicRequireModuleDirPaths = Array.from(dynamicRequireModuleSet.values()).filter(
+    (path) => {
+      try {
+        if (fs.statSync(path).isDirectory()) return true;
+      } catch (ignored) {
+        // Nothing to do here
+      }
+      return false;
     }
-
-    return false;
-  });
-  return {
-    dynamicRequireModuleSet,
-    dynamicRequireModuleDirPaths
-  };
+  );
+  return { dynamicRequireModuleSet, dynamicRequireModuleDirPaths };
 }
 
 /* eslint-disable no-undefined */
 const isCjsPromises = new Map();
+
 function getIsCjsPromise(id) {
   let isCjsPromise = isCjsPromises.get(id);
   if (isCjsPromise) return isCjsPromise.promise;
-  const promise = new Promise(resolve => {
+
+  const promise = new Promise((resolve) => {
     isCjsPromise = {
       resolve,
       promise: undefined
@@ -1058,22 +1056,79 @@ function getIsCjsPromise(id) {
     isCjsPromises.set(id, isCjsPromise);
   });
   isCjsPromise.promise = promise;
+
   return promise;
 }
+
 function setIsCjsPromise(id, resolution) {
   const isCjsPromise = isCjsPromises.get(id);
-
   if (isCjsPromise) {
     if (isCjsPromise.resolve) {
       isCjsPromise.resolve(resolution);
       isCjsPromise.resolve = undefined;
     }
   } else {
-    isCjsPromises.set(id, {
-      promise: Promise.resolve(resolution),
-      resolve: undefined
-    });
+    isCjsPromises.set(id, { promise: Promise.resolve(resolution), resolve: undefined });
+  }
+}
+
+// e.g. id === "commonjsHelpers?commonjsRegister"
+function getSpecificHelperProxy(id) {
+  return `export {${id.split('?')[1]} as default} from '${HELPERS_ID}';`;
+}
+
+function getUnknownRequireProxy(id, requireReturnsDefault) {
+  if (requireReturnsDefault === true || id.endsWith('.json')) {
+    return `export {default} from ${JSON.stringify(id)};`;
+  }
+  const name = getName(id);
+  const exported =
+    requireReturnsDefault === 'auto'
+      ? `import {getDefaultExportFromNamespaceIfNotNamed} from "${HELPERS_ID}"; export default /*@__PURE__*/getDefaultExportFromNamespaceIfNotNamed(${name})`
+      : requireReturnsDefault === 'preferred'
+      ? `import {getDefaultExportFromNamespaceIfPresent} from "${HELPERS_ID}"; export default /*@__PURE__*/getDefaultExportFromNamespaceIfPresent(${name})`
+      : `export default ${name}`;
+  return `import * as ${name} from ${JSON.stringify(id)}; ${exported}`;
+}
+
+function getDynamicJsonProxy(id, commonDir) {
+  const normalizedPath = normalizePathSlashes(id.slice(DYNAMIC_JSON_PREFIX.length));
+  return `const commonjsRegister = require('${HELPERS_ID}?commonjsRegister');\ncommonjsRegister(${JSON.stringify(
+    getVirtualPathForDynamicRequirePath(normalizedPath, commonDir)
+  )}, function (module, exports) {
+  module.exports = require(${JSON.stringify(normalizedPath)});
+});`;
+}
+
+function getDynamicRequireProxy(normalizedPath, commonDir) {
+  return `const commonjsRegister = require('${HELPERS_ID}?commonjsRegister');\ncommonjsRegister(${JSON.stringify(
+    getVirtualPathForDynamicRequirePath(normalizedPath, commonDir)
+  )}, function (module, exports) {
+  ${fs.readFileSync(normalizedPath, { encoding: 'utf8' })}
+});`;
+}
+
+async function getStaticRequireProxy(
+  id,
+  requireReturnsDefault,
+  esModulesWithDefaultExport,
+  esModulesWithNamedExports
+) {
+  const name = getName(id);
+  const isCjs = await getIsCjsPromise(id);
+  if (isCjs) {
+    return `import { __moduleExports } from ${JSON.stringify(id)}; export default __moduleExports;`;
+  } else if (isCjs === null) {
+    return getUnknownRequireProxy(id, requireReturnsDefault);
+  } else if (
+    requireReturnsDefault !== true &&
+    (!requireReturnsDefault ||
+      !esModulesWithDefaultExport.has(id) ||
+      (esModulesWithNamedExports.has(id) && requireReturnsDefault === 'auto'))
+  ) {
+    return `import * as ${name} from ${JSON.stringify(id)}; export default ${name};`;
   }
+  return `export {default} from ${JSON.stringify(id)};`;
 }
 
 /* eslint-disable no-param-reassign, no-undefined */
@@ -1083,22 +1138,24 @@ function getCandidatesForExtension(resolved, extension) {
 }
 
 function getCandidates(resolved, extensions) {
-  return extensions.reduce((paths, extension) => paths.concat(getCandidatesForExtension(resolved, extension)), [resolved]);
+  return extensions.reduce(
+    (paths, extension) => paths.concat(getCandidatesForExtension(resolved, extension)),
+    [resolved]
+  );
 }
 
 function getResolveId(extensions) {
   function resolveExtensions(importee, importer) {
     // not our problem
     if (importee[0] !== '.' || !importer) return undefined;
+
     const resolved = path.resolve(path.dirname(importer), importee);
     const candidates = getCandidates(resolved, extensions);
 
     for (let i = 0; i < candidates.length; i += 1) {
       try {
         const stats = fs.statSync(candidates[i]);
-        if (stats.isFile()) return {
-          id: candidates[i]
-        };
+        if (stats.isFile()) return { id: candidates[i] };
       } catch (err) {
         /* noop */
       }
@@ -1109,45 +1166,38 @@ function getResolveId(extensions) {
 
   function resolveId(importee, importer) {
     const isProxyModule = importee.endsWith(PROXY_SUFFIX);
-
     if (isProxyModule) {
       importee = getIdFromProxyId(importee);
-    } else if (importee.startsWith('\0')) {
-      if (importee === HELPERS_ID || importee === DYNAMIC_PACKAGES_ID || importee.startsWith(DYNAMIC_JSON_PREFIX)) {
+    }
+    if (importee.startsWith('\0')) {
+      if (
+        importee.startsWith(HELPERS_ID) ||
+        importee === DYNAMIC_PACKAGES_ID ||
+        importee.startsWith(DYNAMIC_JSON_PREFIX)
+      ) {
         return importee;
       }
-
-      return null;
-    }
-
-    if (importee.startsWith(DYNAMIC_JSON_PREFIX)) {
-      return importee;
+      if (!isProxyModule) {
+        return null;
+      }
     }
 
     if (importer && importer.endsWith(PROXY_SUFFIX)) {
       importer = getIdFromProxyId(importer);
     }
 
-    return this.resolve(importee, importer, {
-      skipSelf: true
-    }).then(resolved => {
+    return this.resolve(importee, importer, { skipSelf: true }).then((resolved) => {
       if (!resolved) {
         resolved = resolveExtensions(importee, importer);
       }
-
       if (isProxyModule) {
         if (!resolved) {
-          return {
-            id: getExternalProxyId(importee),
-            external: false
-          };
+          return { id: getExternalProxyId(importee), external: false };
         }
-
         resolved.id = (resolved.external ? getExternalProxyId : getProxyId)(resolved.id);
         resolved.external = false;
         return resolved;
       }
-
       return resolved;
     });
   }
@@ -1158,51 +1208,81 @@ function getResolveId(extensions) {
 function commonjs(options = {}) {
   const extensions = options.extensions || ['.js'];
   const filter = pluginutils.createFilter(options.include, options.exclude);
-  const ignoreGlobal = options.ignoreGlobal;
-
-  const _getDynamicRequirePat = getDynamicRequirePaths(options.dynamicRequireTargets),
-        dynamicRequireModuleSet = _getDynamicRequirePat.dynamicRequireModuleSet,
-        dynamicRequireModuleDirPaths = _getDynamicRequirePat.dynamicRequireModuleDirPaths;
-
+  const {
+    ignoreGlobal,
+    requireReturnsDefault: requireReturnsDefaultOption,
+    esmExternals
+  } = options;
+  const getRequireReturnsDefault =
+    typeof requireReturnsDefaultOption === 'function'
+      ? requireReturnsDefaultOption
+      : () => requireReturnsDefaultOption;
+  let esmExternalIds;
+  const isEsmExternal =
+    typeof esmExternals === 'function'
+      ? esmExternals
+      : Array.isArray(esmExternals)
+      ? ((esmExternalIds = new Set(esmExternals)), (id) => esmExternalIds.has(id))
+      : () => esmExternals;
+
+  const { dynamicRequireModuleSet, dynamicRequireModuleDirPaths } = getDynamicRequirePaths(
+    options.dynamicRequireTargets
+  );
   const isDynamicRequireModulesEnabled = dynamicRequireModuleSet.size > 0;
-  const commonDir = isDynamicRequireModulesEnabled ? getCommonDir(null, Array.from(dynamicRequireModuleSet).concat(process.cwd())) : null;
-  const esModulesWithoutDefaultExport = new Set();
-  const esModulesWithDefaultExport = new Set();
-  const ignoreRequire = typeof options.ignore === 'function' ? options.ignore : Array.isArray(options.ignore) ? id => options.ignore.includes(id) : () => false;
-  const resolveId = getResolveId(extensions);
-  const sourceMap = options.sourceMap !== false;
+  const commonDir = isDynamicRequireModulesEnabled
+    ? getCommonDir(null, Array.from(dynamicRequireModuleSet).concat(process.cwd()))
+    : null;
 
-  function transformAndCheckExports(code, id) {
-    const _checkEsModule = checkEsModule(this.parse, code, id),
-          isEsModule = _checkEsModule.isEsModule,
-          hasDefaultExport = _checkEsModule.hasDefaultExport,
-          ast = _checkEsModule.ast;
+  const esModulesWithDefaultExport = new Set();
+  const esModulesWithNamedExports = new Set();
 
-    const isDynamicRequireModule = dynamicRequireModuleSet.has(normalizePathSlashes(id));
+  const ignoreRequire =
+    typeof options.ignore === 'function'
+      ? options.ignore
+      : Array.isArray(options.ignore)
+      ? (id) => options.ignore.includes(id)
+      : () => false;
 
-    if (isEsModule && (!isDynamicRequireModule || !options.transformMixedEsModules)) {
-      (hasDefaultExport ? esModulesWithDefaultExport : esModulesWithoutDefaultExport).add(id);
+  const resolveId = getResolveId(extensions);
 
-      if (!options.transformMixedEsModules) {
-        setIsCjsPromise(id, false);
-        return null;
-      }
-    } // it is not an ES module AND it does not have CJS-specific elements.
-    else if (!hasCjsKeywords(code, ignoreGlobal)) {
-        esModulesWithoutDefaultExport.add(id);
-        setIsCjsPromise(id, false);
-        return null;
-      }
+  const sourceMap = options.sourceMap !== false;
 
-    const moduleInfo = this.getModuleInfo(id);
-    const transformed = transformCommonjs(this.parse, code, id, moduleInfo.isEntry, moduleInfo.importers && moduleInfo.importers.length > 0, isEsModule, ignoreGlobal || isEsModule, ignoreRequire, sourceMap, isDynamicRequireModulesEnabled, dynamicRequireModuleSet, commonDir, ast);
-    setIsCjsPromise(id, isEsModule ? false : Boolean(transformed));
+  function transformAndCheckExports(code, id) {
+    const { isEsModule, hasDefaultExport, hasNamedExports, ast } = checkEsModule(
+      this.parse,
+      code,
+      id
+    );
+    if (hasDefaultExport) {
+      esModulesWithDefaultExport.add(id);
+    }
+    if (hasNamedExports) {
+      esModulesWithNamedExports.add(id);
+    }
 
-    if (!transformed) {
-      if (!isEsModule || isDynamicRequireModule) esModulesWithoutDefaultExport.add(id);
+    if (
+      !dynamicRequireModuleSet.has(normalizePathSlashes(id)) &&
+      (!hasCjsKeywords(code, ignoreGlobal) || (isEsModule && !options.transformMixedEsModules))
+    ) {
+      setIsCjsPromise(id, false);
       return null;
     }
 
+    const transformed = transformCommonjs(
+      this.parse,
+      code,
+      id,
+      isEsModule,
+      ignoreGlobal || isEsModule,
+      ignoreRequire,
+      sourceMap,
+      isDynamicRequireModulesEnabled,
+      dynamicRequireModuleSet,
+      commonDir,
+      ast
+    );
+
+    setIsCjsPromise(id, isEsModule ? false : Boolean(transformed));
     return transformed;
   }
 
@@ -1211,23 +1291,18 @@ function commonjs(options = {}) {
 
     buildStart() {
       if (options.namedExports != null) {
-        this.warn('The namedExports option from "@rollup/plugin-commonjs" is deprecated. Named exports are now handled automatically.');
+        this.warn(
+          'The namedExports option from "@rollup/plugin-commonjs" is deprecated. Named exports are now handled automatically.'
+        );
       }
 
-      const _this$meta$rollupVers = this.meta.rollupVersion.split('.').map(Number),
-            _this$meta$rollupVers2 = _slicedToArray(_this$meta$rollupVers, 2),
-            major = _this$meta$rollupVers2[0],
-            minor = _this$meta$rollupVers2[1];
-
+      const [major, minor] = this.meta.rollupVersion.split('.').map(Number);
       const minVersion = peerDependencies.rollup.slice(2);
-
-      const _minVersion$split$map = minVersion.split('.').map(Number),
-            _minVersion$split$map2 = _slicedToArray(_minVersion$split$map, 2),
-            minMajor = _minVersion$split$map2[0],
-            minMinor = _minVersion$split$map2[1];
-
-      if (major < minMajor || major === minMajor && minor < minMinor) {
-        this.error(`Insufficient Rollup version: "@rollup/plugin-commonjs" requires at least rollup@${minVersion} but found rollup@${this.meta.rollupVersion}.`);
+      const [minMajor, minMinor] = minVersion.split('.').map(Number);
+      if (major < minMajor || (major === minMajor && minor < minMinor)) {
+        this.error(
+          `Insufficient Rollup version: "@rollup/plugin-commonjs" requires at least rollup@${minVersion} but found rollup@${this.meta.rollupVersion}.`
+        );
       }
     },
 
@@ -1235,125 +1310,65 @@ function commonjs(options = {}) {
 
     load(id) {
       if (id === HELPERS_ID) {
-        let code = HELPERS; // Do not bloat everyone's code with the module manager code
-
-        if (isDynamicRequireModulesEnabled) code += HELPERS_DYNAMIC;else code += HELPER_NON_DYNAMIC;
-        return code;
-      } // generate proxy modules
+        return getHelpersModule(isDynamicRequireModulesEnabled);
+      }
 
+      if (id.startsWith(HELPERS_ID)) {
+        return getSpecificHelperProxy(id);
+      }
 
       if (id.endsWith(EXTERNAL_SUFFIX)) {
         const actualId = getIdFromExternalProxyId(id);
-        const name = getName(actualId);
-        if (actualId === HELPERS_ID || actualId === DYNAMIC_PACKAGES_ID) // These do not export default
-          return `import * as ${name} from ${JSON.stringify(actualId)}; export default ${name};`;
-        return `import ${name} from ${JSON.stringify(actualId)}; export default ${name};`;
+        return getUnknownRequireProxy(
+          actualId,
+          isEsmExternal(actualId) ? getRequireReturnsDefault(actualId) : true
+        );
       }
 
       if (id === DYNAMIC_PACKAGES_ID) {
-        let code = `const { commonjsRegister } = require('${HELPERS_ID}');`;
-
-        var _iterator = _createForOfIteratorHelper(dynamicRequireModuleDirPaths),
-            _step;
-
-        try {
-          for (_iterator.s(); !(_step = _iterator.n()).done;) {
-            const dir = _step.value;
-            let entryPoint = 'index.js';
-
-            try {
-              if (fs.existsSync(path.join(dir, 'package.json'))) {
-                entryPoint = JSON.parse(fs.readFileSync(path.join(dir, 'package.json'), {
-                  encoding: 'utf8'
-                })).main || entryPoint;
-              }
-            } catch (ignored) {// ignored
-            }
-
-            code += `\ncommonjsRegister(${JSON.stringify(getVirtualPathForDynamicRequirePath(dir, commonDir))}, function (module, exports) {
-  module.exports = require(${JSON.stringify(normalizePathSlashes(path.join(dir, entryPoint)))});
-});`;
-          }
-        } catch (err) {
-          _iterator.e(err);
-        } finally {
-          _iterator.f();
-        }
-
-        return code;
+        return getDynamicPackagesModule(dynamicRequireModuleDirPaths, commonDir);
       }
 
-      let actualId = id;
-      const isDynamicJson = actualId.startsWith(DYNAMIC_JSON_PREFIX);
-
-      if (isDynamicJson) {
-        actualId = actualId.slice(DYNAMIC_JSON_PREFIX.length);
-      }
-
-      const normalizedPath = normalizePathSlashes(actualId);
-
-      if (isDynamicJson) {
-        return `require('${HELPERS_ID}').commonjsRegister(${JSON.stringify(getVirtualPathForDynamicRequirePath(normalizedPath, commonDir))}, function (module, exports) {
-  module.exports = require(${JSON.stringify(normalizedPath)});
-});`;
+      if (id.startsWith(DYNAMIC_JSON_PREFIX)) {
+        return getDynamicJsonProxy(id, commonDir);
       }
 
+      const normalizedPath = normalizePathSlashes(id);
       if (dynamicRequireModuleSet.has(normalizedPath) && !normalizedPath.endsWith('.json')) {
-        // Try our best to still export the module fully.
-        // The commonjs polyfill should take care of circular references.
-        return `require('${HELPERS_ID}').commonjsRegister(${JSON.stringify(getVirtualPathForDynamicRequirePath(normalizedPath, commonDir))}, function (module, exports) {
-  ${fs.readFileSync(normalizedPath, {
-          encoding: 'utf8'
-        })}
-});`;
+        return getDynamicRequireProxy(normalizedPath, commonDir);
       }
 
-      if (actualId.endsWith(PROXY_SUFFIX)) {
-        actualId = getIdFromProxyId(actualId);
-        const name = getName(actualId);
-        return getIsCjsPromise(actualId).then(isCjs => {
-          if (dynamicRequireModuleSet.has(normalizePathSlashes(actualId)) && !actualId.endsWith('.json')) return `import {commonjsRequire} from '${HELPERS_ID}'; const ${name} = commonjsRequire(${JSON.stringify(getVirtualPathForDynamicRequirePath(normalizePathSlashes(actualId), commonDir))}); export default (${name} && ${name}['default']) || ${name}`;else if (isCjs) return `import { __moduleExports } from ${JSON.stringify(actualId)}; export default __moduleExports;`;else if (esModulesWithoutDefaultExport.has(actualId)) return `import * as ${name} from ${JSON.stringify(actualId)}; export default ${name};`;else if (esModulesWithDefaultExport.has(actualId)) {
-            return `export {default} from ${JSON.stringify(actualId)};`;
-          }
-          return `import * as ${name} from ${JSON.stringify(actualId)}; import {getCjsExportFromNamespace} from "${HELPERS_ID}"; export default getCjsExportFromNamespace(${name})`;
-        });
+      if (id.endsWith(PROXY_SUFFIX)) {
+        const actualId = getIdFromProxyId(id);
+        return getStaticRequireProxy(
+          actualId,
+          getRequireReturnsDefault(actualId),
+          esModulesWithDefaultExport,
+          esModulesWithNamedExports
+        );
       }
 
       if (isDynamicRequireModulesEnabled && this.getModuleInfo(id).isEntry) {
-        let code;
-
-        try {
-          code = fs.readFileSync(actualId, {
-            encoding: 'utf8'
-          });
-        } catch (ex) {
-          this.warn(`Failed to read file ${actualId}, dynamic modules might not work correctly`);
-          return null;
-        }
-
-        let dynamicImports = Array.from(dynamicRequireModuleSet).map(dynamicId => `require(${JSON.stringify(DYNAMIC_REGISTER_PREFIX + dynamicId)});`).join('\n');
-
-        if (dynamicRequireModuleDirPaths.length) {
-          dynamicImports += `require(${JSON.stringify(DYNAMIC_REGISTER_PREFIX + DYNAMIC_PACKAGES_ID)});`;
-        }
-
-        code = `${dynamicImports}\n${code}`;
-        return code;
+        return getDynamicPackagesEntryIntro(
+          id,
+          dynamicRequireModuleDirPaths,
+          dynamicRequireModuleSet
+        );
       }
 
       return null;
     },
 
     transform(code, id) {
-      if (id !== DYNAMIC_PACKAGES_ID && !id.startsWith(DYNAMIC_JSON_PREFIX)) {
-        if (!filter(id) || extensions.indexOf(path.extname(id)) === -1) {
+      const extName = path.extname(id);
+      if (extName !== '.cjs' && id !== DYNAMIC_PACKAGES_ID && !id.startsWith(DYNAMIC_JSON_PREFIX)) {
+        if (!filter(id) || !extensions.includes(extName)) {
           setIsCjsPromise(id, null);
           return null;
         }
       }
 
       let transformed;
-
       try {
         transformed = transformAndCheckExports.call(this, code, id);
       } catch (err) {
@@ -1364,7 +1379,6 @@ function commonjs(options = {}) {
 
       return transformed;
     }
-
   };
 }
 
diff --git a/dist/index.js.map b/dist/index.js.map
index f3f5a6a6cacc503fb1214ea511485b5de2842c4e..9f6c2f17ad162d691c9827ef1b6f2a09a0d4e558 100644
--- a/dist/index.js.map
+++ b/dist/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sources":["../src/ast-utils.js","../src/helpers.js","../src/utils.js","../src/transform.js","../src/dynamic-require-paths.js","../src/is-cjs.js","../src/resolve-id.js","../src/index.js"],"sourcesContent":["/* eslint-disable no-undefined */\nexport { default as isReference } from 'is-reference';\n\nconst operators = {\n  '==': (x) => equals(x.left, x.right, false),\n\n  '!=': (x) => not(operators['=='](x)),\n\n  '===': (x) => equals(x.left, x.right, true),\n\n  '!==': (x) => not(operators['==='](x)),\n\n  '!': (x) => isFalsy(x.argument),\n\n  '&&': (x) => isTruthy(x.left) && isTruthy(x.right),\n\n  '||': (x) => isTruthy(x.left) || isTruthy(x.right)\n};\n\nconst extractors = {\n  Identifier(names, node) {\n    names.push(node.name);\n  },\n\n  ObjectPattern(names, node) {\n    node.properties.forEach((prop) => {\n      getExtractor(prop.value.type)(names, prop.value);\n    });\n  },\n\n  ArrayPattern(names, node) {\n    node.elements.forEach((element) => {\n      if (!element) return;\n      getExtractor(element.type)(names, element);\n    });\n  },\n\n  RestElement(names, node) {\n    getExtractor(node.argument.type)(names, node.argument);\n  },\n\n  AssignmentPattern(names, node) {\n    getExtractor(node.left.type)(names, node.left);\n  }\n};\n\nexport function flatten(node) {\n  const parts = [];\n\n  while (node.type === 'MemberExpression') {\n    if (node.computed) return null;\n\n    parts.unshift(node.property.name);\n    // eslint-disable-next-line no-param-reassign\n    node = node.object;\n  }\n\n  if (node.type !== 'Identifier') return null;\n\n  const { name } = node;\n  parts.unshift(name);\n\n  return { name, keypath: parts.join('.') };\n}\n\nexport function extractNames(node) {\n  const names = [];\n  extractors[node.type](names, node);\n  return names;\n}\n\nfunction getExtractor(type) {\n  const extractor = extractors[type];\n  if (!extractor) throw new SyntaxError(`${type} pattern not supported.`);\n  return extractor;\n}\n\nexport function isTruthy(node) {\n  if (node.type === 'Literal') return !!node.value;\n  if (node.type === 'ParenthesizedExpression') return isTruthy(node.expression);\n  if (node.operator in operators) return operators[node.operator](node);\n  return undefined;\n}\n\nexport function isFalsy(node) {\n  return not(isTruthy(node));\n}\n\nfunction not(value) {\n  return value === undefined ? value : !value;\n}\n\nfunction equals(a, b, strict) {\n  if (a.type !== b.type) return undefined;\n  // eslint-disable-next-line eqeqeq\n  if (a.type === 'Literal') return strict ? a.value === b.value : a.value == b.value;\n  return undefined;\n}\n","export const PROXY_SUFFIX = '?commonjs-proxy';\nexport const getProxyId = (id) => `\\0${id}${PROXY_SUFFIX}`;\nexport const getIdFromProxyId = (proxyId) => proxyId.slice(1, -PROXY_SUFFIX.length);\n\nexport const EXTERNAL_SUFFIX = '?commonjs-external';\nexport const getExternalProxyId = (id) => `\\0${id}${EXTERNAL_SUFFIX}`;\nexport const getIdFromExternalProxyId = (proxyId) => proxyId.slice(1, -EXTERNAL_SUFFIX.length);\n\nexport const VIRTUAL_PATH_BASE = '/$$rollup_base$$';\nexport const getVirtualPathForDynamicRequirePath = (path, commonDir) => {\n  if (path.startsWith(commonDir)) return VIRTUAL_PATH_BASE + path.slice(commonDir.length);\n  return path;\n};\n\nexport const DYNAMIC_REGISTER_PREFIX = '\\0commonjs-dynamic-register:';\nexport const DYNAMIC_JSON_PREFIX = '\\0commonjs-dynamic-json:';\nexport const DYNAMIC_PACKAGES_ID = '\\0commonjs-dynamic-packages';\n\nexport const HELPERS_ID = '\\0commonjsHelpers.js';\n\n// `x['default']` is used instead of `x.default` for backward compatibility with ES3 browsers.\n// Minifiers like uglify will usually transpile it back if compatibility with ES3 is not enabled.\nexport const HELPERS = `\nexport var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nexport function createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t  path: basedir,\n\t  exports: {},\n\t  require: function (path, base) {\n      return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n    }\n\t}, fn(module, module.exports), module.exports;\n}\n\nexport function getCjsExportFromNamespace (n) {\n\treturn n && n['default'] || n;\n}\n`;\n\nexport const HELPER_NON_DYNAMIC = `\nexport function commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n`;\n\nexport const HELPERS_DYNAMIC = `\nexport function commonjsRegister (path, loader) {\n\tDYNAMIC_REQUIRE_LOADERS[path] = loader;\n}\n\nconst DYNAMIC_REQUIRE_LOADERS = Object.create(null);\nconst DYNAMIC_REQUIRE_CACHE = Object.create(null);\nconst DEFAULT_PARENT_MODULE = {\n\tid: '<' + 'rollup>', exports: {}, parent: undefined, filename: null, loaded: false, children: [], paths: []\n};\nconst CHECKED_EXTENSIONS = ['', '.js', '.json'];\n\nfunction normalize (path) {\n\tpath = path.replace(/\\\\\\\\/g, '/');\n\tconst parts = path.split('/');\n\tconst slashed = parts[0] === '';\n\tfor (let i = 1; i < parts.length; i++) {\n\t\tif (parts[i] === '.' || parts[i] === '') {\n\t\t\tparts.splice(i--, 1);\n\t\t}\n\t}\n\tfor (let i = 1; i < parts.length; i++) {\n\t\tif (parts[i] !== '..') continue;\n\t\tif (i > 0 && parts[i - 1] !== '..' && parts[i - 1] !== '.') {\n\t\t\tparts.splice(--i, 2);\n\t\t\ti--;\n\t\t}\n\t}\n\tpath = parts.join('/');\n\tif (slashed && path[0] !== '/')\n\t  path = '/' + path;\n\telse if (path.length === 0)\n\t  path = '.';\n\treturn path;\n}\n\nfunction join () {\n\tif (arguments.length === 0)\n\t  return '.';\n\tlet joined;\n\tfor (let i = 0; i < arguments.length; ++i) {\n\t  let arg = arguments[i];\n\t  if (arg.length > 0) {\n\t\tif (joined === undefined)\n\t\t  joined = arg;\n\t\telse\n\t\t  joined += '/' + arg;\n\t  }\n\t}\n\tif (joined === undefined)\n\t  return '.';\n\n\treturn joined;\n}\n\nfunction isPossibleNodeModulesPath (modulePath) {\n\tlet c0 = modulePath[0];\n\tif (c0 === '/' || c0 === '\\\\\\\\') return false;\n\tlet c1 = modulePath[1], c2 = modulePath[2];\n\tif ((c0 === '.' && (!c1 || c1 === '/' || c1 === '\\\\\\\\')) ||\n\t\t(c0 === '.' && c1 === '.' && (!c2 || c2 === '/' || c2 === '\\\\\\\\'))) return false;\n\tif (c1 === ':' && (c2 === '/' || c2 === '\\\\\\\\'))\n\t\treturn false;\n\treturn true;\n}\n\nfunction dirname (path) {\n  if (path.length === 0)\n    return '.';\n\n  let i = path.length - 1;\n  while (i > 0) {\n    const c = path.charCodeAt(i);\n    if ((c === 47 || c === 92) && i !== path.length - 1)\n      break;\n    i--;\n  }\n\n  if (i > 0)\n    return path.substr(0, i);\n\n  if (path.chartCodeAt(0) === 47 || path.chartCodeAt(0) === 92)\n    return path.charAt(0);\n\n  return '.';\n}\n\nexport function commonjsRequire (path, originalModuleDir) {\n\tconst shouldTryNodeModules = isPossibleNodeModulesPath(path);\n\tpath = normalize(path);\n\tlet relPath;\n\twhile (true) {\n\t\tif (!shouldTryNodeModules) {\n\t\t\trelPath = originalModuleDir ? normalize(originalModuleDir + '/' + path) : path;\n\t\t} else if (originalModuleDir) {\n\t\t\trelPath = normalize(originalModuleDir + '/node_modules/' + path);\n\t\t} else {\n\t\t\trelPath = normalize(join('node_modules', path));\n\t\t}\n\t\tfor (let extensionIndex = 0; extensionIndex < CHECKED_EXTENSIONS.length; extensionIndex++) {\n\t\t\tconst resolvedPath = relPath + CHECKED_EXTENSIONS[extensionIndex];\n\t\t\tlet cachedModule = DYNAMIC_REQUIRE_CACHE[resolvedPath];\n\t\t\tif (cachedModule) return cachedModule.exports;\n\t\t\tconst loader = DYNAMIC_REQUIRE_LOADERS[resolvedPath];\n\t\t\tif (loader) {\n\t\t\t\tDYNAMIC_REQUIRE_CACHE[resolvedPath] = cachedModule = {\n\t\t\t\t\tid: resolvedPath,\n\t\t\t\t\tfilename: resolvedPath,\n\t\t\t\t\tpath: dirname(resolvedPath),\n\t\t\t\t\texports: {},\n\t\t\t\t\tparent: DEFAULT_PARENT_MODULE,\n\t\t\t\t\tloaded: false,\n\t\t\t\t\tchildren: [],\n\t\t\t\t\tpaths: [],\n\t\t\t\t\trequire: function (path, base) {\n\t\t\t\t\t  return commonjsRequire(path, (base === undefined || base === null) ? cachedModule.path : base);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\ttry {\n\t\t\t\t\tloader.call(commonjsGlobal, cachedModule, cachedModule.exports);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdelete DYNAMIC_REQUIRE_CACHE[resolvedPath];\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\tcachedModule.loaded = true;\n\t\t\t\treturn cachedModule.exports;\n\t\t\t};\n\t\t}\n\t\tif (!shouldTryNodeModules) break;\n\t\tconst nextDir = normalize(originalModuleDir + '/..');\n\t\tif (nextDir === originalModuleDir) break;\n\t\toriginalModuleDir = nextDir;\n\t}\n\treturn require(path);\n}\n\ncommonjsRequire.cache = DYNAMIC_REQUIRE_CACHE;\n`;\n","/* eslint-disable import/prefer-default-export */\nimport { basename, dirname, extname, sep } from 'path';\n\nimport { makeLegalIdentifier } from '@rollup/pluginutils';\n\nexport function getName(id) {\n  const name = makeLegalIdentifier(basename(id, extname(id)));\n  if (name !== 'index') {\n    return name;\n  }\n  const segments = dirname(id).split(sep);\n  return makeLegalIdentifier(segments[segments.length - 1]);\n}\n","/* eslint-disable no-param-reassign, no-shadow, no-underscore-dangle, no-continue */\nimport { resolve, dirname } from 'path';\n\nimport { walk } from 'estree-walker';\nimport MagicString from 'magic-string';\nimport { attachScopes, extractAssignedNames, makeLegalIdentifier } from '@rollup/pluginutils';\n\nimport { sync as nodeResolveSync } from 'resolve';\n\nimport { flatten, isFalsy, isReference, isTruthy } from './ast-utils';\nimport {\n  getProxyId,\n  getVirtualPathForDynamicRequirePath,\n  HELPERS_ID,\n  DYNAMIC_REGISTER_PREFIX,\n  DYNAMIC_JSON_PREFIX\n} from './helpers';\nimport { getName } from './utils';\n// TODO can this be async?\n\nconst reserved = 'process location abstract arguments boolean break byte case catch char class const continue debugger default delete do double else enum eval export extends false final finally float for from function goto if implements import in instanceof int interface let long native new null package private protected public return short static super switch synchronized this throw throws transient true try typeof var void volatile while with yield'.split(\n  ' '\n);\nconst blacklist = { __esModule: true };\nreserved.forEach((word) => (blacklist[word] = true));\n\nconst exportsPattern = /^(?:module\\.)?exports(?:\\.([a-zA-Z_$][a-zA-Z_$0-9]*))?$/;\n\nconst firstpassGlobal = /\\b(?:require|module|exports|global)\\b/;\nconst firstpassNoGlobal = /\\b(?:require|module|exports)\\b/;\nconst importExportDeclaration = /^(?:Import|Export(?:Named|Default))Declaration/;\nconst functionType = /^(?:FunctionDeclaration|FunctionExpression|ArrowFunctionExpression)$/;\n\nfunction deconflict(scope, globals, identifier) {\n  let i = 1;\n  let deconflicted = makeLegalIdentifier(identifier);\n\n  while (scope.contains(deconflicted) || globals.has(deconflicted) || deconflicted in blacklist) {\n    deconflicted = `${identifier}_${i}`;\n    i += 1;\n  }\n  scope.declarations[deconflicted] = true;\n\n  return deconflicted;\n}\n\nfunction tryParse(parse, code, id) {\n  try {\n    return parse(code, { allowReturnOutsideFunction: true });\n  } catch (err) {\n    err.message += ` in ${id}`;\n    throw err;\n  }\n}\n\nexport function normalizePathSlashes(path) {\n  return path.replace(/\\\\/g, '/');\n}\n\nexport function hasCjsKeywords(code, ignoreGlobal) {\n  const firstpass = ignoreGlobal ? firstpassNoGlobal : firstpassGlobal;\n  return firstpass.test(code);\n}\n\nexport function checkEsModule(parse, code, id) {\n  const ast = tryParse(parse, code, id);\n\n  let isEsModule = false;\n  for (const node of ast.body) {\n    if (node.type === 'ExportDefaultDeclaration')\n      return { isEsModule: true, hasDefaultExport: true, ast };\n    if (node.type === 'ExportNamedDeclaration') {\n      isEsModule = true;\n      for (const specifier of node.specifiers) {\n        if (specifier.exported.name === 'default') {\n          return { isEsModule: true, hasDefaultExport: true, ast };\n        }\n      }\n    } else if (importExportDeclaration.test(node.type)) isEsModule = true;\n  }\n\n  return { isEsModule, hasDefaultExport: false, ast };\n}\n\nfunction getDefinePropertyCallName(node, targetName) {\n  if (node.type !== 'CallExpression') return;\n\n  const {\n    callee: { object, property }\n  } = node;\n\n  if (!object || object.type !== 'Identifier' || object.name !== 'Object') return;\n\n  if (!property || property.type !== 'Identifier' || property.name !== 'defineProperty') return;\n\n  if (node.arguments.length !== 3) return;\n\n  const [target, val] = node.arguments;\n  if (target.type !== 'Identifier' || target.name !== targetName) return;\n  // eslint-disable-next-line consistent-return\n  return val.value;\n}\n\nexport function transformCommonjs(\n  parse,\n  code,\n  id,\n  isEntry,\n  hasImporters,\n  isEsModule,\n  ignoreGlobal,\n  ignoreRequire,\n  sourceMap,\n  isDynamicRequireModulesEnabled,\n  dynamicRequireModuleSet,\n  commonDir,\n  astCache\n) {\n  const ast = astCache || tryParse(parse, code, id);\n\n  const magicString = new MagicString(code);\n\n  const required = {};\n  // Because objects have no guaranteed ordering, yet we need it,\n  // we need to keep track of the order in a array\n  const sources = [];\n\n  let uid = 0;\n\n  let scope = attachScopes(ast, 'scope');\n  const uses = { module: false, exports: false, global: false, require: false };\n\n  let lexicalDepth = 0;\n  let programDepth = 0;\n\n  const globals = new Set();\n\n  // TODO technically wrong since globals isn't populated yet, but ¯\\_(ツ)_/¯\n  const HELPERS_NAME = deconflict(scope, globals, 'commonjsHelpers');\n\n  const namedExports = {};\n\n  // TODO handle transpiled modules\n  let shouldWrap = /__esModule/.test(code);\n  let usesCommonjsHelpers = false;\n\n  function isRequireStatement(node) {\n    if (!node) return false;\n    if (node.type !== 'CallExpression') return false;\n\n    // Weird case of `require()` or `module.require()` without arguments\n    if (node.arguments.length === 0) return false;\n\n    return isRequireIdentifier(node.callee);\n  }\n\n  function isRequireIdentifier(node) {\n    if (!node) return false;\n\n    if (node.type === 'Identifier' && node.name === 'require' /* `require` */) {\n      // `require` is hidden by a variable in local scope\n      if (scope.contains('require')) return false;\n\n      return true;\n    } else if (node.type === 'MemberExpression' /* `[something].[something]` */) {\n      // `module.[something]`\n      if (node.object.type !== 'Identifier' || node.object.name !== 'module') return false;\n\n      // `module` is hidden by a variable in local scope\n      if (scope.contains('module')) return false;\n\n      // `module.require(...)`\n      if (node.property.type !== 'Identifier' || node.property.name !== 'require') return false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function hasDynamicArguments(node) {\n    return (\n      node.arguments.length > 1 ||\n      (node.arguments[0].type !== 'Literal' &&\n        (node.arguments[0].type !== 'TemplateLiteral' || node.arguments[0].expressions.length > 0))\n    );\n  }\n\n  function isStaticRequireStatement(node) {\n    if (!isRequireStatement(node)) return false;\n    if (hasDynamicArguments(node)) return false;\n    return true;\n  }\n\n  function isNodeRequireStatement(parent) {\n    const reservedMethod = ['resolve', 'cache', 'main'];\n    if (parent && parent.property && reservedMethod.indexOf(parent.property.name) > -1) {\n      return true;\n    }\n    return false;\n  }\n\n  function isIgnoredRequireStatement(requiredNode) {\n    return ignoreRequire(requiredNode.arguments[0].value);\n  }\n\n  function getRequireStringArg(node) {\n    return node.arguments[0].type === 'Literal'\n      ? node.arguments[0].value\n      : node.arguments[0].quasis[0].value.cooked;\n  }\n\n  function getRequired(node, name) {\n    let sourceId = getRequireStringArg(node);\n    const isDynamicRegister = sourceId.startsWith(DYNAMIC_REGISTER_PREFIX);\n    if (isDynamicRegister) {\n      sourceId = sourceId.substr(DYNAMIC_REGISTER_PREFIX.length);\n    }\n\n    const existing = required[sourceId];\n    // eslint-disable-next-line no-undefined\n    if (existing === undefined) {\n      const isDynamic = hasDynamicModuleForPath(sourceId);\n\n      if (!name) {\n        do {\n          name = `require$$${uid}`;\n          uid += 1;\n        } while (scope.contains(name));\n      }\n\n      if (isDynamicRegister && sourceId.endsWith('.json')) {\n        sourceId = DYNAMIC_JSON_PREFIX + sourceId;\n      }\n\n      if (isDynamicRegister || !isDynamic || sourceId.endsWith('.json')) {\n        sources.push([sourceId, !isDynamicRegister]);\n      }\n\n      required[sourceId] = { source: sourceId, name, importsDefault: false, isDynamic };\n    }\n\n    return required[sourceId];\n  }\n\n  function hasDynamicModuleForPath(source) {\n    if (!/[/\\\\]/.test(source)) {\n      try {\n        const resolvedPath = normalizePathSlashes(\n          nodeResolveSync(source, { basedir: dirname(id) })\n        );\n        if (dynamicRequireModuleSet.has(resolvedPath)) {\n          return true;\n        }\n      } catch (ex) {\n        // Probably a node.js internal module\n        return false;\n      }\n\n      return false;\n    }\n\n    for (const attemptExt of ['', '.js', '.json']) {\n      const resolvedPath = normalizePathSlashes(resolve(dirname(id), source + attemptExt));\n      if (dynamicRequireModuleSet.has(resolvedPath)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function shouldUseSimulatedRequire(required) {\n    return (\n      hasDynamicModuleForPath(required.source) &&\n      // We only do `commonjsRequire` for json if it's the `commonjsRegister` call.\n      (required.source.startsWith(DYNAMIC_REGISTER_PREFIX) || !required.source.endsWith('.json'))\n    );\n  }\n\n  // do a first pass, see which names are assigned to. This is necessary to prevent\n  // illegally replacing `var foo = require('foo')` with `import foo from 'foo'`,\n  // where `foo` is later reassigned. (This happens in the wild. CommonJS, sigh)\n  const assignedTo = new Set();\n  walk(ast, {\n    enter(node) {\n      if (node.type !== 'AssignmentExpression') return;\n      if (node.left.type === 'MemberExpression') return;\n\n      extractAssignedNames(node.left).forEach((name) => {\n        assignedTo.add(name);\n      });\n    }\n  });\n\n  walk(ast, {\n    enter(node, parent) {\n      if (sourceMap) {\n        magicString.addSourcemapLocation(node.start);\n        magicString.addSourcemapLocation(node.end);\n      }\n\n      // skip dead branches\n      if (parent && (parent.type === 'IfStatement' || parent.type === 'ConditionalExpression')) {\n        if (node === parent.consequent && isFalsy(parent.test)) {\n          this.skip();\n          return;\n        }\n        if (node === parent.alternate && isTruthy(parent.test)) {\n          this.skip();\n          return;\n        }\n      }\n\n      if (node._skip) {\n        this.skip();\n        return;\n      }\n\n      programDepth += 1;\n\n      if (node.scope) ({ scope } = node);\n      if (functionType.test(node.type)) lexicalDepth += 1;\n\n      // if toplevel return, we need to wrap it\n      if (node.type === 'ReturnStatement' && lexicalDepth === 0) {\n        shouldWrap = true;\n      }\n\n      // rewrite `this` as `commonjsHelpers.commonjsGlobal`\n      if (node.type === 'ThisExpression' && lexicalDepth === 0) {\n        uses.global = true;\n        if (!ignoreGlobal) {\n          magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsGlobal`, {\n            storeName: true\n          });\n          usesCommonjsHelpers = true;\n        }\n        return;\n      }\n\n      // rewrite `typeof module`, `typeof module.exports` and `typeof exports` (https://github.com/rollup/rollup-plugin-commonjs/issues/151)\n      if (node.type === 'UnaryExpression' && node.operator === 'typeof') {\n        const flattened = flatten(node.argument);\n        if (!flattened) return;\n\n        if (scope.contains(flattened.name)) return;\n\n        if (\n          flattened.keypath === 'module.exports' ||\n          flattened.keypath === 'module' ||\n          flattened.keypath === 'exports'\n        ) {\n          magicString.overwrite(node.start, node.end, `'object'`, { storeName: false });\n        }\n      }\n\n      // rewrite `require` (if not already handled) `global` and `define`, and handle free references to\n      // `module` and `exports` as these mean we need to wrap the module in commonjsHelpers.createCommonjsModule\n      if (node.type === 'Identifier') {\n        if (isReference(node, parent) && !scope.contains(node.name)) {\n          if (node.name in uses) {\n            if (isRequireIdentifier(node)) {\n              if (isNodeRequireStatement(parent)) {\n                return;\n              }\n\n              if (!isDynamicRequireModulesEnabled && isStaticRequireStatement(parent)) {\n                return;\n              }\n\n              if (isDynamicRequireModulesEnabled && isRequireStatement(parent)) {\n                magicString.appendLeft(\n                  parent.end - 1,\n                  `,${JSON.stringify(\n                    dirname(id) === '.'\n                      ? null /* default behavior */\n                      : getVirtualPathForDynamicRequirePath(\n                          normalizePathSlashes(dirname(id)),\n                          commonDir\n                        )\n                  )}`\n                );\n              }\n\n              magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsRequire`, {\n                storeName: true\n              });\n              usesCommonjsHelpers = true;\n            }\n\n            uses[node.name] = true;\n            if (node.name === 'global' && !ignoreGlobal) {\n              magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsGlobal`, {\n                storeName: true\n              });\n              usesCommonjsHelpers = true;\n            }\n\n            // if module or exports are used outside the context of an assignment\n            // expression, we need to wrap the module\n            if (node.name === 'module' || node.name === 'exports') {\n              shouldWrap = true;\n            }\n          }\n\n          if (node.name === 'define') {\n            magicString.overwrite(node.start, node.end, 'undefined', { storeName: true });\n          }\n\n          globals.add(node.name);\n        }\n\n        return;\n      }\n\n      // Is this an assignment to exports or module.exports?\n      if (node.type === 'AssignmentExpression') {\n        if (node.left.type !== 'MemberExpression') return;\n\n        const flattened = flatten(node.left);\n        if (!flattened) return;\n\n        if (scope.contains(flattened.name)) return;\n\n        const match = exportsPattern.exec(flattened.keypath);\n        if (!match || flattened.keypath === 'exports') return;\n\n        uses[flattened.name] = true;\n\n        // we're dealing with `module.exports = ...` or `[module.]exports.foo = ...` –\n        // if this isn't top-level, we'll need to wrap the module\n        if (programDepth > 3) shouldWrap = true;\n\n        node.left._skip = true;\n\n        if (flattened.keypath === 'module.exports' && node.right.type === 'ObjectExpression') {\n          node.right.properties.forEach((prop) => {\n            if (prop.computed || !('key' in prop) || prop.key.type !== 'Identifier') return;\n            const { name } = prop.key;\n            if (name === makeLegalIdentifier(name)) namedExports[name] = true;\n          });\n          return;\n        }\n\n        if (match[1]) namedExports[match[1]] = true;\n        return;\n      }\n\n      const name = getDefinePropertyCallName(node, 'exports');\n      if (name && name === makeLegalIdentifier(name)) namedExports[name] = true;\n\n      // if this is `var x = require('x')`, we can do `import x from 'x'`\n      if (\n        node.type === 'VariableDeclarator' &&\n        node.id.type === 'Identifier' &&\n        isStaticRequireStatement(node.init) &&\n        !isIgnoredRequireStatement(node.init)\n      ) {\n        // for now, only do this for top-level requires. maybe fix this in future\n        if (scope.parent) return;\n\n        // edge case — CJS allows you to assign to imports. ES doesn't\n        if (assignedTo.has(node.id.name)) return;\n\n        const required = getRequired(node.init, node.id.name);\n        required.importsDefault = true;\n\n        if (required.name === node.id.name && !required.isDynamic) {\n          node._shouldRemove = true;\n        }\n      }\n\n      if (!isStaticRequireStatement(node) || isIgnoredRequireStatement(node)) {\n        return;\n      }\n\n      const required = getRequired(node);\n\n      if (parent.type === 'ExpressionStatement') {\n        // is a bare import, e.g. `require('foo');`\n        magicString.remove(parent.start, parent.end);\n      } else {\n        required.importsDefault = true;\n\n        if (shouldUseSimulatedRequire(required)) {\n          magicString.overwrite(\n            node.start,\n            node.end,\n            `${HELPERS_NAME}.commonjsRequire(${JSON.stringify(\n              getVirtualPathForDynamicRequirePath(normalizePathSlashes(required.source), commonDir)\n            )}, ${JSON.stringify(\n              dirname(id) === '.'\n                ? null /* default behavior */\n                : getVirtualPathForDynamicRequirePath(normalizePathSlashes(dirname(id)), commonDir)\n            )})`\n          );\n          usesCommonjsHelpers = true;\n        } else {\n          magicString.overwrite(node.start, node.end, required.name);\n        }\n      }\n\n      node.callee._skip = true;\n    },\n\n    leave(node) {\n      programDepth -= 1;\n      if (node.scope) scope = scope.parent;\n      if (functionType.test(node.type)) lexicalDepth -= 1;\n\n      if (node.type === 'VariableDeclaration') {\n        let keepDeclaration = false;\n        let c = node.declarations[0].start;\n\n        for (let i = 0; i < node.declarations.length; i += 1) {\n          const declarator = node.declarations[i];\n\n          if (declarator._shouldRemove) {\n            magicString.remove(c, declarator.end);\n          } else {\n            if (!keepDeclaration) {\n              magicString.remove(c, declarator.start);\n              keepDeclaration = true;\n            }\n\n            c = declarator.end;\n          }\n        }\n\n        if (!keepDeclaration) {\n          magicString.remove(node.start, node.end);\n        }\n      }\n    }\n  });\n\n  if (\n    !sources.length &&\n    !uses.module &&\n    !uses.exports &&\n    !uses.require &&\n    (ignoreGlobal || !uses.global)\n  ) {\n    // not a CommonJS module\n    return null;\n  }\n\n  // If `isEsModule` is on, it means it has ES6 import/export statements,\n  //   which just can't be wrapped in a function.\n  if (isEsModule) shouldWrap = false;\n\n  usesCommonjsHelpers = usesCommonjsHelpers || shouldWrap;\n\n  const importBlock = `${(usesCommonjsHelpers\n    ? [`import * as ${HELPERS_NAME} from '${HELPERS_ID}';`]\n    : []\n  )\n    .concat(\n      sources.map(\n        ([source]) =>\n          // import the actual module before the proxy, so that we know\n          // what kind of proxy to build\n          `import '${source}';`\n      ),\n      sources\n        .filter(([, importProxy]) => importProxy)\n        .map(([source]) => {\n          const { name, importsDefault } = required[source];\n          return `import ${importsDefault ? `${name} from ` : ``}'${getProxyId(source)}';`;\n        })\n    )\n    .join('\\n')}\\n\\n`;\n\n  const namedExportDeclarations = [];\n  let wrapperStart = '';\n  let wrapperEnd = '';\n\n  const moduleName = deconflict(scope, globals, getName(id));\n  if ((!isEntry || hasImporters) && !isEsModule) {\n    const exportModuleExports = {\n      str: `export { ${moduleName} as __moduleExports };`,\n      name: '__moduleExports'\n    };\n\n    namedExportDeclarations.push(exportModuleExports);\n  }\n\n  const defaultExportPropertyAssignments = [];\n  let hasDefaultExport = false;\n\n  if (shouldWrap) {\n    const args = `module${uses.exports ? ', exports' : ''}`;\n\n    wrapperStart = `var ${moduleName} = ${HELPERS_NAME}.createCommonjsModule(function (${args}) {\\n`;\n\n    wrapperEnd = `\\n}`;\n    if (isDynamicRequireModulesEnabled) {\n      wrapperEnd += `, ${JSON.stringify(\n        getVirtualPathForDynamicRequirePath(normalizePathSlashes(dirname(id)), commonDir)\n      )}`;\n    }\n\n    wrapperEnd += `);`;\n  } else {\n    const names = [];\n\n    for (const node of ast.body) {\n      if (node.type === 'ExpressionStatement' && node.expression.type === 'AssignmentExpression') {\n        const { left } = node.expression;\n        const flattened = flatten(left);\n\n        if (!flattened) {\n          continue;\n        }\n\n        const match = exportsPattern.exec(flattened.keypath);\n        if (!match) {\n          continue;\n        }\n\n        if (flattened.keypath === 'module.exports') {\n          hasDefaultExport = true;\n          magicString.overwrite(left.start, left.end, `var ${moduleName}`);\n        } else {\n          const [, name] = match;\n          const deconflicted = deconflict(scope, globals, name);\n\n          names.push({ name, deconflicted });\n\n          magicString.overwrite(node.start, left.end, `var ${deconflicted}`);\n\n          const declaration =\n            name === deconflicted\n              ? `export { ${name} };`\n              : `export { ${deconflicted} as ${name} };`;\n\n          if (name !== 'default') {\n            namedExportDeclarations.push({\n              str: declaration,\n              name\n            });\n          }\n\n          defaultExportPropertyAssignments.push(`${moduleName}.${name} = ${deconflicted};`);\n        }\n      }\n    }\n\n    if (!hasDefaultExport && (names.length || ((!isEntry || hasImporters) && !isEsModule))) {\n      wrapperEnd = `\\n\\nvar ${moduleName} = {\\n${names\n        .map(({ name, deconflicted }) => `\\t${name}: ${deconflicted}`)\n        .join(',\\n')}\\n};`;\n    }\n  }\n\n  const defaultExport = `export default ${moduleName};`;\n\n  const named = namedExportDeclarations\n    .filter((x) => x.name !== 'default' || !hasDefaultExport)\n    .map((x) => x.str);\n\n  const exportBlock = `\\n\\n${(isEsModule ? [] : [defaultExport])\n    .concat(named)\n    .concat(hasDefaultExport ? defaultExportPropertyAssignments : [])\n    .join('\\n')}`;\n\n  magicString\n    .trim()\n    .prepend(importBlock + wrapperStart)\n    .trim()\n    .append(wrapperEnd);\n\n  const injectExportBlock =\n    hasDefaultExport || named.length > 0 || shouldWrap || !isEntry || hasImporters;\n  if (injectExportBlock) {\n    magicString.append(exportBlock);\n  }\n\n  code = magicString.toString();\n  const map = sourceMap ? magicString.generateMap() : null;\n\n  return { code, map, syntheticNamedExports: injectExportBlock };\n}\n","import { statSync } from 'fs';\n\nimport { resolve } from 'path';\n\nimport glob from 'glob';\n\nimport { normalizePathSlashes } from './transform';\n\nexport default function getDynamicRequirePaths(patterns) {\n  const dynamicRequireModuleSet = new Set();\n  for (const pattern of !patterns || Array.isArray(patterns) ? patterns || [] : [patterns]) {\n    const isNegated = pattern.startsWith('!');\n    const modifySet = Set.prototype[isNegated ? 'delete' : 'add'].bind(dynamicRequireModuleSet);\n    for (const path of glob.sync(isNegated ? pattern.substr(1) : pattern)) {\n      modifySet(normalizePathSlashes(resolve(path)));\n    }\n  }\n  const dynamicRequireModuleDirPaths = Array.from(dynamicRequireModuleSet.values()).filter(\n    (path) => {\n      try {\n        if (statSync(path).isDirectory()) return true;\n      } catch (ignored) {\n        // Nothing to do here\n      }\n      return false;\n    }\n  );\n  return { dynamicRequireModuleSet, dynamicRequireModuleDirPaths };\n}\n","/* eslint-disable no-undefined */\nconst isCjsPromises = new Map();\n\nexport function getIsCjsPromise(id) {\n  let isCjsPromise = isCjsPromises.get(id);\n  if (isCjsPromise) return isCjsPromise.promise;\n\n  const promise = new Promise((resolve) => {\n    isCjsPromise = {\n      resolve,\n      promise: undefined\n    };\n    isCjsPromises.set(id, isCjsPromise);\n  });\n  isCjsPromise.promise = promise;\n\n  return promise;\n}\n\nexport function setIsCjsPromise(id, resolution) {\n  const isCjsPromise = isCjsPromises.get(id);\n  if (isCjsPromise) {\n    if (isCjsPromise.resolve) {\n      isCjsPromise.resolve(resolution);\n      isCjsPromise.resolve = undefined;\n    }\n  } else {\n    isCjsPromises.set(id, { promise: Promise.resolve(resolution), resolve: undefined });\n  }\n}\n","/* eslint-disable no-param-reassign, no-undefined */\nimport { statSync } from 'fs';\nimport { dirname, resolve, sep } from 'path';\n\nimport {\n  DYNAMIC_JSON_PREFIX,\n  DYNAMIC_PACKAGES_ID,\n  getExternalProxyId,\n  getIdFromProxyId,\n  getProxyId,\n  HELPERS_ID,\n  PROXY_SUFFIX\n} from './helpers';\n\nfunction getCandidatesForExtension(resolved, extension) {\n  return [resolved + extension, `${resolved}${sep}index${extension}`];\n}\n\nfunction getCandidates(resolved, extensions) {\n  return extensions.reduce(\n    (paths, extension) => paths.concat(getCandidatesForExtension(resolved, extension)),\n    [resolved]\n  );\n}\n\nexport default function getResolveId(extensions) {\n  function resolveExtensions(importee, importer) {\n    // not our problem\n    if (importee[0] !== '.' || !importer) return undefined;\n\n    const resolved = resolve(dirname(importer), importee);\n    const candidates = getCandidates(resolved, extensions);\n\n    for (let i = 0; i < candidates.length; i += 1) {\n      try {\n        const stats = statSync(candidates[i]);\n        if (stats.isFile()) return { id: candidates[i] };\n      } catch (err) {\n        /* noop */\n      }\n    }\n\n    return undefined;\n  }\n\n  function resolveId(importee, importer) {\n    const isProxyModule = importee.endsWith(PROXY_SUFFIX);\n    if (isProxyModule) {\n      importee = getIdFromProxyId(importee);\n    } else if (importee.startsWith('\\0')) {\n      if (\n        importee === HELPERS_ID ||\n        importee === DYNAMIC_PACKAGES_ID ||\n        importee.startsWith(DYNAMIC_JSON_PREFIX)\n      ) {\n        return importee;\n      }\n      return null;\n    }\n\n    if (importee.startsWith(DYNAMIC_JSON_PREFIX)) {\n      return importee;\n    }\n\n    if (importer && importer.endsWith(PROXY_SUFFIX)) {\n      importer = getIdFromProxyId(importer);\n    }\n\n    return this.resolve(importee, importer, { skipSelf: true }).then((resolved) => {\n      if (!resolved) {\n        resolved = resolveExtensions(importee, importer);\n      }\n      if (isProxyModule) {\n        if (!resolved) {\n          return { id: getExternalProxyId(importee), external: false };\n        }\n        resolved.id = (resolved.external ? getExternalProxyId : getProxyId)(resolved.id);\n        resolved.external = false;\n        return resolved;\n      }\n      return resolved;\n    });\n  }\n\n  return resolveId;\n}\n","import { existsSync, readFileSync } from 'fs';\nimport { extname, join } from 'path';\n\nimport { createFilter } from '@rollup/pluginutils';\n\nimport getCommonDir from 'commondir';\n\nimport { peerDependencies } from '../package.json';\n\nimport getDynamicRequirePaths from './dynamic-require-paths';\n\nimport {\n  DYNAMIC_JSON_PREFIX,\n  DYNAMIC_PACKAGES_ID,\n  DYNAMIC_REGISTER_PREFIX,\n  getVirtualPathForDynamicRequirePath,\n  EXTERNAL_SUFFIX,\n  getIdFromExternalProxyId,\n  getIdFromProxyId,\n  HELPERS,\n  HELPERS_ID,\n  HELPER_NON_DYNAMIC,\n  HELPERS_DYNAMIC,\n  PROXY_SUFFIX\n} from './helpers';\n\nimport { getIsCjsPromise, setIsCjsPromise } from './is-cjs';\nimport getResolveId from './resolve-id';\nimport {\n  checkEsModule,\n  normalizePathSlashes,\n  hasCjsKeywords,\n  transformCommonjs\n} from './transform';\nimport { getName } from './utils';\n\nexport default function commonjs(options = {}) {\n  const extensions = options.extensions || ['.js'];\n  const filter = createFilter(options.include, options.exclude);\n  const { ignoreGlobal } = options;\n\n  const { dynamicRequireModuleSet, dynamicRequireModuleDirPaths } = getDynamicRequirePaths(\n    options.dynamicRequireTargets\n  );\n  const isDynamicRequireModulesEnabled = dynamicRequireModuleSet.size > 0;\n  const commonDir = isDynamicRequireModulesEnabled\n    ? getCommonDir(null, Array.from(dynamicRequireModuleSet).concat(process.cwd()))\n    : null;\n\n  const esModulesWithoutDefaultExport = new Set();\n  const esModulesWithDefaultExport = new Set();\n\n  const ignoreRequire =\n    typeof options.ignore === 'function'\n      ? options.ignore\n      : Array.isArray(options.ignore)\n      ? (id) => options.ignore.includes(id)\n      : () => false;\n\n  const resolveId = getResolveId(extensions);\n\n  const sourceMap = options.sourceMap !== false;\n\n  function transformAndCheckExports(code, id) {\n    const { isEsModule, hasDefaultExport, ast } = checkEsModule(this.parse, code, id);\n\n    const isDynamicRequireModule = dynamicRequireModuleSet.has(normalizePathSlashes(id));\n\n    if (isEsModule && (!isDynamicRequireModule || !options.transformMixedEsModules)) {\n      (hasDefaultExport ? esModulesWithDefaultExport : esModulesWithoutDefaultExport).add(id);\n      if (!options.transformMixedEsModules) {\n        setIsCjsPromise(id, false);\n        return null;\n      }\n    }\n    // it is not an ES module AND it does not have CJS-specific elements.\n    else if (!hasCjsKeywords(code, ignoreGlobal)) {\n      esModulesWithoutDefaultExport.add(id);\n      setIsCjsPromise(id, false);\n      return null;\n    }\n\n    const moduleInfo = this.getModuleInfo(id);\n\n    const transformed = transformCommonjs(\n      this.parse,\n      code,\n      id,\n      moduleInfo.isEntry,\n      moduleInfo.importers && moduleInfo.importers.length > 0,\n      isEsModule,\n      ignoreGlobal || isEsModule,\n      ignoreRequire,\n      sourceMap,\n      isDynamicRequireModulesEnabled,\n      dynamicRequireModuleSet,\n      commonDir,\n      ast\n    );\n\n    setIsCjsPromise(id, isEsModule ? false : Boolean(transformed));\n\n    if (!transformed) {\n      if (!isEsModule || isDynamicRequireModule) esModulesWithoutDefaultExport.add(id);\n      return null;\n    }\n\n    return transformed;\n  }\n\n  return {\n    name: 'commonjs',\n\n    buildStart() {\n      if (options.namedExports != null) {\n        this.warn(\n          'The namedExports option from \"@rollup/plugin-commonjs\" is deprecated. Named exports are now handled automatically.'\n        );\n      }\n\n      const [major, minor] = this.meta.rollupVersion.split('.').map(Number);\n      const minVersion = peerDependencies.rollup.slice(2);\n      const [minMajor, minMinor] = minVersion.split('.').map(Number);\n      if (major < minMajor || (major === minMajor && minor < minMinor)) {\n        this.error(\n          `Insufficient Rollup version: \"@rollup/plugin-commonjs\" requires at least rollup@${minVersion} but found rollup@${this.meta.rollupVersion}.`\n        );\n      }\n    },\n\n    resolveId,\n\n    load(id) {\n      if (id === HELPERS_ID) {\n        let code = HELPERS;\n\n        // Do not bloat everyone's code with the module manager code\n        if (isDynamicRequireModulesEnabled) code += HELPERS_DYNAMIC;\n        else code += HELPER_NON_DYNAMIC;\n\n        return code;\n      }\n\n      // generate proxy modules\n      if (id.endsWith(EXTERNAL_SUFFIX)) {\n        const actualId = getIdFromExternalProxyId(id);\n        const name = getName(actualId);\n\n        if (actualId === HELPERS_ID || actualId === DYNAMIC_PACKAGES_ID)\n          // These do not export default\n          return `import * as ${name} from ${JSON.stringify(actualId)}; export default ${name};`;\n\n        return `import ${name} from ${JSON.stringify(actualId)}; export default ${name};`;\n      }\n\n      if (id === DYNAMIC_PACKAGES_ID) {\n        let code = `const { commonjsRegister } = require('${HELPERS_ID}');`;\n        for (const dir of dynamicRequireModuleDirPaths) {\n          let entryPoint = 'index.js';\n\n          try {\n            if (existsSync(join(dir, 'package.json'))) {\n              entryPoint =\n                JSON.parse(readFileSync(join(dir, 'package.json'), { encoding: 'utf8' })).main ||\n                entryPoint;\n            }\n          } catch (ignored) {\n            // ignored\n          }\n\n          code += `\\ncommonjsRegister(${JSON.stringify(\n            getVirtualPathForDynamicRequirePath(dir, commonDir)\n          )}, function (module, exports) {\n  module.exports = require(${JSON.stringify(normalizePathSlashes(join(dir, entryPoint)))});\n});`;\n        }\n        return code;\n      }\n\n      let actualId = id;\n\n      const isDynamicJson = actualId.startsWith(DYNAMIC_JSON_PREFIX);\n      if (isDynamicJson) {\n        actualId = actualId.slice(DYNAMIC_JSON_PREFIX.length);\n      }\n\n      const normalizedPath = normalizePathSlashes(actualId);\n\n      if (isDynamicJson) {\n        return `require('${HELPERS_ID}').commonjsRegister(${JSON.stringify(\n          getVirtualPathForDynamicRequirePath(normalizedPath, commonDir)\n        )}, function (module, exports) {\n  module.exports = require(${JSON.stringify(normalizedPath)});\n});`;\n      }\n\n      if (dynamicRequireModuleSet.has(normalizedPath) && !normalizedPath.endsWith('.json')) {\n        // Try our best to still export the module fully.\n        // The commonjs polyfill should take care of circular references.\n\n        return `require('${HELPERS_ID}').commonjsRegister(${JSON.stringify(\n          getVirtualPathForDynamicRequirePath(normalizedPath, commonDir)\n        )}, function (module, exports) {\n  ${readFileSync(normalizedPath, { encoding: 'utf8' })}\n});`;\n      }\n\n      if (actualId.endsWith(PROXY_SUFFIX)) {\n        actualId = getIdFromProxyId(actualId);\n        const name = getName(actualId);\n\n        return getIsCjsPromise(actualId).then((isCjs) => {\n          if (\n            dynamicRequireModuleSet.has(normalizePathSlashes(actualId)) &&\n            !actualId.endsWith('.json')\n          )\n            return `import {commonjsRequire} from '${HELPERS_ID}'; const ${name} = commonjsRequire(${JSON.stringify(\n              getVirtualPathForDynamicRequirePath(normalizePathSlashes(actualId), commonDir)\n            )}); export default (${name} && ${name}['default']) || ${name}`;\n          else if (isCjs)\n            return `import { __moduleExports } from ${JSON.stringify(\n              actualId\n            )}; export default __moduleExports;`;\n          else if (esModulesWithoutDefaultExport.has(actualId))\n            return `import * as ${name} from ${JSON.stringify(actualId)}; export default ${name};`;\n          else if (esModulesWithDefaultExport.has(actualId)) {\n            return `export {default} from ${JSON.stringify(actualId)};`;\n          }\n          return `import * as ${name} from ${JSON.stringify(\n            actualId\n          )}; import {getCjsExportFromNamespace} from \"${HELPERS_ID}\"; export default getCjsExportFromNamespace(${name})`;\n        });\n      }\n\n      if (isDynamicRequireModulesEnabled && this.getModuleInfo(id).isEntry) {\n        let code;\n\n        try {\n          code = readFileSync(actualId, { encoding: 'utf8' });\n        } catch (ex) {\n          this.warn(`Failed to read file ${actualId}, dynamic modules might not work correctly`);\n          return null;\n        }\n\n        let dynamicImports = Array.from(dynamicRequireModuleSet)\n          .map((dynamicId) => `require(${JSON.stringify(DYNAMIC_REGISTER_PREFIX + dynamicId)});`)\n          .join('\\n');\n\n        if (dynamicRequireModuleDirPaths.length) {\n          dynamicImports += `require(${JSON.stringify(\n            DYNAMIC_REGISTER_PREFIX + DYNAMIC_PACKAGES_ID\n          )});`;\n        }\n\n        code = `${dynamicImports}\\n${code}`;\n\n        return code;\n      }\n\n      return null;\n    },\n\n    transform(code, id) {\n      if (id !== DYNAMIC_PACKAGES_ID && !id.startsWith(DYNAMIC_JSON_PREFIX)) {\n        if (!filter(id) || extensions.indexOf(extname(id)) === -1) {\n          setIsCjsPromise(id, null);\n          return null;\n        }\n      }\n\n      let transformed;\n      try {\n        transformed = transformAndCheckExports.call(this, code, id);\n      } catch (err) {\n        transformed = null;\n        setIsCjsPromise(id, false);\n        this.error(err, err.loc);\n      }\n\n      return transformed;\n    }\n  };\n}\n"],"names":["operators","x","equals","left","right","not","isFalsy","argument","isTruthy","flatten","node","parts","type","computed","unshift","property","name","object","keypath","join","value","expression","operator","undefined","a","b","strict","PROXY_SUFFIX","getProxyId","id","getIdFromProxyId","proxyId","slice","length","EXTERNAL_SUFFIX","getExternalProxyId","getIdFromExternalProxyId","VIRTUAL_PATH_BASE","getVirtualPathForDynamicRequirePath","path","commonDir","startsWith","DYNAMIC_REGISTER_PREFIX","DYNAMIC_JSON_PREFIX","DYNAMIC_PACKAGES_ID","HELPERS_ID","HELPERS","HELPER_NON_DYNAMIC","HELPERS_DYNAMIC","getName","makeLegalIdentifier","basename","extname","segments","dirname","split","sep","reserved","blacklist","__esModule","forEach","word","exportsPattern","firstpassGlobal","firstpassNoGlobal","importExportDeclaration","functionType","deconflict","scope","globals","identifier","i","deconflicted","contains","has","declarations","tryParse","parse","code","allowReturnOutsideFunction","err","message","normalizePathSlashes","replace","hasCjsKeywords","ignoreGlobal","firstpass","test","checkEsModule","ast","isEsModule","body","hasDefaultExport","specifiers","specifier","exported","getDefinePropertyCallName","targetName","callee","arguments","target","val","transformCommonjs","isEntry","hasImporters","ignoreRequire","sourceMap","isDynamicRequireModulesEnabled","dynamicRequireModuleSet","astCache","magicString","MagicString","required","sources","uid","attachScopes","uses","module","exports","global","require","lexicalDepth","programDepth","Set","HELPERS_NAME","namedExports","shouldWrap","usesCommonjsHelpers","isRequireStatement","isRequireIdentifier","hasDynamicArguments","expressions","isStaticRequireStatement","isNodeRequireStatement","parent","reservedMethod","indexOf","isIgnoredRequireStatement","requiredNode","getRequireStringArg","quasis","cooked","getRequired","sourceId","isDynamicRegister","substr","existing","isDynamic","hasDynamicModuleForPath","endsWith","push","source","importsDefault","resolvedPath","nodeResolveSync","basedir","ex","attemptExt","resolve","shouldUseSimulatedRequire","assignedTo","walk","enter","extractAssignedNames","add","addSourcemapLocation","start","end","consequent","skip","alternate","_skip","overwrite","storeName","flattened","isReference","appendLeft","JSON","stringify","match","exec","properties","prop","key","init","_shouldRemove","remove","leave","keepDeclaration","c","declarator","importBlock","concat","map","filter","importProxy","namedExportDeclarations","wrapperStart","wrapperEnd","moduleName","exportModuleExports","str","defaultExportPropertyAssignments","args","names","declaration","defaultExport","named","exportBlock","trim","prepend","append","injectExportBlock","toString","generateMap","syntheticNamedExports","getDynamicRequirePaths","patterns","Array","isArray","pattern","isNegated","modifySet","prototype","bind","glob","sync","dynamicRequireModuleDirPaths","from","values","statSync","isDirectory","ignored","isCjsPromises","Map","getIsCjsPromise","isCjsPromise","get","promise","Promise","set","setIsCjsPromise","resolution","getCandidatesForExtension","resolved","extension","getCandidates","extensions","reduce","paths","getResolveId","resolveExtensions","importee","importer","candidates","stats","isFile","resolveId","isProxyModule","skipSelf","then","external","commonjs","options","createFilter","include","exclude","dynamicRequireTargets","size","getCommonDir","process","cwd","esModulesWithoutDefaultExport","esModulesWithDefaultExport","ignore","includes","transformAndCheckExports","isDynamicRequireModule","transformMixedEsModules","moduleInfo","getModuleInfo","transformed","importers","Boolean","buildStart","warn","meta","rollupVersion","Number","major","minor","minVersion","peerDependencies","rollup","minMajor","minMinor","error","load","actualId","dir","entryPoint","existsSync","readFileSync","encoding","main","isDynamicJson","normalizedPath","isCjs","dynamicImports","dynamicId","transform","call","loc"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.js","sources":["../src/helpers.js","../src/ast-utils.js","../src/utils.js","../src/transform.js","../src/dynamic-packages-manager.js","../src/dynamic-require-paths.js","../src/is-cjs.js","../src/proxies.js","../src/resolve-id.js","../src/index.js"],"sourcesContent":["export const PROXY_SUFFIX = '?commonjs-proxy';\nexport const getProxyId = (id) => `\\0${id}${PROXY_SUFFIX}`;\nexport const getIdFromProxyId = (proxyId) => proxyId.slice(1, -PROXY_SUFFIX.length);\n\nexport const EXTERNAL_SUFFIX = '?commonjs-external';\nexport const getExternalProxyId = (id) => `\\0${id}${EXTERNAL_SUFFIX}`;\nexport const getIdFromExternalProxyId = (proxyId) => proxyId.slice(1, -EXTERNAL_SUFFIX.length);\n\nexport const VIRTUAL_PATH_BASE = '/$$rollup_base$$';\nexport const getVirtualPathForDynamicRequirePath = (path, commonDir) => {\n  if (path.startsWith(commonDir)) return VIRTUAL_PATH_BASE + path.slice(commonDir.length);\n  return path;\n};\n\nexport const DYNAMIC_REGISTER_PREFIX = '\\0commonjs-dynamic-register:';\nexport const DYNAMIC_JSON_PREFIX = '\\0commonjs-dynamic-json:';\nexport const DYNAMIC_PACKAGES_ID = '\\0commonjs-dynamic-packages';\n\nexport const HELPERS_ID = '\\0commonjsHelpers.js';\n\n// `x['default']` is used instead of `x.default` for backward compatibility with ES3 browsers.\n// Minifiers like uglify will usually transpile it back if compatibility with ES3 is not enabled.\n// This will no longer be necessary once Rollup switches to ES6 output, likely\n// in Rollup 3\n\n// The \"hasOwnProperty\" call in \"getDefaultExportFromCjs\" is technically not\n// needed, but for consumers that use Rollup's old interop pattern, it will fix\n// rollup/rollup-plugin-commonjs#224\n// We should remove it once Rollup core and this plugin are updated to not use\n// this pattern any more\nconst HELPERS = `\nexport var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nexport function getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nexport function createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t  path: basedir,\n\t  exports: {},\n\t  require: function (path, base) {\n      return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n    }\n\t}, fn(module, module.exports), module.exports;\n}\n\nexport function getDefaultExportFromNamespaceIfPresent (n) {\n\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;\n}\n\nexport function getDefaultExportFromNamespaceIfNotNamed (n) {\n\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;\n}\n`;\n\nconst HELPER_NON_DYNAMIC = `\nexport function commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n`;\n\nconst HELPERS_DYNAMIC = `\nexport function commonjsRegister (path, loader) {\n\tDYNAMIC_REQUIRE_LOADERS[path] = loader;\n}\n\nconst DYNAMIC_REQUIRE_LOADERS = Object.create(null);\nconst DYNAMIC_REQUIRE_CACHE = Object.create(null);\nconst DEFAULT_PARENT_MODULE = {\n\tid: '<' + 'rollup>', exports: {}, parent: undefined, filename: null, loaded: false, children: [], paths: []\n};\nconst CHECKED_EXTENSIONS = ['', '.js', '.json'];\n\nfunction normalize (path) {\n\tpath = path.replace(/\\\\\\\\/g, '/');\n\tconst parts = path.split('/');\n\tconst slashed = parts[0] === '';\n\tfor (let i = 1; i < parts.length; i++) {\n\t\tif (parts[i] === '.' || parts[i] === '') {\n\t\t\tparts.splice(i--, 1);\n\t\t}\n\t}\n\tfor (let i = 1; i < parts.length; i++) {\n\t\tif (parts[i] !== '..') continue;\n\t\tif (i > 0 && parts[i - 1] !== '..' && parts[i - 1] !== '.') {\n\t\t\tparts.splice(--i, 2);\n\t\t\ti--;\n\t\t}\n\t}\n\tpath = parts.join('/');\n\tif (slashed && path[0] !== '/')\n\t  path = '/' + path;\n\telse if (path.length === 0)\n\t  path = '.';\n\treturn path;\n}\n\nfunction join () {\n\tif (arguments.length === 0)\n\t  return '.';\n\tlet joined;\n\tfor (let i = 0; i < arguments.length; ++i) {\n\t  let arg = arguments[i];\n\t  if (arg.length > 0) {\n\t\tif (joined === undefined)\n\t\t  joined = arg;\n\t\telse\n\t\t  joined += '/' + arg;\n\t  }\n\t}\n\tif (joined === undefined)\n\t  return '.';\n\n\treturn joined;\n}\n\nfunction isPossibleNodeModulesPath (modulePath) {\n\tlet c0 = modulePath[0];\n\tif (c0 === '/' || c0 === '\\\\\\\\') return false;\n\tlet c1 = modulePath[1], c2 = modulePath[2];\n\tif ((c0 === '.' && (!c1 || c1 === '/' || c1 === '\\\\\\\\')) ||\n\t\t(c0 === '.' && c1 === '.' && (!c2 || c2 === '/' || c2 === '\\\\\\\\'))) return false;\n\tif (c1 === ':' && (c2 === '/' || c2 === '\\\\\\\\'))\n\t\treturn false;\n\treturn true;\n}\n\nfunction dirname (path) {\n  if (path.length === 0)\n    return '.';\n\n  let i = path.length - 1;\n  while (i > 0) {\n    const c = path.charCodeAt(i);\n    if ((c === 47 || c === 92) && i !== path.length - 1)\n      break;\n    i--;\n  }\n\n  if (i > 0)\n    return path.substr(0, i);\n\n  if (path.chartCodeAt(0) === 47 || path.chartCodeAt(0) === 92)\n    return path.charAt(0);\n\n  return '.';\n}\n\nexport function commonjsRequire (path, originalModuleDir) {\n\tconst shouldTryNodeModules = isPossibleNodeModulesPath(path);\n\tpath = normalize(path);\n\tlet relPath;\n\twhile (true) {\n\t\tif (!shouldTryNodeModules) {\n\t\t\trelPath = originalModuleDir ? normalize(originalModuleDir + '/' + path) : path;\n\t\t} else if (originalModuleDir) {\n\t\t\trelPath = normalize(originalModuleDir + '/node_modules/' + path);\n\t\t} else {\n\t\t\trelPath = normalize(join('node_modules', path));\n\t\t}\n\t\tfor (let extensionIndex = 0; extensionIndex < CHECKED_EXTENSIONS.length; extensionIndex++) {\n\t\t\tconst resolvedPath = relPath + CHECKED_EXTENSIONS[extensionIndex];\n\t\t\tlet cachedModule = DYNAMIC_REQUIRE_CACHE[resolvedPath];\n\t\t\tif (cachedModule) return cachedModule.exports;\n\t\t\tconst loader = DYNAMIC_REQUIRE_LOADERS[resolvedPath];\n\t\t\tif (loader) {\n\t\t\t\tDYNAMIC_REQUIRE_CACHE[resolvedPath] = cachedModule = {\n\t\t\t\t\tid: resolvedPath,\n\t\t\t\t\tfilename: resolvedPath,\n\t\t\t\t\tpath: dirname(resolvedPath),\n\t\t\t\t\texports: {},\n\t\t\t\t\tparent: DEFAULT_PARENT_MODULE,\n\t\t\t\t\tloaded: false,\n\t\t\t\t\tchildren: [],\n\t\t\t\t\tpaths: [],\n\t\t\t\t\trequire: function (path, base) {\n\t\t\t\t\t  return commonjsRequire(path, (base === undefined || base === null) ? cachedModule.path : base);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\ttry {\n\t\t\t\t\tloader.call(commonjsGlobal, cachedModule, cachedModule.exports);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdelete DYNAMIC_REQUIRE_CACHE[resolvedPath];\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\tcachedModule.loaded = true;\n\t\t\t\treturn cachedModule.exports;\n\t\t\t};\n\t\t}\n\t\tif (!shouldTryNodeModules) break;\n\t\tconst nextDir = normalize(originalModuleDir + '/..');\n\t\tif (nextDir === originalModuleDir) break;\n\t\toriginalModuleDir = nextDir;\n\t}\n\treturn require(path);\n}\n\ncommonjsRequire.cache = DYNAMIC_REQUIRE_CACHE;\n`;\n\nexport function getHelpersModule(isDynamicRequireModulesEnabled) {\n  return `${HELPERS}${isDynamicRequireModulesEnabled ? HELPERS_DYNAMIC : HELPER_NON_DYNAMIC}`;\n}\n","/* eslint-disable no-undefined */\nexport { default as isReference } from 'is-reference';\n\nconst operators = {\n  '==': (x) => equals(x.left, x.right, false),\n\n  '!=': (x) => not(operators['=='](x)),\n\n  '===': (x) => equals(x.left, x.right, true),\n\n  '!==': (x) => not(operators['==='](x)),\n\n  '!': (x) => isFalsy(x.argument),\n\n  '&&': (x) => isTruthy(x.left) && isTruthy(x.right),\n\n  '||': (x) => isTruthy(x.left) || isTruthy(x.right)\n};\n\nconst extractors = {\n  Identifier(names, node) {\n    names.push(node.name);\n  },\n\n  ObjectPattern(names, node) {\n    node.properties.forEach((prop) => {\n      getExtractor(prop.value.type)(names, prop.value);\n    });\n  },\n\n  ArrayPattern(names, node) {\n    node.elements.forEach((element) => {\n      if (!element) return;\n      getExtractor(element.type)(names, element);\n    });\n  },\n\n  RestElement(names, node) {\n    getExtractor(node.argument.type)(names, node.argument);\n  },\n\n  AssignmentPattern(names, node) {\n    getExtractor(node.left.type)(names, node.left);\n  }\n};\n\nexport function flatten(node) {\n  const parts = [];\n\n  while (node.type === 'MemberExpression') {\n    if (node.computed) return null;\n\n    parts.unshift(node.property.name);\n    // eslint-disable-next-line no-param-reassign\n    node = node.object;\n  }\n\n  if (node.type !== 'Identifier') return null;\n\n  const { name } = node;\n  parts.unshift(name);\n\n  return { name, keypath: parts.join('.') };\n}\n\nexport function extractNames(node) {\n  const names = [];\n  extractors[node.type](names, node);\n  return names;\n}\n\nfunction getExtractor(type) {\n  const extractor = extractors[type];\n  if (!extractor) throw new SyntaxError(`${type} pattern not supported.`);\n  return extractor;\n}\n\nexport function isTruthy(node) {\n  if (node.type === 'Literal') return !!node.value;\n  if (node.type === 'ParenthesizedExpression') return isTruthy(node.expression);\n  if (node.operator in operators) return operators[node.operator](node);\n  return undefined;\n}\n\nexport function isFalsy(node) {\n  return not(isTruthy(node));\n}\n\nfunction not(value) {\n  return value === undefined ? value : !value;\n}\n\nfunction equals(a, b, strict) {\n  if (a.type !== b.type) return undefined;\n  // eslint-disable-next-line eqeqeq\n  if (a.type === 'Literal') return strict ? a.value === b.value : a.value == b.value;\n  return undefined;\n}\n","/* eslint-disable import/prefer-default-export */\nimport { basename, dirname, extname, sep } from 'path';\n\nimport { makeLegalIdentifier } from '@rollup/pluginutils';\n\nexport function getName(id) {\n  const name = makeLegalIdentifier(basename(id, extname(id)));\n  if (name !== 'index') {\n    return name;\n  }\n  const segments = dirname(id).split(sep);\n  return makeLegalIdentifier(segments[segments.length - 1]);\n}\n","/* eslint-disable no-param-reassign, no-shadow, no-underscore-dangle, no-continue */\n\nimport { dirname, resolve } from 'path';\n\nimport { attachScopes, extractAssignedNames, makeLegalIdentifier } from '@rollup/pluginutils';\nimport { walk } from 'estree-walker';\nimport MagicString from 'magic-string';\nimport { sync as nodeResolveSync } from 'resolve';\n\nimport { flatten, isFalsy, isReference, isTruthy } from './ast-utils';\nimport {\n  DYNAMIC_JSON_PREFIX,\n  DYNAMIC_REGISTER_PREFIX,\n  getProxyId,\n  getVirtualPathForDynamicRequirePath,\n  HELPERS_ID\n} from './helpers';\nimport { getName } from './utils';\n\nconst reserved = 'process location abstract arguments boolean break byte case catch char class const continue debugger default delete do double else enum eval export extends false final finally float for from function goto if implements import in instanceof int interface let long native new null package private protected public return short static super switch synchronized this throw throws transient true try typeof var void volatile while with yield'.split(\n  ' '\n);\nconst blacklist = { __esModule: true };\nreserved.forEach((word) => (blacklist[word] = true));\n\nconst exportsPattern = /^(?:module\\.)?exports(?:\\.([a-zA-Z_$][a-zA-Z_$0-9]*))?$/;\n\nconst firstpassGlobal = /\\b(?:require|module|exports|global)\\b/;\nconst firstpassNoGlobal = /\\b(?:require|module|exports)\\b/;\nconst functionType = /^(?:FunctionDeclaration|FunctionExpression|ArrowFunctionExpression)$/;\n\nfunction deconflict(scope, globals, identifier) {\n  let i = 1;\n  let deconflicted = makeLegalIdentifier(identifier);\n\n  while (scope.contains(deconflicted) || globals.has(deconflicted) || deconflicted in blacklist) {\n    deconflicted = `${identifier}_${i}`;\n    i += 1;\n  }\n  scope.declarations[deconflicted] = true;\n\n  return deconflicted;\n}\n\nfunction tryParse(parse, code, id) {\n  try {\n    return parse(code, { allowReturnOutsideFunction: true });\n  } catch (err) {\n    err.message += ` in ${id}`;\n    throw err;\n  }\n}\n\nexport function normalizePathSlashes(path) {\n  return path.replace(/\\\\/g, '/');\n}\n\nexport function hasCjsKeywords(code, ignoreGlobal) {\n  const firstpass = ignoreGlobal ? firstpassNoGlobal : firstpassGlobal;\n  return firstpass.test(code);\n}\n\nexport function checkEsModule(parse, code, id) {\n  const ast = tryParse(parse, code, id);\n\n  let isEsModule = false;\n  let hasDefaultExport = false;\n  let hasNamedExports = false;\n  for (const node of ast.body) {\n    if (node.type === 'ExportDefaultDeclaration') {\n      isEsModule = true;\n      hasDefaultExport = true;\n    } else if (node.type === 'ExportNamedDeclaration') {\n      isEsModule = true;\n      if (node.declaration) {\n        hasNamedExports = true;\n      } else {\n        for (const specifier of node.specifiers) {\n          if (specifier.exported.name === 'default') {\n            hasDefaultExport = true;\n          } else {\n            hasNamedExports = true;\n          }\n        }\n      }\n    } else if (node.type === 'ExportAllDeclaration') {\n      isEsModule = true;\n      if (node.exported && node.exported.name === 'default') {\n        hasDefaultExport = true;\n      } else {\n        hasNamedExports = true;\n      }\n    } else if (node.type === 'ImportDeclaration') {\n      isEsModule = true;\n    }\n  }\n\n  return { isEsModule, hasDefaultExport, hasNamedExports, ast };\n}\n\nfunction getDefinePropertyCallName(node, targetName) {\n  if (node.type !== 'CallExpression') return;\n\n  const {\n    callee: { object, property }\n  } = node;\n\n  if (!object || object.type !== 'Identifier' || object.name !== 'Object') return;\n\n  if (!property || property.type !== 'Identifier' || property.name !== 'defineProperty') return;\n\n  if (node.arguments.length !== 3) return;\n\n  const [target, val] = node.arguments;\n  if (target.type !== 'Identifier' || target.name !== targetName) return;\n  // eslint-disable-next-line consistent-return\n  return val.value;\n}\n\nexport function transformCommonjs(\n  parse,\n  code,\n  id,\n  isEsModule,\n  ignoreGlobal,\n  ignoreRequire,\n  sourceMap,\n  isDynamicRequireModulesEnabled,\n  dynamicRequireModuleSet,\n  commonDir,\n  astCache\n) {\n  const ast = astCache || tryParse(parse, code, id);\n\n  const magicString = new MagicString(code);\n\n  const required = {};\n  // Because objects have no guaranteed ordering, yet we need it,\n  // we need to keep track of the order in a array\n  const sources = [];\n\n  let uid = 0;\n\n  let scope = attachScopes(ast, 'scope');\n  const uses = { module: false, exports: false, global: false, require: false };\n\n  let lexicalDepth = 0;\n  let programDepth = 0;\n\n  const globals = new Set();\n\n  // TODO technically wrong since globals isn't populated yet, but ¯\\_(ツ)_/¯\n  const HELPERS_NAME = deconflict(scope, globals, 'commonjsHelpers');\n\n  const namedExports = {};\n\n  // TODO handle transpiled modules\n  let shouldWrap = /__esModule/.test(code);\n  let usesCommonjsHelpers = false;\n\n  function isRequireStatement(node) {\n    if (!node) return false;\n    if (node.type !== 'CallExpression') return false;\n\n    // Weird case of `require()` or `module.require()` without arguments\n    if (node.arguments.length === 0) return false;\n\n    return isRequireIdentifier(node.callee);\n  }\n\n  function isRequireIdentifier(node) {\n    if (!node) return false;\n\n    if (node.type === 'Identifier' && node.name === 'require' /* `require` */) {\n      // `require` is hidden by a variable in local scope\n      if (scope.contains('require')) return false;\n\n      return true;\n    } else if (node.type === 'MemberExpression' /* `[something].[something]` */) {\n      // `module.[something]`\n      if (node.object.type !== 'Identifier' || node.object.name !== 'module') return false;\n\n      // `module` is hidden by a variable in local scope\n      if (scope.contains('module')) return false;\n\n      // `module.require(...)`\n      if (node.property.type !== 'Identifier' || node.property.name !== 'require') return false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function hasDynamicArguments(node) {\n    return (\n      node.arguments.length > 1 ||\n      (node.arguments[0].type !== 'Literal' &&\n        (node.arguments[0].type !== 'TemplateLiteral' || node.arguments[0].expressions.length > 0))\n    );\n  }\n\n  function isStaticRequireStatement(node) {\n    if (!isRequireStatement(node)) return false;\n    return !hasDynamicArguments(node);\n  }\n\n  function isNodeRequireStatement(parent) {\n    const reservedMethod = ['resolve', 'cache', 'main'];\n    return !!(parent && parent.property && reservedMethod.indexOf(parent.property.name) > -1);\n  }\n\n  function isIgnoredRequireStatement(requiredNode) {\n    return ignoreRequire(requiredNode.arguments[0].value);\n  }\n\n  function getRequireStringArg(node) {\n    return node.arguments[0].type === 'Literal'\n      ? node.arguments[0].value\n      : node.arguments[0].quasis[0].value.cooked;\n  }\n\n  function getRequired(node, name) {\n    let sourceId = getRequireStringArg(node);\n    const isDynamicRegister = sourceId.startsWith(DYNAMIC_REGISTER_PREFIX);\n    if (isDynamicRegister) {\n      sourceId = sourceId.substr(DYNAMIC_REGISTER_PREFIX.length);\n    }\n\n    const existing = required[sourceId];\n    // eslint-disable-next-line no-undefined\n    if (existing === undefined) {\n      const isDynamic = hasDynamicModuleForPath(sourceId);\n\n      if (!name) {\n        do {\n          name = `require$$${uid}`;\n          uid += 1;\n        } while (scope.contains(name));\n      }\n\n      if (isDynamicRegister && sourceId.endsWith('.json')) {\n        sourceId = DYNAMIC_JSON_PREFIX + sourceId;\n      }\n\n      if (isDynamicRegister || !isDynamic || sourceId.endsWith('.json')) {\n        sources.push([sourceId, !isDynamicRegister]);\n      }\n\n      required[sourceId] = { source: sourceId, name, importsDefault: false, isDynamic };\n    }\n\n    return required[sourceId];\n  }\n\n  function hasDynamicModuleForPath(source) {\n    if (!/[/\\\\]/.test(source)) {\n      try {\n        const resolvedPath = normalizePathSlashes(\n          nodeResolveSync(source, { basedir: dirname(id) })\n        );\n        if (dynamicRequireModuleSet.has(resolvedPath)) {\n          return true;\n        }\n      } catch (ex) {\n        // Probably a node.js internal module\n        return false;\n      }\n\n      return false;\n    }\n\n    for (const attemptExt of ['', '.js', '.json']) {\n      const resolvedPath = normalizePathSlashes(resolve(dirname(id), source + attemptExt));\n      if (dynamicRequireModuleSet.has(resolvedPath)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function shouldUseSimulatedRequire(required) {\n    return (\n      hasDynamicModuleForPath(required.source) &&\n      // We only do `commonjsRequire` for json if it's the `commonjsRegister` call.\n      (required.source.startsWith(DYNAMIC_REGISTER_PREFIX) || !required.source.endsWith('.json'))\n    );\n  }\n\n  // do a first pass, see which names are assigned to. This is necessary to prevent\n  // illegally replacing `var foo = require('foo')` with `import foo from 'foo'`,\n  // where `foo` is later reassigned. (This happens in the wild. CommonJS, sigh)\n  const assignedTo = new Set();\n  walk(ast, {\n    enter(node) {\n      if (node.type !== 'AssignmentExpression') return;\n      if (node.left.type === 'MemberExpression') return;\n\n      extractAssignedNames(node.left).forEach((name) => {\n        assignedTo.add(name);\n      });\n    }\n  });\n\n  walk(ast, {\n    enter(node, parent) {\n      if (sourceMap) {\n        magicString.addSourcemapLocation(node.start);\n        magicString.addSourcemapLocation(node.end);\n      }\n\n      // skip dead branches\n      if (parent && (parent.type === 'IfStatement' || parent.type === 'ConditionalExpression')) {\n        if (node === parent.consequent && isFalsy(parent.test)) {\n          this.skip();\n          return;\n        }\n        if (node === parent.alternate && isTruthy(parent.test)) {\n          this.skip();\n          return;\n        }\n      }\n\n      if (node._skip) {\n        this.skip();\n        return;\n      }\n\n      programDepth += 1;\n\n      if (node.scope) ({ scope } = node);\n      if (functionType.test(node.type)) lexicalDepth += 1;\n\n      // if toplevel return, we need to wrap it\n      if (node.type === 'ReturnStatement' && lexicalDepth === 0) {\n        shouldWrap = true;\n      }\n\n      // rewrite `this` as `commonjsHelpers.commonjsGlobal`\n      if (node.type === 'ThisExpression' && lexicalDepth === 0) {\n        uses.global = true;\n        if (!ignoreGlobal) {\n          magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsGlobal`, {\n            storeName: true\n          });\n          usesCommonjsHelpers = true;\n        }\n        return;\n      }\n\n      // rewrite `typeof module`, `typeof module.exports` and `typeof exports` (https://github.com/rollup/rollup-plugin-commonjs/issues/151)\n      if (node.type === 'UnaryExpression' && node.operator === 'typeof') {\n        const flattened = flatten(node.argument);\n        if (!flattened) return;\n\n        if (scope.contains(flattened.name)) return;\n\n        if (\n          flattened.keypath === 'module.exports' ||\n          flattened.keypath === 'module' ||\n          flattened.keypath === 'exports'\n        ) {\n          magicString.overwrite(node.start, node.end, `'object'`, { storeName: false });\n        }\n      }\n\n      // rewrite `require` (if not already handled) `global` and `define`, and handle free references to\n      // `module` and `exports` as these mean we need to wrap the module in commonjsHelpers.createCommonjsModule\n      if (node.type === 'Identifier') {\n        if (isReference(node, parent) && !scope.contains(node.name)) {\n          if (node.name in uses) {\n            if (isRequireIdentifier(node)) {\n              if (isNodeRequireStatement(parent)) {\n                return;\n              }\n\n              if (!isDynamicRequireModulesEnabled && isStaticRequireStatement(parent)) {\n                return;\n              }\n\n              if (isDynamicRequireModulesEnabled && isRequireStatement(parent)) {\n                magicString.appendLeft(\n                  parent.end - 1,\n                  `,${JSON.stringify(\n                    dirname(id) === '.'\n                      ? null /* default behavior */\n                      : getVirtualPathForDynamicRequirePath(\n                          normalizePathSlashes(dirname(id)),\n                          commonDir\n                        )\n                  )}`\n                );\n              }\n\n              magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsRequire`, {\n                storeName: true\n              });\n              usesCommonjsHelpers = true;\n            }\n\n            uses[node.name] = true;\n            if (node.name === 'global' && !ignoreGlobal) {\n              magicString.overwrite(node.start, node.end, `${HELPERS_NAME}.commonjsGlobal`, {\n                storeName: true\n              });\n              usesCommonjsHelpers = true;\n            }\n\n            // if module or exports are used outside the context of an assignment\n            // expression, we need to wrap the module\n            if (node.name === 'module' || node.name === 'exports') {\n              shouldWrap = true;\n            }\n          }\n\n          if (node.name === 'define') {\n            magicString.overwrite(node.start, node.end, 'undefined', { storeName: true });\n          }\n\n          globals.add(node.name);\n        }\n\n        return;\n      }\n\n      // Is this an assignment to exports or module.exports?\n      if (node.type === 'AssignmentExpression') {\n        if (node.left.type !== 'MemberExpression') return;\n\n        const flattened = flatten(node.left);\n        if (!flattened) return;\n\n        if (scope.contains(flattened.name)) return;\n\n        const match = exportsPattern.exec(flattened.keypath);\n        if (!match || flattened.keypath === 'exports') return;\n\n        uses[flattened.name] = true;\n\n        // we're dealing with `module.exports = ...` or `[module.]exports.foo = ...` –\n        // if this isn't top-level, we'll need to wrap the module\n        if (programDepth > 3) shouldWrap = true;\n\n        node.left._skip = true;\n\n        if (flattened.keypath === 'module.exports' && node.right.type === 'ObjectExpression') {\n          node.right.properties.forEach((prop) => {\n            if (prop.computed || !('key' in prop) || prop.key.type !== 'Identifier') return;\n            const { name } = prop.key;\n            if (name === makeLegalIdentifier(name)) namedExports[name] = true;\n          });\n          return;\n        }\n\n        if (match[1]) namedExports[match[1]] = true;\n        return;\n      }\n\n      const name = getDefinePropertyCallName(node, 'exports');\n      if (name && name === makeLegalIdentifier(name)) namedExports[name] = true;\n\n      // if this is `var x = require('x')`, we can do `import x from 'x'`\n      if (\n        node.type === 'VariableDeclarator' &&\n        node.id.type === 'Identifier' &&\n        isStaticRequireStatement(node.init) &&\n        !isIgnoredRequireStatement(node.init)\n      ) {\n        // for now, only do this for top-level requires. maybe fix this in future\n        if (scope.parent) return;\n\n        // edge case — CJS allows you to assign to imports. ES doesn't\n        if (assignedTo.has(node.id.name)) return;\n\n        const required = getRequired(node.init, node.id.name);\n        required.importsDefault = true;\n\n        if (required.name === node.id.name && !required.isDynamic) {\n          node._shouldRemove = true;\n        }\n      }\n\n      if (!isStaticRequireStatement(node) || isIgnoredRequireStatement(node)) {\n        return;\n      }\n\n      const required = getRequired(node);\n\n      if (parent.type === 'ExpressionStatement') {\n        // is a bare import, e.g. `require('foo');`\n        magicString.remove(parent.start, parent.end);\n      } else {\n        required.importsDefault = true;\n\n        if (shouldUseSimulatedRequire(required)) {\n          magicString.overwrite(\n            node.start,\n            node.end,\n            `${HELPERS_NAME}.commonjsRequire(${JSON.stringify(\n              getVirtualPathForDynamicRequirePath(normalizePathSlashes(required.source), commonDir)\n            )}, ${JSON.stringify(\n              dirname(id) === '.'\n                ? null /* default behavior */\n                : getVirtualPathForDynamicRequirePath(normalizePathSlashes(dirname(id)), commonDir)\n            )})`\n          );\n          usesCommonjsHelpers = true;\n        } else {\n          magicString.overwrite(node.start, node.end, required.name);\n        }\n      }\n\n      node.callee._skip = true;\n    },\n\n    leave(node) {\n      programDepth -= 1;\n      if (node.scope) scope = scope.parent;\n      if (functionType.test(node.type)) lexicalDepth -= 1;\n\n      if (node.type === 'VariableDeclaration') {\n        let keepDeclaration = false;\n        let c = node.declarations[0].start;\n\n        for (let i = 0; i < node.declarations.length; i += 1) {\n          const declarator = node.declarations[i];\n\n          if (declarator._shouldRemove) {\n            magicString.remove(c, declarator.end);\n          } else {\n            if (!keepDeclaration) {\n              magicString.remove(c, declarator.start);\n              keepDeclaration = true;\n            }\n\n            c = declarator.end;\n          }\n        }\n\n        if (!keepDeclaration) {\n          magicString.remove(node.start, node.end);\n        }\n      }\n    }\n  });\n\n  if (\n    !sources.length &&\n    !uses.module &&\n    !uses.exports &&\n    !uses.require &&\n    (ignoreGlobal || !uses.global)\n  ) {\n    // not a CommonJS module\n    return null;\n  }\n\n  // If `isEsModule` is on, it means it has ES6 import/export statements,\n  //   which just can't be wrapped in a function.\n  if (isEsModule) shouldWrap = false;\n\n  usesCommonjsHelpers = usesCommonjsHelpers || shouldWrap;\n\n  const importBlock = `${(usesCommonjsHelpers\n    ? [`import * as ${HELPERS_NAME} from '${HELPERS_ID}';`]\n    : []\n  )\n    .concat(\n      sources.map(\n        ([source]) =>\n          // import the actual module before the proxy, so that we know\n          // what kind of proxy to build\n          `import '${source}';`\n      ),\n      sources\n        .filter(([, importProxy]) => importProxy)\n        .map(([source]) => {\n          const { name, importsDefault } = required[source];\n          return `import ${importsDefault ? `${name} from ` : ``}'${\n            source.startsWith('\\0') ? source : getProxyId(source)\n          }';`;\n        })\n    )\n    .join('\\n')}\\n\\n`;\n\n  const namedExportDeclarations = [];\n  let wrapperStart = '';\n  let wrapperEnd = '';\n\n  const moduleName = deconflict(scope, globals, getName(id));\n  if (!isEsModule) {\n    const exportModuleExports = {\n      str: `export { ${moduleName} as __moduleExports };`,\n      name: '__moduleExports'\n    };\n\n    namedExportDeclarations.push(exportModuleExports);\n  }\n\n  const defaultExportPropertyAssignments = [];\n  let hasDefaultExport = false;\n\n  if (shouldWrap) {\n    const args = `module${uses.exports ? ', exports' : ''}`;\n\n    wrapperStart = `var ${moduleName} = ${HELPERS_NAME}.createCommonjsModule(function (${args}) {\\n`;\n\n    wrapperEnd = `\\n}`;\n    if (isDynamicRequireModulesEnabled) {\n      wrapperEnd += `, ${JSON.stringify(\n        getVirtualPathForDynamicRequirePath(normalizePathSlashes(dirname(id)), commonDir)\n      )}`;\n    }\n\n    wrapperEnd += `);`;\n  } else {\n    const names = [];\n\n    for (const node of ast.body) {\n      if (node.type === 'ExpressionStatement' && node.expression.type === 'AssignmentExpression') {\n        const { left } = node.expression;\n        const flattened = flatten(left);\n\n        if (!flattened) {\n          continue;\n        }\n\n        const match = exportsPattern.exec(flattened.keypath);\n        if (!match) {\n          continue;\n        }\n\n        if (flattened.keypath === 'module.exports') {\n          hasDefaultExport = true;\n          magicString.overwrite(left.start, left.end, `var ${moduleName}`);\n        } else {\n          const [, name] = match;\n          const deconflicted = deconflict(scope, globals, name);\n\n          names.push({ name, deconflicted });\n\n          magicString.overwrite(node.start, left.end, `var ${deconflicted}`);\n\n          const declaration =\n            name === deconflicted\n              ? `export { ${name} };`\n              : `export { ${deconflicted} as ${name} };`;\n\n          if (name !== 'default') {\n            namedExportDeclarations.push({\n              str: declaration,\n              name\n            });\n          }\n\n          defaultExportPropertyAssignments.push(`${moduleName}.${name} = ${deconflicted};`);\n        }\n      }\n    }\n\n    if (!(isEsModule || hasDefaultExport)) {\n      wrapperEnd = `\\n\\nvar ${moduleName} = {\\n${names\n        .map(({ name, deconflicted }) => `\\t${name}: ${deconflicted}`)\n        .join(',\\n')}\\n};`;\n    }\n  }\n\n  magicString\n    .trim()\n    .prepend(importBlock + wrapperStart)\n    .trim()\n    .append(wrapperEnd);\n\n  const defaultExport =\n    code.indexOf('__esModule') >= 0\n      ? `export default /*@__PURE__*/${HELPERS_NAME}.getDefaultExportFromCjs(${moduleName});`\n      : `export default ${moduleName};`;\n\n  const named = namedExportDeclarations\n    .filter((x) => x.name !== 'default' || !hasDefaultExport)\n    .map((x) => x.str);\n\n  magicString.append(\n    `\\n\\n${(isEsModule ? [] : [defaultExport])\n      .concat(named)\n      .concat(hasDefaultExport ? defaultExportPropertyAssignments : [])\n      .join('\\n')}`\n  );\n\n  code = magicString.toString();\n  const map = sourceMap ? magicString.generateMap() : null;\n\n  return { code, map, syntheticNamedExports: isEsModule ? false : '__moduleExports' };\n}\n","import { existsSync, readFileSync } from 'fs';\nimport { join } from 'path';\n\nimport {\n  DYNAMIC_PACKAGES_ID,\n  DYNAMIC_REGISTER_PREFIX,\n  getVirtualPathForDynamicRequirePath,\n  HELPERS_ID\n} from './helpers';\nimport { normalizePathSlashes } from './transform';\n\nexport function getDynamicPackagesModule(dynamicRequireModuleDirPaths, commonDir) {\n  let code = `const commonjsRegister = require('${HELPERS_ID}?commonjsRegister');`;\n  for (const dir of dynamicRequireModuleDirPaths) {\n    let entryPoint = 'index.js';\n\n    try {\n      if (existsSync(join(dir, 'package.json'))) {\n        entryPoint =\n          JSON.parse(readFileSync(join(dir, 'package.json'), { encoding: 'utf8' })).main ||\n          entryPoint;\n      }\n    } catch (ignored) {\n      // ignored\n    }\n\n    code += `\\ncommonjsRegister(${JSON.stringify(\n      getVirtualPathForDynamicRequirePath(dir, commonDir)\n    )}, function (module, exports) {\n  module.exports = require(${JSON.stringify(normalizePathSlashes(join(dir, entryPoint)))});\n});`;\n  }\n  return code;\n}\n\nexport function getDynamicPackagesEntryIntro(\n  id,\n  dynamicRequireModuleDirPaths,\n  dynamicRequireModuleSet\n) {\n  try {\n    const code = readFileSync(id, { encoding: 'utf8' });\n    let dynamicImports = Array.from(\n      dynamicRequireModuleSet,\n      (dynamicId) => `require(${JSON.stringify(DYNAMIC_REGISTER_PREFIX + dynamicId)});`\n    ).join('\\n');\n\n    if (dynamicRequireModuleDirPaths.length) {\n      dynamicImports += `require(${JSON.stringify(\n        DYNAMIC_REGISTER_PREFIX + DYNAMIC_PACKAGES_ID\n      )});`;\n    }\n\n    return `${dynamicImports}\\n${code}`;\n  } catch (ex) {\n    this.warn(`Failed to read file ${id}, dynamic modules might not work correctly`);\n    return null;\n  }\n}\n","import { statSync } from 'fs';\n\nimport { resolve } from 'path';\n\nimport glob from 'glob';\n\nimport { normalizePathSlashes } from './transform';\n\nexport default function getDynamicRequirePaths(patterns) {\n  const dynamicRequireModuleSet = new Set();\n  for (const pattern of !patterns || Array.isArray(patterns) ? patterns || [] : [patterns]) {\n    const isNegated = pattern.startsWith('!');\n    const modifySet = Set.prototype[isNegated ? 'delete' : 'add'].bind(dynamicRequireModuleSet);\n    for (const path of glob.sync(isNegated ? pattern.substr(1) : pattern)) {\n      modifySet(normalizePathSlashes(resolve(path)));\n    }\n  }\n  const dynamicRequireModuleDirPaths = Array.from(dynamicRequireModuleSet.values()).filter(\n    (path) => {\n      try {\n        if (statSync(path).isDirectory()) return true;\n      } catch (ignored) {\n        // Nothing to do here\n      }\n      return false;\n    }\n  );\n  return { dynamicRequireModuleSet, dynamicRequireModuleDirPaths };\n}\n","/* eslint-disable no-undefined */\nconst isCjsPromises = new Map();\n\nexport function getIsCjsPromise(id) {\n  let isCjsPromise = isCjsPromises.get(id);\n  if (isCjsPromise) return isCjsPromise.promise;\n\n  const promise = new Promise((resolve) => {\n    isCjsPromise = {\n      resolve,\n      promise: undefined\n    };\n    isCjsPromises.set(id, isCjsPromise);\n  });\n  isCjsPromise.promise = promise;\n\n  return promise;\n}\n\nexport function setIsCjsPromise(id, resolution) {\n  const isCjsPromise = isCjsPromises.get(id);\n  if (isCjsPromise) {\n    if (isCjsPromise.resolve) {\n      isCjsPromise.resolve(resolution);\n      isCjsPromise.resolve = undefined;\n    }\n  } else {\n    isCjsPromises.set(id, { promise: Promise.resolve(resolution), resolve: undefined });\n  }\n}\n","import { readFileSync } from 'fs';\n\nimport { DYNAMIC_JSON_PREFIX, getVirtualPathForDynamicRequirePath, HELPERS_ID } from './helpers';\nimport { getIsCjsPromise } from './is-cjs';\nimport { normalizePathSlashes } from './transform';\nimport { getName } from './utils';\n\n// e.g. id === \"commonjsHelpers?commonjsRegister\"\nexport function getSpecificHelperProxy(id) {\n  return `export {${id.split('?')[1]} as default} from '${HELPERS_ID}';`;\n}\n\nexport function getUnknownRequireProxy(id, requireReturnsDefault) {\n  if (requireReturnsDefault === true || id.endsWith('.json')) {\n    return `export {default} from ${JSON.stringify(id)};`;\n  }\n  const name = getName(id);\n  const exported =\n    requireReturnsDefault === 'auto'\n      ? `import {getDefaultExportFromNamespaceIfNotNamed} from \"${HELPERS_ID}\"; export default /*@__PURE__*/getDefaultExportFromNamespaceIfNotNamed(${name})`\n      : requireReturnsDefault === 'preferred'\n      ? `import {getDefaultExportFromNamespaceIfPresent} from \"${HELPERS_ID}\"; export default /*@__PURE__*/getDefaultExportFromNamespaceIfPresent(${name})`\n      : `export default ${name}`;\n  return `import * as ${name} from ${JSON.stringify(id)}; ${exported}`;\n}\n\nexport function getDynamicJsonProxy(id, commonDir) {\n  const normalizedPath = normalizePathSlashes(id.slice(DYNAMIC_JSON_PREFIX.length));\n  return `const commonjsRegister = require('${HELPERS_ID}?commonjsRegister');\\ncommonjsRegister(${JSON.stringify(\n    getVirtualPathForDynamicRequirePath(normalizedPath, commonDir)\n  )}, function (module, exports) {\n  module.exports = require(${JSON.stringify(normalizedPath)});\n});`;\n}\n\nexport function getDynamicRequireProxy(normalizedPath, commonDir) {\n  return `const commonjsRegister = require('${HELPERS_ID}?commonjsRegister');\\ncommonjsRegister(${JSON.stringify(\n    getVirtualPathForDynamicRequirePath(normalizedPath, commonDir)\n  )}, function (module, exports) {\n  ${readFileSync(normalizedPath, { encoding: 'utf8' })}\n});`;\n}\n\nexport async function getStaticRequireProxy(\n  id,\n  requireReturnsDefault,\n  esModulesWithDefaultExport,\n  esModulesWithNamedExports\n) {\n  const name = getName(id);\n  const isCjs = await getIsCjsPromise(id);\n  if (isCjs) {\n    return `import { __moduleExports } from ${JSON.stringify(id)}; export default __moduleExports;`;\n  } else if (isCjs === null) {\n    return getUnknownRequireProxy(id, requireReturnsDefault);\n  } else if (\n    requireReturnsDefault !== true &&\n    (!requireReturnsDefault ||\n      !esModulesWithDefaultExport.has(id) ||\n      (esModulesWithNamedExports.has(id) && requireReturnsDefault === 'auto'))\n  ) {\n    return `import * as ${name} from ${JSON.stringify(id)}; export default ${name};`;\n  }\n  return `export {default} from ${JSON.stringify(id)};`;\n}\n","/* eslint-disable no-param-reassign, no-undefined */\n\nimport { statSync } from 'fs';\nimport { dirname, resolve, sep } from 'path';\n\nimport {\n  DYNAMIC_JSON_PREFIX,\n  DYNAMIC_PACKAGES_ID,\n  getExternalProxyId,\n  getIdFromProxyId,\n  getProxyId,\n  HELPERS_ID,\n  PROXY_SUFFIX\n} from './helpers';\n\nfunction getCandidatesForExtension(resolved, extension) {\n  return [resolved + extension, `${resolved}${sep}index${extension}`];\n}\n\nfunction getCandidates(resolved, extensions) {\n  return extensions.reduce(\n    (paths, extension) => paths.concat(getCandidatesForExtension(resolved, extension)),\n    [resolved]\n  );\n}\n\nexport default function getResolveId(extensions) {\n  function resolveExtensions(importee, importer) {\n    // not our problem\n    if (importee[0] !== '.' || !importer) return undefined;\n\n    const resolved = resolve(dirname(importer), importee);\n    const candidates = getCandidates(resolved, extensions);\n\n    for (let i = 0; i < candidates.length; i += 1) {\n      try {\n        const stats = statSync(candidates[i]);\n        if (stats.isFile()) return { id: candidates[i] };\n      } catch (err) {\n        /* noop */\n      }\n    }\n\n    return undefined;\n  }\n\n  function resolveId(importee, importer) {\n    const isProxyModule = importee.endsWith(PROXY_SUFFIX);\n    if (isProxyModule) {\n      importee = getIdFromProxyId(importee);\n    }\n    if (importee.startsWith('\\0')) {\n      if (\n        importee.startsWith(HELPERS_ID) ||\n        importee === DYNAMIC_PACKAGES_ID ||\n        importee.startsWith(DYNAMIC_JSON_PREFIX)\n      ) {\n        return importee;\n      }\n      if (!isProxyModule) {\n        return null;\n      }\n    }\n\n    if (importer && importer.endsWith(PROXY_SUFFIX)) {\n      importer = getIdFromProxyId(importer);\n    }\n\n    return this.resolve(importee, importer, { skipSelf: true }).then((resolved) => {\n      if (!resolved) {\n        resolved = resolveExtensions(importee, importer);\n      }\n      if (isProxyModule) {\n        if (!resolved) {\n          return { id: getExternalProxyId(importee), external: false };\n        }\n        resolved.id = (resolved.external ? getExternalProxyId : getProxyId)(resolved.id);\n        resolved.external = false;\n        return resolved;\n      }\n      return resolved;\n    });\n  }\n\n  return resolveId;\n}\n","import { extname } from 'path';\n\nimport { createFilter } from '@rollup/pluginutils';\nimport getCommonDir from 'commondir';\n\nimport { peerDependencies } from '../package.json';\n\nimport { getDynamicPackagesEntryIntro, getDynamicPackagesModule } from './dynamic-packages-manager';\nimport getDynamicRequirePaths from './dynamic-require-paths';\nimport {\n  DYNAMIC_JSON_PREFIX,\n  DYNAMIC_PACKAGES_ID,\n  EXTERNAL_SUFFIX,\n  getHelpersModule,\n  getIdFromExternalProxyId,\n  getIdFromProxyId,\n  HELPERS_ID,\n  PROXY_SUFFIX\n} from './helpers';\nimport { setIsCjsPromise } from './is-cjs';\nimport {\n  getDynamicJsonProxy,\n  getDynamicRequireProxy,\n  getSpecificHelperProxy,\n  getStaticRequireProxy,\n  getUnknownRequireProxy\n} from './proxies';\nimport getResolveId from './resolve-id';\nimport {\n  checkEsModule,\n  hasCjsKeywords,\n  normalizePathSlashes,\n  transformCommonjs\n} from './transform';\n\nexport default function commonjs(options = {}) {\n  const extensions = options.extensions || ['.js'];\n  const filter = createFilter(options.include, options.exclude);\n  const {\n    ignoreGlobal,\n    requireReturnsDefault: requireReturnsDefaultOption,\n    esmExternals\n  } = options;\n  const getRequireReturnsDefault =\n    typeof requireReturnsDefaultOption === 'function'\n      ? requireReturnsDefaultOption\n      : () => requireReturnsDefaultOption;\n  let esmExternalIds;\n  const isEsmExternal =\n    typeof esmExternals === 'function'\n      ? esmExternals\n      : Array.isArray(esmExternals)\n      ? ((esmExternalIds = new Set(esmExternals)), (id) => esmExternalIds.has(id))\n      : () => esmExternals;\n\n  const { dynamicRequireModuleSet, dynamicRequireModuleDirPaths } = getDynamicRequirePaths(\n    options.dynamicRequireTargets\n  );\n  const isDynamicRequireModulesEnabled = dynamicRequireModuleSet.size > 0;\n  const commonDir = isDynamicRequireModulesEnabled\n    ? getCommonDir(null, Array.from(dynamicRequireModuleSet).concat(process.cwd()))\n    : null;\n\n  const esModulesWithDefaultExport = new Set();\n  const esModulesWithNamedExports = new Set();\n\n  const ignoreRequire =\n    typeof options.ignore === 'function'\n      ? options.ignore\n      : Array.isArray(options.ignore)\n      ? (id) => options.ignore.includes(id)\n      : () => false;\n\n  const resolveId = getResolveId(extensions);\n\n  const sourceMap = options.sourceMap !== false;\n\n  function transformAndCheckExports(code, id) {\n    const { isEsModule, hasDefaultExport, hasNamedExports, ast } = checkEsModule(\n      this.parse,\n      code,\n      id\n    );\n    if (hasDefaultExport) {\n      esModulesWithDefaultExport.add(id);\n    }\n    if (hasNamedExports) {\n      esModulesWithNamedExports.add(id);\n    }\n\n    if (\n      !dynamicRequireModuleSet.has(normalizePathSlashes(id)) &&\n      (!hasCjsKeywords(code, ignoreGlobal) || (isEsModule && !options.transformMixedEsModules))\n    ) {\n      setIsCjsPromise(id, false);\n      return null;\n    }\n\n    const transformed = transformCommonjs(\n      this.parse,\n      code,\n      id,\n      isEsModule,\n      ignoreGlobal || isEsModule,\n      ignoreRequire,\n      sourceMap,\n      isDynamicRequireModulesEnabled,\n      dynamicRequireModuleSet,\n      commonDir,\n      ast\n    );\n\n    setIsCjsPromise(id, isEsModule ? false : Boolean(transformed));\n    return transformed;\n  }\n\n  return {\n    name: 'commonjs',\n\n    buildStart() {\n      if (options.namedExports != null) {\n        this.warn(\n          'The namedExports option from \"@rollup/plugin-commonjs\" is deprecated. Named exports are now handled automatically.'\n        );\n      }\n\n      const [major, minor] = this.meta.rollupVersion.split('.').map(Number);\n      const minVersion = peerDependencies.rollup.slice(2);\n      const [minMajor, minMinor] = minVersion.split('.').map(Number);\n      if (major < minMajor || (major === minMajor && minor < minMinor)) {\n        this.error(\n          `Insufficient Rollup version: \"@rollup/plugin-commonjs\" requires at least rollup@${minVersion} but found rollup@${this.meta.rollupVersion}.`\n        );\n      }\n    },\n\n    resolveId,\n\n    load(id) {\n      if (id === HELPERS_ID) {\n        return getHelpersModule(isDynamicRequireModulesEnabled);\n      }\n\n      if (id.startsWith(HELPERS_ID)) {\n        return getSpecificHelperProxy(id);\n      }\n\n      if (id.endsWith(EXTERNAL_SUFFIX)) {\n        const actualId = getIdFromExternalProxyId(id);\n        return getUnknownRequireProxy(\n          actualId,\n          isEsmExternal(actualId) ? getRequireReturnsDefault(actualId) : true\n        );\n      }\n\n      if (id === DYNAMIC_PACKAGES_ID) {\n        return getDynamicPackagesModule(dynamicRequireModuleDirPaths, commonDir);\n      }\n\n      if (id.startsWith(DYNAMIC_JSON_PREFIX)) {\n        return getDynamicJsonProxy(id, commonDir);\n      }\n\n      const normalizedPath = normalizePathSlashes(id);\n      if (dynamicRequireModuleSet.has(normalizedPath) && !normalizedPath.endsWith('.json')) {\n        return getDynamicRequireProxy(normalizedPath, commonDir);\n      }\n\n      if (id.endsWith(PROXY_SUFFIX)) {\n        const actualId = getIdFromProxyId(id);\n        return getStaticRequireProxy(\n          actualId,\n          getRequireReturnsDefault(actualId),\n          esModulesWithDefaultExport,\n          esModulesWithNamedExports\n        );\n      }\n\n      if (isDynamicRequireModulesEnabled && this.getModuleInfo(id).isEntry) {\n        return getDynamicPackagesEntryIntro(\n          id,\n          dynamicRequireModuleDirPaths,\n          dynamicRequireModuleSet\n        );\n      }\n\n      return null;\n    },\n\n    transform(code, id) {\n      const extName = extname(id);\n      if (extName !== '.cjs' && id !== DYNAMIC_PACKAGES_ID && !id.startsWith(DYNAMIC_JSON_PREFIX)) {\n        if (!filter(id) || !extensions.includes(extName)) {\n          setIsCjsPromise(id, null);\n          return null;\n        }\n      }\n\n      let transformed;\n      try {\n        transformed = transformAndCheckExports.call(this, code, id);\n      } catch (err) {\n        transformed = null;\n        setIsCjsPromise(id, false);\n        this.error(err, err.loc);\n      }\n\n      return transformed;\n    }\n  };\n}\n"],"names":["makeLegalIdentifier","basename","extname","dirname","sep","attachScopes","nodeResolveSync","resolve","walk","extractAssignedNames","existsSync","join","readFileSync","path","statSync","createFilter"],"mappings":"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"}
\ No newline at end of file
